/**
 * Интерфейс для представления ошибки.
 */
export interface IError {
  /** Флаг статуса ошибки (true для успешных операций, false для ошибок). */
  status: boolean;

  /** Описание ошибки (необязательное поле, может быть пустым). */
  message?: string;
}

/**
 * Интерфейс для представления валидационной ошибки.
 */
export interface IValidationError {
  /** Имя поля, которое вызвало ошибку. */
  field: string;

  /** Описание ошибки для поля. */
  message: string;
}

/**
 * Интерфейс для представления переменных валидации.
 */
export interface IValidationVariables {
  /** Флаг статуса валидации. */
  status: boolean;

  /** Список ошибок валидации. */
  errors: IValidationError[];
}

/**
 * Интерфейс для представления ошибки HTTP.
 */
export interface HttpError {
  /** Код состояния HTTP (например, 400, 404, 500). */
  statusCode: number;

  /** Сообщение об ошибке. */
  message: string;

  /** Путь запроса, вызвавшего ошибку. */
  path: string;

  /** HTTP метод, при котором произошла ошибка (например, GET, POST). */
  method: string;

  /** Флаг завершенности обработки ошибки. */
  complete: boolean;

  /** Временная метка ошибки. */
  timestamp: string;
}

/**
 * Интерфейс для представления журнальной записи.
 */
export interface ILogger {
  /**
   * Наименование службы, генерирующей запись журнала.
   * Например: "AuthService", "ClientService" и т. д.(для каждой службы должен быть свой тип журнала)
   */
  serviceName: string;

  /**
   * Сообщение журнала.
   * Описывает событие или ошибку, которые произошли.
   */
  message: string;

  /**
   * Тип журнала.
   * Например: "INFO" для информационных сообщений, "ERROR" для ошибок, "DEBUG" для отладки.
   */
  type: string;
}
