var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/ApimeConnectionGuard.html",[0,3.903,1,3.649]],["body/guards/ApimeConnectionGuard.html",[1,5.702,2,4.753,3,0.072,4,0.072,5,0.064,6,4.819,7,5.796,8,0.187,9,2.582,10,3.124,11,7.721,12,2.051,13,4.753,14,5.79,15,1.576,16,5.796,17,1.887,18,0.007,19,0.77,20,0.228,21,1.526,22,7.319,23,7.345,24,5.796,25,3.525,26,1.939,27,3.142,28,0.784,29,5.385,30,4.444,31,2.197,32,1.521,33,3.005,34,4.444,35,4.753,36,1.599,37,1.269,38,1.805,39,0.072,40,0.432,41,2.36,42,2.774,43,2.264,44,2.997,45,7.435,46,5.796,47,3.992,48,3.402,49,6.098,50,5.796,51,5.084,52,3.854,53,7.435,54,5.796,55,5.796,56,4.753,57,5.796,58,7.435,59,3.094,60,5.796,61,2.357,62,2.159,63,7.435,64,5.796,65,5.796,66,4.753,67,0.005,68,0.005]],["title/modules/ApimeIntegrationModule.html",[69,1.684,70,3.446]],["body/modules/ApimeIntegrationModule.html",[1,7.113,3,0.063,4,0.063,5,0.056,6,2.956,10,1.816,14,6.02,18,0.007,20,0.155,26,2.268,27,1.927,28,0.885,32,1.321,33,2.611,34,3.861,36,1.389,37,1.103,38,1.568,39,0.063,40,0.376,44,1.685,51,2.956,52,3.017,61,1.596,67,0.004,68,0.004,69,2.901,70,6.9,71,2.351,72,2.41,73,2.54,74,2.54,75,2.473,76,3.763,77,3.763,78,4.489,79,4.489,80,4.489,81,6.273,82,3.419,83,2.54,84,2.54,85,4.489,86,4.489,87,6.832,88,3.063,89,4.123,90,5.802,91,2.769,92,6.284,93,2.956,94,5.035,95,4.489,96,0.34,97,3.41,98,5.023,99,3.618,100,4.489,101,0.376,102,6.723,103,0.358,104,6.043,105,2.611,106,0.804,107,6.043,108,6.043,109,6.043,110,6.043,111,4.489,112,2.687,113,4.669,114,2.241,115,4.489,116,2.611,117,6.778,118,5.035,119,5.035,120,2.351,121,3.468,122,5.035,123,5.035,124,4.489,125,4.129,126,2.41,127,3.315]],["title/injectables/ApimeIntegrationService.html",[14,3.007,31,1.406]],["body/injectables/ApimeIntegrationService.html",[3,0.059,4,0.059,5,0.053,6,4.708,8,0.154,9,2.59,10,3.13,12,1.317,14,4.132,15,1.581,17,1.659,18,0.007,19,0.677,20,0.246,21,1.342,26,2.684,27,3.07,28,0.828,31,1.932,32,1.253,33,4.606,36,1.317,37,1.046,38,1.487,39,0.059,40,0.356,43,1.865,44,2.495,59,2.721,61,2.749,62,2.165,67,0.004,68,0.004,85,7.15,88,2.905,96,0.212,103,0.53,114,2.125,116,3.867,126,3.839,128,2.125,129,4.257,130,5.718,131,7.15,132,3.458,133,5.975,134,4.775,135,4.257,136,3.459,137,3.867,138,4.775,139,1.139,140,2.69,141,4.712,142,2.104,143,4.775,144,3.662,145,4.736,146,3.662,147,5.363,148,4.775,149,3.289,150,3.458,151,2.476,152,4.504,153,4.132,154,5.363,155,4.775,156,4.305,157,4.504,158,3.977,159,4.504,160,2.286,161,4.504,162,4.775,163,7.456,164,6.538,165,5.83,166,4.775,167,3.144,168,4.91,169,4.775,170,4.775,171,3.144,172,3.144,173,4.775,174,4.775,175,3.662,176,3.662]],["title/injectables/ApimeTokenInterceptor.html",[31,1.406,177,4.243]],["body/injectables/ApimeTokenInterceptor.html",[3,0.063,4,0.063,5,0.056,6,4.52,8,0.164,9,2.369,12,2.124,13,4.168,14,5.798,15,1.446,17,1.731,18,0.007,19,0.706,20,0.209,21,1.399,23,7.039,25,4.149,26,2.282,28,0.735,31,2.015,32,1.333,33,2.635,34,3.897,39,0.063,40,0.509,41,2.07,42,2.433,43,1.985,44,1.701,61,2.44,67,0.004,68,0.004,96,0.381,97,3.427,112,2.712,114,3.427,128,2.262,172,3.346,177,6.864,178,5.082,179,7.698,180,5.082,181,6.82,182,8.228,183,8.582,184,5.082,185,8.228,186,6.82,187,3.897,188,5.082,189,5.082,190,3.897,191,4.168,192,5.082,193,5.082,194,5.082,195,6.82]],["title/controllers/AppController.html",[196,2.617,197,3.903]],["body/controllers/AppController.html",[3,0.072,4,0.072,5,0.065,8,0.188,9,2.592,15,1.582,17,1.48,18,0.007,19,0.853,20,0.179,21,1.196,26,2.905,28,0.713,32,1.53,39,0.072,40,0.435,43,2.278,61,2.366,67,0.005,68,0.005,96,0.365,103,0.663,114,4.206,131,7.999,151,3.024,196,4.106,197,6.122,198,3.024,199,5.831,200,8.233,201,2.244,202,7.464,203,5.831,204,6.313,205,3.752,206,5.831,207,7.464,208,5.831,209,3.426,210,5.963,211,5.199,212,7.464,213,5.831]],["title/injectables/AppLoggerLoki.html",[31,1.406,214,3.649]],["body/injectables/AppLoggerLoki.html",[3,0.077,4,0.043,5,0.038,8,0.111,9,1.792,10,3.055,12,2.038,15,1.566,17,1.573,18,0.007,19,0.642,20,0.212,21,1.272,25,5.036,26,2.074,28,0.768,31,2.036,32,1.354,39,0.064,40,0.385,41,2.102,42,3.299,43,2.692,52,3.288,62,1.499,67,0.003,68,0.003,96,0.367,97,3.769,101,0.385,103,0.688,114,3.453,116,3.214,126,1.644,128,1.529,142,1.808,165,4.601,214,4.753,215,3.435,216,6.198,217,3.03,218,5.161,219,6.198,220,5.544,221,3.435,222,3.667,223,6.198,224,5.68,225,3.435,226,3.398,227,6.198,228,3.435,229,6.198,230,2.488,231,2.017,232,5.161,233,6.891,234,7.551,235,6.891,236,4.336,237,5.161,238,4.601,239,6.891,240,5.161,241,5.161,242,5.161,243,6.198,244,6.198,245,6.198,246,5.161,247,5.161,248,5.161,249,5.161,250,3.435,251,3.063,252,3.435,253,3.435,254,3.435,255,3.435,256,3.435,257,2.754,258,3.063,259,3.435,260,3.435,261,4.601,262,2.488,263,2.93,264,5.161,265,5.161,266,3.738,267,3.435,268,6.891,269,5.161,270,5.161,271,6.198,272,3.435,273,3.435,274,3.435,275,3.435,276,2.818,277,3.435,278,3.435,279,3.063,280,3.435,281,3.435,282,3.435,283,3.435,284,3.435]],["title/injectables/AppService.html",[31,1.406,210,3.446]],["body/injectables/AppService.html",[3,0.084,4,0.084,5,0.075,8,0.219,9,2.85,15,1.44,18,0.007,19,0.703,20,0.209,26,2.746,28,0.648,31,2.425,32,1.782,39,0.084,40,0.507,61,2.152,67,0.005,68,0.005,96,0.301,97,3.023,103,0.482,128,3.023,204,5.208,209,2.826,210,5.944,222,4.175,285,6.791,286,9.38,287,6.791,288,5.208,289,6.791,290,6.791]],["title/modules/AuthModule.html",[69,1.684,291,3.446]],["body/modules/AuthModule.html",[3,0.087,4,0.087,5,0.078,18,0.006,28,0.798,32,1.838,39,0.087,40,0.522,67,0.005,68,0.005,69,3.163,71,3.27,72,3.353,73,3.533,74,3.533,75,3.44,76,4.389,77,4.389,82,4.217,83,3.533,84,3.533,198,3.632,291,7.027,292,6.245,293,6.245,294,6.245,295,6.064,296,7.004,297,7.004]],["title/injectables/AuthService.html",[31,1.406,295,2.895]],["body/injectables/AuthService.html",[3,0.095,4,0.095,5,0.084,18,0.006,28,0.728,31,2.596,32,2,39,0.095,40,0.569,67,0.006,68,0.006,128,3.393,295,5.344,298,7.623]],["title/classes/BalanceClientSearchDTO.html",[40,0.355,299,3.903]],["body/classes/BalanceClientSearchDTO.html",[3,0.078,4,0.078,5,0.07,8,0.202,12,1.731,15,1.657,17,1.592,18,0.007,19,0.65,20,0.24,21,1.287,28,0.813,39,0.078,40,0.468,41,3.184,67,0.005,68,0.005,96,0.395,101,0.583,201,1.886,299,7.311,300,1.989,301,4.183,302,6.275,303,7.779,304,4.183,305,7.818,306,7.779,307,7.818,308,2.354,309,3.118,310,2.523,311,1.954,312,6.275,313,0.744,314,6.275]],["title/controllers/BrokerMessage.html",[196,2.617,315,3.903]],["body/controllers/BrokerMessage.html",[3,0.092,4,0.092,5,0.082,12,2.046,18,0.006,28,0.825,32,1.945,39,0.092,40,0.553,42,3.549,52,3.3,67,0.006,68,0.006,196,4.756,198,3.845,276,7.091,315,7.091,316,7.414,317,6.611,318,4.882,319,7.414]],["title/classes/CategoryDto.html",[40,0.355,320,3.007]],["body/classes/CategoryDto.html",[3,0.042,4,0.042,5,0.037,8,0.108,12,1.684,15,1.293,17,0.85,18,0.007,19,0.934,20,0.187,21,0.687,28,0.649,39,0.099,40,0.595,41,1.363,62,2.385,67,0.003,68,0.003,96,0.432,101,0.378,103,0.677,106,1.079,139,1.537,142,1.328,201,1.521,205,2.781,300,1.061,301,3.341,308,1.899,309,3.276,310,3.066,311,1.042,313,0.397,320,5.041,321,2.893,322,2.204,323,4.137,324,5.061,325,3.347,326,3.899,327,2.423,328,2.306,329,3.284,330,1.208,331,2.784,332,2.204,333,4.616,334,3.357,335,4.137,336,4.018,337,2.204,338,4.616,339,4.616,340,2.553,341,3.209,342,3.677,343,2.119,344,3.078,345,2.571,346,2.784,347,3.332,348,1.965,349,2.204,350,3.079,351,3.198,352,2.624,353,2.204,354,2.204,355,4.288,356,3.078,357,3.465,358,2.204,359,3.465,360,2.204,361,2.204,362,2.204,363,3.079,364,1.841,365,2.873,366,1.787,367,1.49]],["title/classes/ClientDataDTO.html",[40,0.355,368,3.007]],["body/classes/ClientDataDTO.html",[3,0.037,4,0.037,5,0.033,8,0.096,12,1.273,15,1.865,17,0.753,18,0.007,19,0.478,20,0.27,21,0.609,28,0.61,39,0.057,40,0.344,41,2.306,62,2.605,67,0.003,68,0.003,96,0.432,101,0.344,103,0.695,106,1.002,139,0.517,201,2.615,299,3.785,300,0.941,301,4.366,308,3.264,309,2.258,310,3.042,311,0.924,313,0.352,326,2.463,327,2.209,329,3.109,330,1.071,340,2.278,341,3.504,343,2.745,345,2.558,346,1.633,348,1.742,350,1.805,368,4.036,369,2.968,370,2.781,371,3.602,372,3.964,373,3.987,374,3.602,375,3.69,376,3.597,377,3.614,378,3.289,379,3.755,380,3.964,381,2.968,382,4.806,383,6.27,384,4.615,385,2.968,386,2.968,387,2.968,388,4.115,389,4.115,390,4.115,391,2.968,392,2.968,393,2.968,394,2.968,395,2.968,396,2.968,397,2.968,398,2.968,399,2.968,400,2.968,401,2.646,402,1.497,403,1.497,404,3.785,405,3.785,406,1.421,407,3.785,408,1.539,409,2.968,410,2.968,411,2.968,412,2.968,413,2.968,414,2.646,415,2.968,416,2.968,417,2.968,418,2.968]],["title/classes/ClientFilterInput.html",[40,0.355,419,3.278]],["body/classes/ClientFilterInput.html",[3,0.057,4,0.057,5,0.051,8,0.147,15,1.542,18,0.007,20,0.223,21,1.754,28,0.694,36,1.257,37,0.998,38,1.419,39,0.098,40,0.616,62,2.483,67,0.004,68,0.004,96,0.424,101,0.472,103,0.607,106,0.751,201,2.187,222,3.897,300,1.444,308,1.71,309,2.525,310,3.024,311,1.419,327,3.031,331,2.507,340,1.279,341,3.34,356,2.299,364,2.507,365,3.595,366,2.432,367,2.028,368,4.597,374,2.077,378,3.271,419,4.361,420,3.67,421,3.495,422,5.694,423,5.269,424,5.177,425,4.557,426,4.557,427,4.586,428,4.586,429,4.586,430,4.586,431,4.557,432,5.177,433,4.557,434,4.557,435,4.586,436,4.586,437,4.586,438,4.557,439,5.177,440,4.557,441,4.557,442,4.464,443,3.001,444,3.001,445,4.968,446,4.615,447,2.507,448,4.271,449,3.001,450,3.495,451,3.301,452,3.001,453,5.177,454,4.426,455,4.597,456,3.001,457,3.001,458,3.001,459,3.495,460,3.495,461,3.495,462,3.139,463,1.817,464,3.301,465,3.495,466,2.675,467,3.139,468,3.495]],["title/modules/ClientModule.html",[69,1.684,469,3.446]],["body/modules/ClientModule.html",[3,0.078,4,0.078,5,0.07,18,0.006,28,0.894,32,1.654,36,2.355,37,1.869,39,0.078,40,0.47,67,0.005,68,0.005,69,3.021,71,2.944,72,3.018,73,3.181,74,3.181,75,3.097,76,4.192,77,4.192,82,3.956,83,3.181,84,3.181,99,4.186,469,7.179,470,5.622,471,5.622,472,5.622,473,5.622,474,6.449,475,5.916,476,5.695,477,7.358,478,5.776,479,6.306,480,4.836,481,3.836,482,6.306,483,4.344,484,4.836]],["title/classes/ClientResolver.html",[40,0.355,477,3.649]],["body/classes/ClientResolver.html",[3,0.072,4,0.072,5,0.064,8,0.186,9,2.575,10,2.955,12,1.592,15,1.571,17,1.881,18,0.006,19,0.895,20,0.228,21,1.521,25,5.44,26,1.931,27,2.838,28,0.874,29,4.179,30,4.424,32,1.514,35,4.732,36,2.045,37,1.623,38,1.796,39,0.072,40,0.43,43,2.254,44,2.741,47,3.974,51,3.387,52,2.568,59,3.409,61,1.829,67,0.005,68,0.005,96,0.329,103,0.582,126,2.762,130,6.282,136,2.956,137,4.248,141,4.684,142,1.514,144,4.424,145,5.369,146,4.424,151,2.992,201,1.734,209,3.085,300,1.829,311,1.796,341,2.254,401,6.61,477,5.685,478,5.373,480,4.424,484,4.424,485,5.769,486,5.769,487,5.769,488,5.769,489,3.974,490,6.08,491,6.61,492,5.369,493,5.769,494,5.106,495,5.769,496,4.424,497,3.974,498,5.769,499,4.424,500,2.762,501,3.799,502,4.732,503,5.369,504,8.191,505,5.769,506,5.769,507,5.769,508,5.144,509,5.769]],["title/injectables/ClientService.html",[31,1.406,478,2.794]],["body/injectables/ClientService.html",[3,0.043,4,0.043,5,0.038,8,0.111,9,1.801,10,3.061,12,1.431,15,1.465,17,1.755,18,0.007,19,0.716,20,0.212,21,1.418,26,2.313,27,2.977,28,0.66,31,1.532,32,0.907,36,1.717,37,1.363,38,1.076,39,0.043,40,0.258,42,2.482,43,2.026,44,2.602,59,1.439,61,2.191,67,0.003,68,0.003,103,0.442,114,2.308,128,1.539,136,2.757,137,3.585,139,1.084,140,2.91,141,4.368,142,0.907,257,1.845,343,1.801,376,1.698,378,1.439,406,1.655,478,3.044,481,2.103,483,2.381,490,5.103,492,4.507,508,6.164,510,3.457,511,6.222,512,4.623,513,2.836,514,4.368,515,5.103,516,4.552,517,3.457,518,4.253,519,3.457,520,5.301,521,3.457,522,8.295,523,6.913,524,6.913,525,7.777,526,6.164,527,4.623,528,4.623,529,4.623,530,4.623,531,4.623,532,4.623,533,4.623,534,4.623,535,3.082,536,3.457,537,5.185,538,3.457,539,3.457,540,3.457,541,3.457,542,3.457,543,2.482,544,3.457,545,3.082,546,3.457,547,3.457,548,3.457,549,2.836,550,3.457,551,3.457,552,3.457,553,3.457,554,5.185,555,3.457,556,1.539,557,3.457,558,2.836,559,3.457,560,3.457,561,3.457,562,3.932,563,5.301,564,8.64,565,5.185,566,5.185,567,6.222,568,6.913,569,3.457,570,3.457,571,3.457,572,3.457,573,5.185,574,3.457,575,7.777,576,3.277,577,3.457,578,3.457,579,3.457,580,6.222,581,6.222,582,3.457,583,3.457,584,3.457]],["title/classes/ClientsSearchInputDTO.html",[40,0.355,462,3.278]],["body/classes/ClientsSearchInputDTO.html",[3,0.06,4,0.06,5,0.054,8,0.157,15,1.404,18,0.007,20,0.203,28,0.719,36,1.343,37,1.066,38,1.515,39,0.1,40,0.631,62,2.187,67,0.004,68,0.004,96,0.425,101,0.494,103,0.634,106,0.893,201,1.991,222,3.432,300,1.543,308,2.485,309,2.642,310,3.058,311,1.515,327,3.171,331,2.677,340,1.366,341,2.942,356,2.455,364,2.677,365,3.761,366,2.598,367,2.166,368,4.759,374,2.218,378,2.756,419,3.352,420,3.516,421,3.732,422,4.798,423,3.525,424,4.959,427,3.525,428,3.525,429,3.525,430,3.525,432,4.959,435,3.525,436,3.525,437,3.525,439,4.959,442,4.59,443,3.205,444,3.205,445,5.108,446,4.964,447,2.677,448,4.746,449,3.205,450,3.732,451,3.525,452,3.205,453,5.323,454,4.581,455,4.759,456,3.205,457,3.205,458,3.205,459,3.732,460,3.732,461,3.732,462,4.563,463,3.003,464,3.525,465,3.732,466,4.421,467,3.352,468,3.732,585,4.867,586,4.867,587,4.867]],["title/classes/ClientsSearchedDTO.html",[40,0.355,467,3.278]],["body/classes/ClientsSearchedDTO.html",[3,0.061,4,0.061,5,0.054,8,0.158,15,1.412,18,0.007,20,0.204,28,0.722,36,1.353,37,1.074,38,1.527,39,0.101,40,0.633,62,2.195,67,0.004,68,0.004,96,0.426,101,0.497,103,0.621,106,0.897,201,2.002,222,3.445,300,1.554,308,2.498,309,2.655,310,3.061,311,1.527,327,3.187,331,2.698,340,1.376,341,2.953,356,2.474,364,2.698,365,3.781,366,4.035,367,3.365,368,5.124,374,2.235,378,2.771,419,3.378,420,3.53,421,3.761,422,4.823,423,3.552,424,4.978,427,3.552,428,3.552,429,3.552,430,3.552,432,4.978,435,3.552,436,3.552,437,3.552,439,4.978,442,4.604,443,3.229,444,3.229,445,5.124,446,4.761,447,2.698,448,4.439,449,3.229,450,3.761,451,3.552,452,3.229,453,5.34,454,4.599,455,4.778,456,3.229,457,3.229,458,3.229,459,3.761,460,3.761,461,3.761,462,3.378,463,1.956,464,3.552,465,3.761,466,2.879,467,4.587,468,3.761,588,4.904,589,4.904]],["title/interfaces/Configuration.html",[120,2.222,590,0.059]],["body/interfaces/Configuration.html",[3,0.048,4,0.048,5,0.043,8,0.125,18,0.007,20,0.269,33,4.447,39,0.107,67,0.004,68,0.004,93,4.562,96,0.371,97,2.514,101,0.421,103,0.696,105,2.929,106,0.867,120,2.637,137,2.013,217,2.279,236,3.316,263,3.207,313,0.46,590,0.116,591,2.453,592,4.621,593,4.448,594,5.419,595,4.621,596,4.933,597,4.621,598,5.215,599,4.448,600,4.562,601,3.207,602,4.727,603,4.727,604,4.208,605,4.562,606,2.453,607,2.453,608,4.05,609,3.569,610,3.569,611,3.436,612,2.361,613,2.453,614,2.361,615,4.208,616,2.453,617,3.187,618,2.453,619,3.569,620,3.107,621,4.274,622,2.453,623,3.569,624,2.361,625,2.361]],["title/interfaces/ConfigurationApiMe.html",[93,2.794,590,0.059]],["body/interfaces/ConfigurationApiMe.html",[3,0.052,4,0.052,5,0.046,8,0.135,18,0.007,20,0.183,33,4.438,39,0.109,67,0.004,68,0.004,93,4.443,96,0.38,97,1.861,101,0.445,103,0.698,105,3.09,106,0.707,120,1.952,137,2.168,217,2.454,236,2.454,263,3.383,313,0.496,590,0.117,591,2.642,592,2.642,593,2.543,594,4.782,595,2.642,596,4.223,597,2.642,598,4.882,599,2.543,600,4.076,601,2.374,602,4.223,603,4.223,604,3.765,605,4.076,606,2.642,607,2.642,608,4.223,609,3.765,610,3.765,611,3.625,612,2.543,613,2.642,614,2.543,615,5.255,616,2.642,617,3.323,618,2.642,619,5.255,620,3.278,621,4.401,622,2.642,623,3.765,624,2.543,625,2.543]],["title/interfaces/ConfigurationBroker.html",[590,0.059,600,2.794]],["body/interfaces/ConfigurationBroker.html",[3,0.051,4,0.051,5,0.046,8,0.133,18,0.007,20,0.212,33,4.131,39,0.108,67,0.004,68,0.004,93,4.051,96,0.378,97,1.841,101,0.441,103,0.697,105,4.297,106,0.701,120,1.931,137,2.144,217,2.428,236,2.428,263,3.357,313,0.49,590,0.117,591,2.613,592,2.613,593,2.515,594,4.758,595,2.613,596,4.198,597,2.613,598,4.865,599,2.515,600,4.421,601,2.348,602,4.198,603,4.198,604,3.736,605,4.051,606,4.758,607,4.758,608,4.846,609,3.736,610,3.736,611,3.596,612,2.515,613,2.613,614,2.515,615,4.361,616,2.613,617,3.303,618,2.613,619,3.736,620,3.252,621,4.382,622,2.613,623,3.736,624,2.515,625,2.515]],["title/interfaces/ConfigurationBrokerQueue.html",[590,0.059,608,2.895]],["body/interfaces/ConfigurationBrokerQueue.html",[3,0.051,4,0.051,5,0.046,8,0.133,18,0.007,20,0.212,33,4.133,39,0.108,67,0.004,68,0.004,93,4.054,96,0.378,97,1.843,101,0.441,103,0.7,105,3.068,106,0.702,120,1.933,137,2.147,217,2.43,236,2.43,263,3.359,313,0.491,590,0.117,591,2.616,592,2.616,593,2.518,594,4.761,595,2.616,596,4.2,597,2.616,598,4.866,599,2.518,600,4.054,601,2.35,602,4.2,603,4.2,604,3.739,605,4.054,606,2.616,607,2.616,608,4.583,609,5.238,610,5.238,611,5.042,612,2.518,613,2.616,614,2.518,615,4.363,616,2.616,617,3.305,618,2.616,619,3.739,620,3.255,621,4.384,622,2.616,623,3.739,624,2.518,625,2.518]],["title/interfaces/ConfigurationKafka.html",[590,0.059,602,2.895]],["body/interfaces/ConfigurationKafka.html",[3,0.052,4,0.052,5,0.046,8,0.134,18,0.007,20,0.212,33,4.136,39,0.109,67,0.004,68,0.004,93,4.059,96,0.379,97,1.847,101,0.442,103,0.7,105,3.073,106,0.703,120,1.937,137,3.911,217,2.436,236,2.436,263,3.365,313,0.492,590,0.117,591,2.622,592,2.622,593,2.524,594,5.04,595,2.622,596,4.205,597,2.622,598,4.87,599,2.524,600,4.059,601,2.355,602,4.588,603,4.205,604,3.745,605,4.059,606,2.622,607,2.622,608,4.205,609,3.745,610,3.745,611,3.605,612,4.588,613,4.766,614,2.524,615,4.369,616,2.622,617,3.309,618,2.622,619,3.745,620,3.26,621,4.388,622,2.622,623,3.745,624,2.524,625,2.524]],["title/interfaces/ConfigurationKeycloak.html",[590,0.059,620,2.617]],["body/interfaces/ConfigurationKeycloak.html",[3,0.05,4,0.05,5,0.045,8,0.129,18,0.007,20,0.242,33,4.087,39,0.108,67,0.004,68,0.004,93,3.988,96,0.375,97,1.79,101,0.432,103,0.701,105,3.005,106,0.687,120,1.877,137,2.085,217,2.361,236,2.361,263,4.474,313,0.477,590,0.117,591,2.541,592,2.541,593,2.446,594,4.698,595,2.541,596,4.133,597,2.541,598,4.819,599,2.446,600,3.988,601,2.283,602,4.133,603,4.133,604,3.662,605,3.988,606,2.541,607,2.541,608,4.133,609,3.662,610,3.662,611,3.525,612,2.446,613,2.541,614,2.446,615,4.293,616,2.541,617,3.772,618,2.541,619,3.662,620,3.737,621,4.926,622,4.698,623,5.187,624,4.522,625,4.522]],["title/interfaces/ConfigurationPostgres.html",[590,0.059,603,2.895]],["body/interfaces/ConfigurationPostgres.html",[3,0.05,4,0.05,5,0.044,8,0.128,18,0.007,20,0.251,33,4.071,39,0.107,67,0.004,68,0.004,93,3.967,96,0.374,97,1.773,101,0.429,103,0.7,105,2.985,106,0.683,120,1.86,137,2.066,217,4.345,236,2.338,263,3.268,313,0.472,590,0.116,591,2.517,592,2.517,593,2.423,594,4.677,595,2.517,596,4.977,597,2.517,598,4.803,599,2.423,600,3.967,601,2.262,602,4.111,603,4.503,604,3.637,605,3.967,606,2.517,607,2.517,608,4.111,609,3.637,610,3.637,611,3.501,612,2.423,613,2.517,614,4.503,615,5.17,616,4.677,617,4.038,618,4.677,619,3.637,620,3.166,621,4.319,622,2.517,623,3.637,624,2.423,625,2.423]],["title/interfaces/ConfigurationRedis.html",[590,0.059,605,2.794]],["body/interfaces/ConfigurationRedis.html",[3,0.051,4,0.051,5,0.046,8,0.133,18,0.007,20,0.212,33,4.129,39,0.108,67,0.004,68,0.004,93,4.049,96,0.378,97,1.839,101,0.441,103,0.697,105,3.064,106,0.893,120,1.929,137,2.142,217,2.425,236,2.425,263,4.521,313,0.49,590,0.117,591,2.61,592,2.61,593,2.513,594,4.756,595,2.61,596,5.039,597,2.61,598,5.212,599,2.513,600,4.049,601,2.345,602,4.195,603,4.195,604,3.733,605,4.419,606,2.61,607,2.61,608,4.195,609,3.733,610,3.733,611,3.594,612,2.513,613,2.61,614,2.513,615,5.234,616,2.61,617,3.301,618,2.61,619,3.733,620,3.25,621,4.38,622,2.61,623,3.733,624,2.513,625,2.513]],["title/modules/CoreModule.html",[69,1.684,626,3.446]],["body/modules/CoreModule.html",[0,3.187,3,0.048,4,0.048,5,0.043,9,1.349,15,0.824,17,0.986,18,0.007,19,0.402,20,0.174,21,0.797,26,1.892,28,0.906,32,1.019,36,2.145,37,1.702,38,1.21,39,0.048,40,0.29,44,1.892,48,4.564,51,2.281,52,2.516,61,1.231,62,2.54,67,0.004,68,0.004,69,2.59,71,1.814,72,1.86,73,1.96,74,1.96,75,1.908,76,2.776,77,2.776,82,2.851,83,1.96,84,1.96,89,4.45,90,4.817,91,2.137,92,3.187,96,0.36,99,3.556,101,0.29,102,7.598,103,0.401,106,0.461,112,2.074,113,2.676,114,1.729,120,1.814,121,2.676,126,1.86,127,2.558,167,3.722,198,2.931,204,4.335,258,3.464,263,2.206,311,1.21,474,5.588,476,5.093,481,2.364,484,4.335,497,3.894,596,2.364,598,3.911,605,2.281,617,4.008,626,6.335,627,3.464,628,3.885,629,3.885,630,5.465,631,5.652,632,5.652,633,8.372,634,3.885,635,5.652,636,3.885,637,3.885,638,3.464,639,6.662,640,5.652,641,5.652,642,3.464,643,6.662,644,3.187,645,3.464,646,5.94,647,6.662,648,3.464,649,4.636,650,3.885,651,3.885,652,4.636,653,4.335,654,4.636,655,3.885,656,5.652,657,3.187,658,6.662,659,5.652,660,5.652,661,6.662,662,5.652,663,7.316,664,5.652,665,5.652,666,5.652,667,5.652,668,2.137,669,5.652,670,5.652,671,5.652,672,3.885,673,3.885,674,5.652,675,5.652,676,5.652,677,3.885,678,5.652,679,3.885,680,3.885,681,5.04,682,5.04,683,3.464,684,3.885,685,3.885,686,3.885,687,3.885,688,3.464,689,3.464,690,2.364,691,2.676,692,3.187,693,3.464,694,3.885]],["title/classes/CoreResolver.html",[40,0.355,649,3.903]],["body/classes/CoreResolver.html",[3,0.086,4,0.086,5,0.077,8,0.223,9,2.885,15,1.468,17,1.758,18,0.006,19,0.718,20,0.213,21,1.421,25,5.411,26,2.318,28,0.661,39,0.086,40,0.517,61,2.196,67,0.005,68,0.005,96,0.368,106,0.985,201,2.082,209,3.456,300,2.196,311,2.157,327,3.976,489,4.772,494,5.721,649,6.812,695,6.927,696,7.405,697,6.927,698,6.927,699,6.927,700,6.176]],["title/controllers/DLMessagePattern.html",[196,2.617,701,3.903]],["body/controllers/DLMessagePattern.html",[3,0.039,4,0.039,5,0.035,8,0.1,9,1.666,10,3.495,12,0.861,14,3.692,15,1.814,17,2.172,18,0.007,19,0.887,20,0.263,21,1.756,26,2.907,27,3.604,28,0.676,32,0.818,36,1.323,37,1.05,38,0.971,39,0.039,40,0.233,42,2.797,43,2.282,44,2.864,59,3.562,61,2.972,67,0.003,68,0.003,81,3.847,96,0.213,103,0.415,112,1.665,114,1.388,130,5.029,136,2.823,137,3.401,140,3.52,141,1.971,142,2.308,160,1.493,196,3.214,198,1.618,201,2.573,318,2.054,328,1.421,690,2.917,701,4.792,702,6.291,703,3.119,704,4.792,705,4.792,706,4.792,707,4.792,708,5.842,709,4.792,710,4.792,711,5.842,712,4.792,713,4.231,714,3.119,715,7.632,716,4.792,717,3.119,718,4.276,719,2.558,720,4.072,721,4.792,722,3.119,723,2.558,724,4.792,725,3.119,726,2.558,727,4.792,728,3.119,729,2.558,730,4.792,731,3.119,732,3.119,733,4.792,734,3.119,735,2.558,736,4.792,737,3.119,738,2.558,739,4.792,740,3.119,741,3.119,742,4.792,743,3.119,744,2.558,745,4.792,746,3.119,747,2.392,748,3.85,749,4.792,750,3.119,751,7.744,752,4.231,753,2.781,754,1.456,755,2.558,756,2.392,757,2.392,758,6.564,759,3.119,760,8.24,761,8.636,762,3.119,763,4.796,764,3.119,765,3.119,766,3.119,767,3.119,768,3.119,769,3.119,770,3.119,771,3.119,772,3.119,773,3.119,774,3.119,775,3.119,776,3.119,777,3.119,778,4.796,779,3.119,780,3.119]],["title/injectables/DLService.html",[31,1.406,752,3.446]],["body/injectables/DLService.html",[3,0.069,4,0.069,5,0.062,8,0.179,9,2.518,10,2.907,12,2,13,4.572,14,5.73,15,1.708,17,1.84,18,0.007,19,0.751,20,0.223,21,1.488,26,2.426,27,3.084,28,0.769,31,2.142,32,1.463,36,2,37,1.588,38,1.736,39,0.069,40,0.416,42,4.085,43,3.333,44,1.865,52,3.227,59,2.32,61,2.298,67,0.005,68,0.005,96,0.357,101,0.541,103,0.572,112,2.975,114,2.481,128,2.481,130,6.544,135,4.97,136,3.528,137,4.425,140,3.079,141,3.522,142,2.114,160,2.668,230,4.037,231,3.273,276,6.999,702,6.18,752,5.836,755,4.572,756,4.275,757,4.275,761,7.184,781,5.574,782,7.25,783,5.574,784,7.25,785,2.975,786,5.574]],["title/modules/DlModule.html",[69,1.684,787,3.649]],["body/modules/DlModule.html",[3,0.079,4,0.079,5,0.07,18,0.006,28,0.917,32,1.663,36,2.17,37,1.723,39,0.079,40,0.473,62,1.84,67,0.005,68,0.005,69,3.028,70,6.79,71,2.959,72,3.034,73,3.197,74,3.197,75,3.113,76,4.202,77,3.113,82,3.968,83,3.197,84,3.197,89,3.855,91,3.486,99,4.199,120,3.673,198,4.079,484,4.86,701,7.016,702,4.59,752,6.956,753,5.65,755,5.198,756,6.032,787,7.475,788,5.65,789,5.65,790,5.65,791,6.79,792,6.337,793,6.337,794,5.198,795,6.56,796,5.198,797,5.198,798,5.198,799,5.198]],["title/classes/DocumentClientSearchDTO.html",[40,0.355,405,3.903]],["body/classes/DocumentClientSearchDTO.html",[3,0.067,4,0.067,5,0.06,8,0.175,12,1.498,15,1.86,17,1.378,18,0.007,19,0.563,20,0.292,21,1.114,28,0.68,39,0.067,40,0.405,41,2.903,67,0.005,68,0.005,96,0.422,101,0.532,103,0.709,106,1.088,201,2.54,300,1.721,301,4.422,308,3.169,309,2.842,310,2.831,311,1.691,313,0.644,405,6.929,800,5.431,801,4.126,802,4.629,803,4.507,804,7.128,805,7.128,806,5.431,807,5.431,808,5.431,809,4.842,810,5.431,811,5.431,812,5.431]],["title/classes/EquipmentClientSearchDTO.html",[40,0.355,813,3.903]],["body/classes/EquipmentClientSearchDTO.html",[3,0.065,4,0.065,5,0.058,8,0.167,12,1.911,15,1.885,17,1.32,18,0.007,19,0.539,20,0.296,21,1.067,28,0.661,39,0.065,40,0.388,41,2.821,67,0.004,68,0.004,96,0.425,101,0.517,103,0.707,106,1.026,139,1.606,201,2.6,300,1.648,301,4.459,308,3.245,309,2.762,310,2.87,311,1.619,313,0.617,323,3.163,326,3.697,335,3.163,343,3.153,348,3.053,377,3.466,414,4.636,809,4.636,813,6.811,814,5.2,815,4.039,816,4.359,817,4.258,818,6.926,819,5.2,820,5.2,821,5.2,822,6.175,823,5.2,824,5.2]],["title/classes/ErrorFilter.html",[40,0.355,825,3.903]],["body/classes/ErrorFilter.html",[3,0.066,4,0.066,5,0.059,8,0.171,9,2.439,15,1.125,17,1.347,18,0.007,19,0.55,20,0.163,21,1.089,26,1.777,28,0.67,29,6.48,32,1.393,39,0.066,40,0.396,41,2.86,44,2.914,52,2.363,61,1.683,67,0.004,68,0.004,96,0.311,98,5.504,105,2.753,112,2.834,114,3.126,142,1.393,153,4.437,168,5.181,191,5.76,205,3.816,222,2.419,263,4.754,266,5.699,300,1.683,825,5.76,826,5.309,827,5.086,828,7.869,829,7.022,830,8.373,831,5.309,832,7.022,833,4.734,834,5.309,835,5.309,836,5.309,837,5.309,838,5.309,839,5.309,840,7.022,841,5.309,842,5.309,843,3.657,844,5.309,845,3.496,846,5.309,847,5.309,848,3.657,849,5.309,850,3.657]],["title/classes/GetSearchAreasInputDTO.html",[40,0.355,851,3.446]],["body/classes/GetSearchAreasInputDTO.html",[3,0.068,4,0.068,5,0.061,8,0.177,12,1.52,15,1.525,17,1.398,18,0.007,19,0.571,20,0.221,21,1.13,28,0.765,36,1.52,37,1.207,38,1.715,39,0.1,40,0.634,67,0.005,68,0.005,96,0.414,101,0.537,103,0.663,201,1.656,222,3.279,224,4.738,300,1.746,308,2.067,309,3.195,310,2.844,311,1.715,356,3.63,420,3.741,442,4.085,446,4.224,447,3.031,448,4.704,463,3.515,466,4.224,851,5.211,852,4.519,853,5.902,854,7.195,855,5.51,856,5.51,857,5.902,858,5.803,859,3.795,860,4.225,861,4.519]],["title/modules/GqlModule.html",[69,1.684,862,3.649]],["body/modules/GqlModule.html",[3,0.069,4,0.069,5,0.062,18,0.006,28,0.936,32,1.467,36,2.549,37,2.051,38,1.741,39,0.069,40,0.417,62,1.623,67,0.005,68,0.005,69,2.856,71,2.61,72,2.676,73,2.82,74,2.82,75,2.746,76,3.963,77,2.746,82,3.664,83,2.82,84,2.82,89,3.401,91,3.075,99,3.877,120,3.392,197,6.618,198,3.767,210,6.573,211,4.985,291,6.573,315,6.618,321,2.378,352,2.899,469,5.261,475,5.735,483,3.851,626,6.573,657,4.585,692,4.585,693,4.985,794,4.585,795,6.188,796,4.585,797,4.585,798,4.585,799,4.585,825,5.958,862,7.548,863,4.985,864,4.985,865,4.985,866,6.573,867,6.573,868,5.591,869,7.264,870,5.591,871,5.591,872,5.591,873,5.591,874,7.264,875,5.591]],["title/interfaces/HttpError.html",[590,0.059,876,3.278]],["body/interfaces/HttpError.html",[3,0.082,4,0.06,5,0.053,8,0.154,18,0.007,20,0.273,39,0.105,62,1.394,67,0.004,68,0.004,96,0.213,98,5.1,101,0.489,103,0.692,106,0.887,112,4.289,116,2.489,126,2.297,167,3.16,205,2.99,222,4.053,295,2.919,310,1.549,313,0.569,478,2.817,590,0.105,617,4.028,843,5.536,845,5.292,848,5.536,850,4.52,876,4.52,877,3.476,878,5.821,879,4.52,880,4.752,881,4.752,882,3.306,883,4.52,884,3.306,885,3.476,886,3.306,887,3.476]],["title/interfaces/IAccessTokenInput.html",[136,1.898,590,0.059]],["body/interfaces/IAccessTokenInput.html",[3,0.08,4,0.08,5,0.071,8,0.206,18,0.007,20,0.243,21,1.624,39,0.098,67,0.005,68,0.005,96,0.284,97,3.523,101,0.59,103,0.638,136,3.157,313,0.759,501,5.911,503,6.681,590,0.098,888,5.708,889,5.708,890,7.363]],["title/interfaces/IAddressType.html",[590,0.059,891,3.903]],["body/interfaces/IAddressType.html",[3,0.078,4,0.078,5,0.07,8,0.202,18,0.007,19,0.923,20,0.274,39,0.097,67,0.005,68,0.005,96,0.407,101,0.583,103,0.664,106,1.109,139,1.552,313,0.744,590,0.097,891,6.985,892,5.594,893,7.948,894,4.545,895,5.594]],["title/interfaces/IAddressTypesResponse.html",[590,0.059,894,3.446]],["body/interfaces/IAddressTypesResponse.html",[3,0.082,4,0.082,5,0.073,8,0.213,18,0.007,19,0.686,20,0.203,39,0.1,67,0.005,68,0.005,96,0.359,101,0.603,103,0.574,106,0.959,139,1.154,313,0.786,590,0.1,891,7.451,892,5.907,893,5.907,894,5.855,895,8.1]],["title/interfaces/IApiMeHealth.html",[147,3.903,590,0.059]],["body/interfaces/IApiMeHealth.html",[3,0.091,4,0.091,5,0.081,6,4.311,8,0.236,18,0.006,20,0.225,39,0.091,67,0.005,68,0.005,96,0.326,97,3.826,101,0.641,147,7.051,313,0.871,590,0.091,617,4.364,896,7.343,897,9.399]],["title/interfaces/IBalanceClient.html",[304,2.337,590,0.059]],["body/interfaces/IBalanceClient.html",[3,0.085,4,0.085,5,0.076,8,0.221,18,0.007,20,0.211,28,0.789,39,0.085,67,0.005,68,0.005,96,0.305,101,0.617,142,2.327,303,7.546,304,4.061,313,0.816,330,2.481,590,0.085,898,6.877,899,6.664,900,8.203,901,6.877]],["title/interfaces/IBillingDeliveryType.html",[590,0.059,902,3.903]],["body/interfaces/IBillingDeliveryType.html",[3,0.084,4,0.084,5,0.075,8,0.217,18,0.007,19,0.947,20,0.251,39,0.084,67,0.005,68,0.005,96,0.3,101,0.61,103,0.625,106,1.043,139,1.593,313,0.801,590,0.109,902,7.217,903,6.022,904,5.925,905,6.022]],["title/interfaces/IBillingDeliveryTypesResponse.html",[590,0.059,904,3.446]],["body/interfaces/IBillingDeliveryTypesResponse.html",[3,0.085,4,0.085,5,0.076,8,0.221,18,0.007,19,0.712,20,0.211,39,0.085,67,0.005,68,0.005,96,0.305,101,0.617,103,0.488,106,0.816,139,1.198,313,0.816,590,0.11,902,7.546,903,6.132,904,6.423,905,8.203]],["title/interfaces/ICategory.html",[590,0.059,906,3.278]],["body/interfaces/ICategory.html",[3,0.068,4,0.068,5,0.061,8,0.176,18,0.007,19,0.934,20,0.22,39,0.109,67,0.005,68,0.005,96,0.243,101,0.534,103,0.653,106,1.09,139,1.601,142,1.879,313,0.649,321,2.327,328,2.493,334,3.009,340,2.722,342,2.618,343,1.9,344,2.759,345,1.83,352,2.837,590,0.109,906,5.5,907,2.493,908,3.962,909,4.933,910,4.933,911,4.716]],["title/interfaces/ICityType.html",[590,0.059,912,3.903]],["body/interfaces/ICityType.html",[3,0.086,4,0.086,5,0.077,8,0.223,18,0.006,19,0.955,20,0.255,39,0.103,67,0.005,68,0.005,96,0.307,101,0.619,103,0.631,106,1.054,139,1.605,313,0.82,590,0.11,912,7.29,913,6.165,914,6.009,915,6.165]],["title/interfaces/ICityTypesResponse.html",[590,0.059,914,3.446]],["body/interfaces/ICityTypesResponse.html",[3,0.086,4,0.086,5,0.077,8,0.224,18,0.007,19,0.72,20,0.214,39,0.103,67,0.005,68,0.005,96,0.308,101,0.621,103,0.494,106,0.825,139,1.211,313,0.825,590,0.111,912,7.574,913,6.199,914,6.453,915,8.233]],["title/interfaces/IClientApiResult.html",[141,3.007,590,0.059]],["body/interfaces/IClientApiResult.html",[3,0.055,4,0.055,5,0.049,8,0.142,18,0.007,20,0.295,28,0.881,39,0.055,67,0.004,68,0.004,96,0.195,97,2.749,101,0.461,103,0.507,106,1.068,139,1.544,141,3.903,304,3.802,313,0.522,343,2.689,345,2.591,371,3.528,373,3.905,378,3.221,403,3.905,408,4.015,520,5.937,549,6.349,590,0.055,916,4.399,917,7.741,918,7.741,919,7.741,920,7.741,921,3.905,922,7.741,923,7.741,924,7.741,925,6.349,926,5.937,927,6.349,928,5.937,929,5.937,930,5.937,931,6.349,932,5.607,933,6.349,934,5.937,935,6.349,936,3.922,937,4.399,938,4.399,939,4.399,940,3.922,941,4.399,942,4.399,943,4.399,944,4.399,945,3.922,946,4.399]],["title/interfaces/IClientSearch.html",[370,2.337,590,0.059]],["body/interfaces/IClientSearch.html",[3,0.03,4,0.03,5,0.027,8,0.078,18,0.007,19,0.251,20,0.267,28,0.598,37,0.531,39,0.101,67,0.002,68,0.002,96,0.361,101,0.293,103,0.673,106,0.901,136,1.566,139,1.167,140,0.874,142,1.994,209,1.008,288,3.012,304,1.929,313,0.287,329,3.046,330,0.874,340,1.881,343,2.452,345,2.095,370,2.433,371,2.853,372,2.954,373,3.158,374,2.853,375,2.923,376,2.798,377,2.787,378,3.249,379,2.798,380,2.954,382,4.293,402,2.498,403,1.222,406,1.16,408,1.256,463,0.966,500,1.16,543,1.16,556,2.205,590,0.113,720,1.67,754,1.834,801,2.568,802,1.222,803,1.19,815,2.568,816,1.834,817,2.371,907,1.104,921,1.222,947,1.333,948,2.724,949,2.16,950,2.16,951,2.16,952,3.247,953,2.498,954,3.247,955,1.333,956,1.333,957,1.256,958,2.644,959,2.096,960,2.644,961,2.644,962,1.88,963,1.333,964,1.333,965,1.333,966,2.16,967,2.16,968,2.568,969,2.568,970,1.256,971,1.256,972,1.256,973,1.333,974,1.333,975,2.568,976,1.104,977,1.333,978,1.333,979,1.333,980,1.256,981,1.008]],["title/interfaces/IClientSearchResult.html",[402,2.4,590,0.059]],["body/interfaces/IClientSearchResult.html",[3,0.031,4,0.031,5,0.027,8,0.079,18,0.007,19,0.595,20,0.255,28,0.602,37,0.539,39,0.102,67,0.003,68,0.003,96,0.363,101,0.297,103,0.667,106,0.951,136,1.586,139,1.288,140,0.888,142,2.24,209,1.024,304,2.823,313,0.292,329,2.614,330,0.888,340,1.405,343,2.468,345,1.331,370,1.953,371,2.876,372,1.276,373,3.183,374,2.876,375,2.946,376,1.208,377,1.77,378,3.265,379,1.208,380,1.276,382,3.273,402,2.9,403,2.9,406,2.752,408,2.981,463,0.981,500,1.178,543,1.178,556,1.77,590,0.114,720,1.691,754,1.857,801,3.273,802,1.241,803,1.208,815,2.596,816,1.857,817,1.904,907,1.121,921,1.241,947,1.353,948,2.187,949,1.353,950,1.353,951,1.353,952,3.273,953,2.525,954,3.273,955,1.353,956,1.353,957,1.276,958,2.671,959,2.123,960,2.671,961,2.671,962,1.904,963,1.353,964,1.353,965,1.353,966,2.187,967,2.187,968,3.273,969,2.596,970,1.276,971,1.276,972,1.276,973,1.353,974,1.353,975,3.273,976,1.121,977,1.353,978,1.353,979,1.353,980,1.276,981,1.024]],["title/interfaces/IClientType.html",[590,0.059,926,3.649]],["body/interfaces/IClientType.html",[3,0.085,4,0.085,5,0.076,8,0.219,18,0.007,19,0.95,20,0.253,39,0.102,67,0.005,68,0.005,96,0.302,101,0.614,103,0.627,106,1.048,139,1.597,313,0.808,590,0.11,926,6.774,982,6.076,983,5.957,984,6.076]],["title/interfaces/IClientTypesResponse.html",[590,0.059,983,3.446]],["body/interfaces/IClientTypesResponse.html",[3,0.086,4,0.086,5,0.077,8,0.223,18,0.007,19,0.718,20,0.213,39,0.103,67,0.005,68,0.005,96,0.307,101,0.62,103,0.492,106,0.822,139,1.206,313,0.822,590,0.111,926,7.072,982,6.176,983,6.443,984,8.223]],["title/interfaces/IContactClient.html",[590,0.059,985,3.903]],["body/interfaces/IContactClient.html",[3,0.088,4,0.088,5,0.078,8,0.227,18,0.006,19,0.961,20,0.258,39,0.088,56,7.606,67,0.005,68,0.005,96,0.312,101,0.626,103,0.683,313,0.835,590,0.088,985,6.88,986,7.043]],["title/interfaces/IContractClient.html",[590,0.059,927,3.903]],["body/interfaces/IContractClient.html",[3,0.071,4,0.071,5,0.064,8,0.185,18,0.007,20,0.289,28,0.706,39,0.071,67,0.005,68,0.005,96,0.255,101,0.552,103,0.699,106,1.103,139,1.504,313,0.682,374,3.935,545,7.699,590,0.071,927,6.068,985,7.082,987,5.752,988,8.635,989,8.635,990,8.635,991,8.635,992,7.082,993,5.752,994,5.752]],["title/interfaces/ICountryType.html",[590,0.059,995,3.903]],["body/interfaces/ICountryType.html",[3,0.086,4,0.086,5,0.077,8,0.223,18,0.006,19,0.955,20,0.255,39,0.103,67,0.005,68,0.005,96,0.307,101,0.619,103,0.631,106,1.054,139,1.605,313,0.82,590,0.11,995,7.29,996,6.165,997,6.009,998,6.165]],["title/interfaces/ICountryTypesResponse.html",[590,0.059,997,3.446]],["body/interfaces/ICountryTypesResponse.html",[3,0.086,4,0.086,5,0.077,8,0.224,18,0.007,19,0.72,20,0.214,39,0.103,67,0.005,68,0.005,96,0.308,101,0.621,103,0.494,106,0.825,139,1.211,313,0.825,590,0.111,995,7.574,996,6.199,997,6.453,998,8.233]],["title/interfaces/ICreateJournal.html",[590,0.059,999,3.133]],["body/interfaces/ICreateJournal.html",[3,0.062,4,0.062,5,0.056,8,0.162,18,0.007,20,0.251,21,1.388,39,0.095,67,0.004,68,0.004,96,0.3,101,0.505,103,0.697,139,0.874,257,4.7,313,0.595,590,0.106,668,4.504,785,4.7,981,2.089,999,5.039,1000,4.118,1001,5.2,1002,5.2,1003,4.807,1004,3.173,1005,3.173,1006,4.275,1007,5.549,1008,5.549,1009,4.118,1010,3.851,1011,4.118,1012,3.851,1013,3.054,1014,3.637]],["title/interfaces/IDataClientSearchResponse.html",[590,0.059,754,2.222]],["body/interfaces/IDataClientSearchResponse.html",[3,0.033,4,0.033,5,0.03,8,0.086,18,0.007,19,0.277,20,0.185,28,0.628,37,1.32,39,0.104,67,0.003,68,0.003,96,0.371,101,0.317,103,0.665,106,0.871,136,1.695,139,1.146,140,0.964,142,2.061,209,2.509,304,2.088,313,0.317,329,2.703,330,0.964,340,1.485,343,2.094,345,1.422,370,2.088,371,1.937,372,1.386,373,2.144,374,1.937,375,1.984,376,1.313,377,1.892,378,2.738,379,1.313,380,1.386,382,3.412,402,3.319,403,1.348,406,1.28,408,1.386,463,1.066,500,1.28,543,1.28,556,1.892,590,0.115,720,1.808,754,2.47,801,2.744,802,1.348,803,1.313,815,2.744,816,1.984,817,2.035,907,1.218,921,1.348,947,1.47,948,2.338,949,1.47,950,1.47,951,1.47,952,2.744,953,2.144,954,2.744,955,1.47,956,1.47,957,1.386,958,3.512,959,2.269,960,2.824,961,3.512,962,2.035,963,1.47,964,1.47,965,1.47,966,2.338,967,2.338,968,2.744,969,2.744,970,1.386,971,1.386,972,1.386,973,1.47,974,1.47,975,2.744,976,1.218,977,1.47,978,1.47,979,1.47,980,1.386,981,1.112]],["title/interfaces/IDistrictType.html",[590,0.059,1015,3.903]],["body/interfaces/IDistrictType.html",[3,0.083,4,0.083,5,0.074,8,0.215,18,0.007,19,0.944,20,0.25,28,0.638,39,0.101,67,0.005,68,0.005,96,0.36,101,0.606,106,1.039,139,1.587,313,0.793,329,3.352,330,2.411,590,0.113,1015,7.474,1016,5.959,1017,5.887,1018,5.959]],["title/interfaces/IDistrictTypesResponse.html",[590,0.059,1017,3.446]],["body/interfaces/IDistrictTypesResponse.html",[3,0.084,4,0.084,5,0.074,8,0.216,18,0.007,19,0.696,20,0.206,28,0.641,39,0.101,67,0.005,68,0.005,96,0.362,101,0.608,106,0.797,139,1.17,313,0.797,329,2.999,330,2.424,590,0.113,1015,7.67,1016,5.99,1017,6.358,1018,8.139]],["title/interfaces/IDocumentClient.html",[590,0.059,928,3.649]],["body/interfaces/IDocumentClient.html",[3,0.072,4,0.072,5,0.065,8,0.188,18,0.007,19,0.604,20,0.297,39,0.093,67,0.005,68,0.005,96,0.259,101,0.557,103,0.695,106,1.121,139,1.562,313,0.692,590,0.093,617,3.941,802,4.378,803,4.263,928,5.724,1019,5.199,1020,7.739,1021,7.739,1022,7.119]],["title/interfaces/IDocumentClientSearch.html",[590,0.059,801,2.468]],["body/interfaces/IDocumentClientSearch.html",[3,0.033,4,0.033,5,0.029,8,0.085,18,0.007,19,0.275,20,0.241,28,0.625,37,0.581,39,0.104,67,0.003,68,0.003,96,0.37,101,0.315,103,0.68,106,0.952,136,1.684,139,1.141,140,0.956,142,2.055,209,1.103,304,2.074,313,0.314,329,2.694,330,0.956,340,1.477,343,2.084,345,1.413,370,2.074,371,1.924,372,1.375,373,2.13,374,1.924,375,1.971,376,1.302,377,1.879,378,2.727,379,1.302,380,1.375,382,3.398,402,2.654,403,1.337,406,1.269,408,1.375,463,1.057,500,1.269,543,1.269,556,1.879,590,0.115,720,1.796,754,1.971,801,3.112,802,3.027,803,2.947,815,2.729,816,1.971,817,2.021,907,1.208,921,1.337,947,1.458,948,2.322,949,1.458,950,1.458,951,1.458,952,2.729,953,2.13,954,2.729,955,1.458,956,1.458,957,1.375,958,2.808,959,2.254,960,2.808,961,2.808,962,2.021,963,1.458,964,1.458,965,1.458,966,2.322,967,2.322,968,2.729,969,2.729,970,1.375,971,1.375,972,1.375,973,1.458,974,1.458,975,2.729,976,1.208,977,1.458,978,1.458,979,1.458,980,1.375,981,1.103]],["title/interfaces/IDocumentType.html",[590,0.059,1023,3.903]],["body/interfaces/IDocumentType.html",[3,0.082,4,0.082,5,0.073,8,0.212,18,0.007,19,0.94,20,0.268,39,0.1,67,0.005,68,0.005,96,0.413,101,0.602,103,0.672,106,1.033,139,1.58,313,0.783,590,0.108,1023,7.145,1024,5.886,1025,5.843,1026,5.886]],["title/interfaces/IDocumentTypeClient.html",[590,0.059,1022,3.903]],["body/interfaces/IDocumentTypeClient.html",[3,0.078,4,0.078,5,0.07,8,0.202,18,0.007,19,0.924,20,0.262,39,0.097,67,0.005,68,0.005,96,0.279,101,0.584,103,0.674,106,1.088,139,1.598,313,0.745,590,0.097,617,3.008,802,3.17,803,3.087,928,4.82,1019,5.604,1020,5.604,1021,5.604,1022,6.99]],["title/interfaces/IDocumentTypesResponse.html",[590,0.059,1025,3.446]],["body/interfaces/IDocumentTypesResponse.html",[3,0.085,4,0.085,5,0.076,8,0.22,18,0.007,19,0.707,20,0.21,39,0.102,67,0.005,68,0.005,96,0.365,101,0.614,103,0.585,106,0.81,139,1.189,313,0.81,590,0.11,1023,7.528,1024,6.087,1025,6.403,1026,8.183]],["title/interfaces/IEnum.html",[590,0.059,1027,3.903]],["body/interfaces/IEnum.html",[3,0.074,4,0.074,5,0.066,8,0.191,18,0.007,20,0.232,39,0.074,44,1.985,67,0.005,68,0.005,96,0.263,101,0.563,103,0.589,224,6.168,231,5.499,257,4.028,313,0.703,590,0.074,614,4.59,1027,6.807,1028,5.931,1029,5.931,1030,7.546,1031,5.288,1032,5.931,1033,7.546,1034,5.931,1035,5.931,1036,5.931,1037,5.931,1038,5.244]],["title/interfaces/IEquipmentClient.html",[590,0.059,929,3.649]],["body/interfaces/IEquipmentClient.html",[3,0.078,4,0.078,5,0.07,8,0.202,18,0.007,20,0.297,39,0.078,67,0.005,68,0.005,96,0.278,101,0.583,103,0.698,106,1.01,139,1.629,313,0.744,343,3.096,377,3.968,556,4.303,590,0.078,816,4.366,817,3.742,822,6.97,929,5.995,1039,6.275]],["title/interfaces/IEquipmentClientSearch.html",[590,0.059,815,2.468]],["body/interfaces/IEquipmentClientSearch.html",[3,0.032,4,0.032,5,0.029,8,0.084,18,0.007,19,0.27,20,0.245,28,0.62,37,0.571,39,0.103,67,0.003,68,0.003,96,0.368,101,0.311,103,0.679,106,0.924,136,1.662,139,1.357,140,0.941,142,2.044,209,1.085,304,2.046,313,0.309,329,2.676,330,0.941,340,1.46,343,2.527,345,1.394,370,2.046,371,1.899,372,1.352,373,2.102,374,1.899,375,1.945,376,1.281,377,2.893,378,2.704,379,1.281,380,1.352,382,3.37,402,2.625,403,1.315,406,1.248,408,1.352,463,1.04,500,1.248,543,1.248,556,2.316,590,0.115,720,1.772,754,1.945,801,2.699,802,1.315,803,1.281,815,3.083,816,3.235,817,2.491,907,1.188,921,1.315,947,1.434,948,2.863,949,1.434,950,1.434,951,1.434,952,2.699,953,2.102,954,2.699,955,1.434,956,1.434,957,1.352,958,2.778,959,2.224,960,2.778,961,2.778,962,1.994,963,1.434,964,1.434,965,1.434,966,2.292,967,2.292,968,2.699,969,2.699,970,1.352,971,1.352,972,1.352,973,1.434,974,1.434,975,2.699,976,1.188,977,2.292,978,2.292,979,2.292,980,1.352,981,1.085]],["title/interfaces/IError.html",[590,0.059,882,3.278]],["body/interfaces/IError.html",[3,0.084,4,0.063,5,0.056,8,0.162,18,0.007,20,0.236,21,1.393,39,0.106,62,1.972,67,0.004,68,0.004,96,0.224,98,4.504,101,0.507,103,0.677,106,0.599,112,2.694,116,2.618,126,3.25,167,3.324,205,3.902,222,4.106,295,3.071,310,1.629,313,0.599,478,2.964,590,0.106,617,4.099,843,3.477,845,3.324,848,3.477,850,3.477,876,3.477,877,3.656,878,3.656,879,3.477,880,3.656,881,3.656,882,4.677,883,4.677,884,3.477,885,3.656,886,3.477,887,3.656]],["title/interfaces/IGenderClient.html",[590,0.059,992,3.903]],["body/interfaces/IGenderClient.html",[3,0.088,4,0.088,5,0.079,8,0.229,18,0.006,19,0.963,20,0.259,39,0.088,67,0.005,68,0.005,96,0.315,101,0.629,103,0.639,106,1.067,139,1.62,313,0.843,590,0.088,992,6.918,1040,7.109]],["title/interfaces/IGqlError.html",[590,0.059,1041,4.243]],["body/interfaces/IGqlError.html",[3,0.083,4,0.083,5,0.074,8,0.215,18,0.007,20,0.205,39,0.083,44,2.233,48,4.766,67,0.005,68,0.005,96,0.296,101,0.606,103,0.622,222,4.253,313,0.791,590,0.083,1031,5.948,1041,7.803,1042,6.672,1043,6.672,1044,6.672]],["title/interfaces/IJournal.html",[590,0.059,1004,3.007]],["body/interfaces/IJournal.html",[3,0.061,4,0.061,5,0.054,8,0.157,18,0.007,20,0.268,21,1.362,39,0.094,67,0.004,68,0.004,96,0.294,101,0.495,103,0.699,139,1.409,257,4.66,313,0.579,590,0.105,668,4.451,785,4.66,981,3.138,999,4.369,1000,4.002,1001,5.148,1002,5.148,1003,4.751,1004,4.193,1005,5.113,1006,4.193,1007,5.443,1008,5.443,1009,4.002,1010,3.742,1011,4.002,1012,3.742,1013,2.968,1014,3.534]],["title/interfaces/IJuridicalType.html",[590,0.059,930,3.649]],["body/interfaces/IJuridicalType.html",[3,0.084,4,0.084,5,0.075,8,0.217,18,0.007,19,0.947,20,0.251,39,0.102,67,0.005,68,0.005,96,0.299,101,0.61,103,0.624,106,1.043,139,1.592,313,0.8,590,0.109,930,6.742,1045,6.012,1046,5.918,1047,6.012]],["title/interfaces/IJuridicalTypesResponse.html",[590,0.059,1046,3.446]],["body/interfaces/IJuridicalTypesResponse.html",[3,0.085,4,0.085,5,0.076,8,0.221,18,0.007,19,0.711,20,0.211,39,0.103,67,0.005,68,0.005,96,0.304,101,0.616,103,0.488,106,0.814,139,1.195,313,0.814,590,0.11,930,7.051,1045,6.12,1046,6.418,1047,8.198]],["title/interfaces/ILogger.html",[590,0.059,886,3.278]],["body/interfaces/ILogger.html",[3,0.094,4,0.06,5,0.054,8,0.157,18,0.007,20,0.274,39,0.105,62,1.413,67,0.004,68,0.004,96,0.216,98,4.421,101,0.494,103,0.688,106,0.577,112,2.598,116,3.435,126,2.33,167,4.362,205,3.019,222,4.068,295,4.029,310,1.57,313,0.577,478,3.889,590,0.105,617,3.605,843,3.352,845,3.205,848,3.352,850,3.352,876,3.352,877,3.525,878,3.525,879,3.352,880,3.525,881,3.525,882,3.352,883,4.563,884,3.352,885,3.525,886,4.563,887,5.855]],["title/interfaces/IMonetaryClient.html",[590,0.059,899,3.446]],["body/interfaces/IMonetaryClient.html",[3,0.087,4,0.087,5,0.078,8,0.225,18,0.007,19,0.959,20,0.257,39,0.087,67,0.005,68,0.005,96,0.311,101,0.624,103,0.635,106,1.06,231,5.434,313,0.831,590,0.087,899,6.055,1048,7.004]],["title/interfaces/IMsisdn.html",[590,0.059,911,3.133]],["body/interfaces/IMsisdn.html",[3,0.064,4,0.064,5,0.057,8,0.166,18,0.007,19,0.803,20,0.272,21,1.413,39,0.107,67,0.004,68,0.004,96,0.229,101,0.514,103,0.643,106,1.105,139,1.578,142,1.807,313,0.612,321,2.194,328,2.35,334,2.837,340,2.782,342,3.962,343,2.875,344,4.175,345,2.77,352,2.675,590,0.107,906,5.702,907,2.35,908,3.736,909,5.702,910,5.702,911,5.107]],["title/interfaces/INameClient.html",[590,0.059,925,3.903]],["body/interfaces/INameClient.html",[3,0.087,4,0.087,5,0.077,8,0.225,18,0.006,20,0.274,39,0.087,67,0.005,68,0.005,96,0.31,101,0.623,103,0.699,313,0.829,590,0.087,925,6.849,970,4.797,971,4.797,972,4.797,1049,6.991]],["title/interfaces/INameClientSearch.html",[590,0.059,968,2.468]],["body/interfaces/INameClientSearch.html",[3,0.033,4,0.033,5,0.03,8,0.086,18,0.007,19,0.278,20,0.186,28,0.63,37,0.588,39,0.104,67,0.003,68,0.003,96,0.371,101,0.318,103,0.67,106,0.873,136,1.702,139,1.149,140,0.969,142,2.064,209,1.118,304,2.096,313,0.319,329,2.708,330,0.969,340,1.49,343,2.1,345,1.428,370,2.096,371,1.945,372,1.393,373,2.153,374,1.945,375,1.992,376,1.319,377,1.899,378,2.745,379,1.319,380,1.393,382,3.42,402,2.678,403,1.355,406,1.286,408,1.393,463,1.071,500,1.286,543,1.286,556,1.899,590,0.115,720,1.815,754,1.992,801,2.753,802,1.355,803,1.319,815,2.753,816,1.992,817,2.043,907,1.224,921,1.355,947,1.478,948,2.347,949,1.478,950,1.478,951,1.478,952,2.753,953,2.153,954,2.753,955,1.478,956,1.478,957,1.393,958,2.833,959,3.521,960,2.833,961,2.833,962,3.157,963,1.478,964,1.478,965,1.478,966,2.347,967,2.347,968,3.135,969,3.42,970,1.393,971,1.393,972,1.393,973,1.478,974,1.478,975,2.753,976,1.224,977,1.478,978,1.478,979,1.478,980,1.393,981,1.118]],["title/interfaces/IOptionalPropertyClient.html",[520,3.649,590,0.059]],["body/interfaces/IOptionalPropertyClient.html",[3,0.083,4,0.083,5,0.074,8,0.215,18,0.007,19,0.943,20,0.269,28,0.637,39,0.083,67,0.005,68,0.005,96,0.296,101,0.606,103,0.622,106,1.038,139,1.586,231,5.346,313,0.791,329,3.35,330,2.407,520,6.226,590,0.083,1050,6.672]],["title/interfaces/IPaymentTypeClient.html",[590,0.059,931,3.903]],["body/interfaces/IPaymentTypeClient.html",[3,0.088,4,0.088,5,0.078,8,0.227,18,0.006,19,0.961,20,0.258,39,0.088,67,0.005,68,0.005,96,0.313,101,0.626,103,0.637,106,1.063,139,1.616,313,0.837,590,0.088,931,6.887,1051,7.056]],["title/interfaces/IQueryStructured.html",[590,0.059,958,2.54]],["body/interfaces/IQueryStructured.html",[3,0.033,4,0.033,5,0.03,8,0.087,18,0.007,19,0.279,20,0.163,28,0.63,37,0.589,39,0.104,67,0.003,68,0.003,96,0.372,101,0.319,103,0.666,106,0.873,136,1.704,139,1.149,140,0.971,142,2.198,209,1.119,304,2.098,313,0.319,329,2.709,330,0.971,340,1.491,343,2.102,345,1.43,370,2.098,371,1.947,372,1.395,373,2.155,374,1.947,375,1.995,376,1.321,377,1.901,378,2.747,379,1.321,380,1.395,382,3.423,402,2.68,403,1.357,406,1.288,408,1.395,463,1.073,500,1.288,543,1.288,556,1.901,590,0.115,720,1.817,754,1.995,801,2.755,802,1.357,803,1.321,815,2.755,816,1.995,817,2.045,907,1.226,921,1.357,947,1.48,948,2.35,949,1.48,950,1.48,951,1.48,952,2.755,953,2.155,954,2.755,955,1.48,956,1.48,957,1.395,958,3.23,959,3.523,960,3.523,961,2.836,962,2.045,963,1.48,964,1.48,965,1.48,966,2.35,967,2.35,968,2.755,969,2.755,970,1.395,971,1.395,972,1.395,973,1.48,974,1.48,975,2.755,976,1.226,977,1.48,978,1.48,979,1.48,980,1.395,981,1.119]],["title/interfaces/IQueryUnStructured.html",[590,0.059,961,2.54]],["body/interfaces/IQueryUnStructured.html",[3,0.033,4,0.033,5,0.03,8,0.087,18,0.007,19,0.279,20,0.163,28,0.63,37,0.59,39,0.104,67,0.003,68,0.003,96,0.372,101,0.319,103,0.666,106,0.874,136,1.705,139,1.15,140,0.971,142,2.066,209,1.12,304,2.099,313,0.319,329,2.896,330,0.971,340,1.492,343,2.102,345,1.43,370,2.099,371,1.948,372,1.396,373,2.156,374,1.948,375,1.996,376,1.322,377,1.903,378,2.748,379,1.322,380,1.396,382,3.424,402,2.681,403,1.358,406,1.289,408,1.396,463,1.074,500,1.289,543,1.289,556,1.903,590,0.115,720,1.818,754,1.996,801,2.757,802,1.358,803,1.322,815,2.757,816,1.996,817,2.046,907,1.227,921,1.358,947,1.481,948,2.351,949,1.481,950,1.481,951,1.481,952,2.757,953,2.156,954,2.757,955,1.481,956,1.481,957,1.396,958,2.837,959,2.281,960,2.837,961,3.231,962,3.161,963,1.481,964,1.481,965,1.481,966,2.351,967,2.351,968,2.757,969,2.757,970,1.396,971,1.396,972,1.396,973,1.481,974,1.481,975,2.757,976,1.227,977,1.481,978,1.481,979,1.481,980,1.396,981,1.12]],["title/interfaces/IRegion.html",[590,0.059,910,3.278]],["body/interfaces/IRegion.html",[3,0.068,4,0.068,5,0.061,8,0.176,18,0.007,19,0.934,20,0.22,39,0.109,67,0.005,68,0.005,96,0.243,101,0.534,103,0.653,106,1.09,139,1.601,142,1.879,313,0.649,321,2.327,328,2.493,334,3.009,340,2.722,342,2.618,343,1.9,344,2.759,345,1.83,352,2.837,590,0.109,906,4.933,907,2.493,908,3.962,909,4.933,910,5.5,911,4.716]],["title/interfaces/IRegionType.html",[590,0.059,932,3.446]],["body/interfaces/IRegionType.html",[3,0.082,4,0.082,5,0.073,8,0.212,18,0.007,19,0.94,20,0.248,28,0.63,39,0.1,67,0.005,68,0.005,96,0.358,101,0.602,106,1.033,139,1.58,313,0.783,329,3.338,330,2.382,590,0.113,932,6.572,1052,5.886,1053,5.886,1054,5.886,1055,5.843,1056,5.886]],["title/interfaces/IRegionTypesResponse.html",[590,0.059,1055,3.446]],["body/interfaces/IRegionTypesResponse.html",[3,0.083,4,0.083,5,0.074,8,0.215,18,0.007,19,0.691,20,0.205,28,0.637,39,0.101,67,0.005,68,0.005,96,0.36,101,0.606,106,0.791,139,1.162,313,0.791,329,2.987,330,2.407,590,0.113,932,6.76,1052,5.948,1053,5.948,1054,5.948,1055,6.339,1056,8.119]],["title/interfaces/IRelationClient.html",[590,0.059,933,3.903]],["body/interfaces/IRelationClient.html",[3,0.086,4,0.086,5,0.077,8,0.222,18,0.007,20,0.283,39,0.086,67,0.005,68,0.005,96,0.306,101,0.618,106,0.819,139,1.202,288,6.355,313,0.819,590,0.086,668,4.885,933,6.797,1057,6.902,1058,9.211,1059,9.211]],["title/interfaces/IRequestParams.html",[590,0.059,1060,3.903]],["body/interfaces/IRequestParams.html",[3,0.058,4,0.058,5,0.052,6,2.758,8,0.151,9,1.632,10,3.371,18,0.007,20,0.199,27,3.576,28,0.76,31,1.91,32,1.233,36,1.296,37,1.029,38,1.463,39,0.058,40,0.35,42,2.249,43,1.835,44,1.572,59,1.955,61,2.986,67,0.004,68,0.004,88,2.858,101,0.482,103,0.334,105,2.436,116,2.436,133,5.093,140,3.537,142,1.94,149,3.236,150,3.403,151,2.436,152,3.236,153,2.969,156,3.094,157,3.236,158,2.858,159,3.236,160,4.615,161,3.236,168,3.094,171,3.094,172,3.094,220,3.236,313,0.557,340,1.815,371,2.141,375,3.019,377,2.878,406,2.249,556,2.878,590,0.058,720,4.007,816,3.019,894,3.403,904,3.403,914,3.403,962,2.249,976,2.141,983,3.403,997,3.403,1003,4.341,1017,3.403,1025,3.403,1046,3.403,1055,3.403,1060,6.064,1061,4.189,1062,3.853,1063,3.403,1064,3.403,1065,3.853,1066,3.853,1067,3.853,1068,3.403,1069,3.403,1070,4.189,1071,7.588,1072,4.189,1073,6.621,1074,4.189,1075,4.189,1076,4.189,1077,4.189,1078,4.189,1079,4.189,1080,3.603,1081,4.189,1082,4.189,1083,4.189,1084,4.189,1085,4.189,1086,4.189,1087,4.189,1088,4.189,1089,4.189,1090,4.189,1091,4.189,1092,4.189]],["title/interfaces/ISearchClientPayload.html",[590,0.059,720,2.024]],["body/interfaces/ISearchClientPayload.html",[3,0.033,4,0.033,5,0.029,8,0.085,18,0.007,19,0.274,20,0.184,28,0.625,37,0.579,39,0.104,67,0.003,68,0.003,96,0.37,101,0.314,103,0.669,106,0.928,136,2.39,139,1.14,140,0.954,142,2.054,209,1.101,304,2.07,313,0.314,329,2.691,330,0.954,340,1.475,343,2.082,345,1.411,370,2.07,371,1.921,372,1.372,373,2.126,374,1.921,375,1.968,376,1.299,377,1.876,378,2.724,379,1.299,380,1.372,382,3.395,402,2.651,403,1.334,406,1.266,408,1.372,463,2.39,500,2.869,543,1.266,556,1.876,590,0.115,720,2.235,754,1.968,801,2.725,802,1.334,803,1.299,815,2.725,816,1.968,817,2.018,907,1.205,921,1.334,947,1.455,948,2.319,949,1.455,950,1.455,951,1.455,952,2.725,953,2.126,954,2.725,955,1.455,956,1.455,957,1.372,958,2.805,959,2.25,960,2.805,961,2.805,962,2.018,963,1.455,964,1.455,965,1.455,966,2.319,967,2.319,968,2.725,969,2.725,970,1.372,971,1.372,972,1.372,973,1.455,974,1.455,975,2.725,976,1.205,977,1.455,978,1.455,979,1.455,980,1.372,981,1.101]],["title/interfaces/ISearchJournal.html",[590,0.059,1006,3.007]],["body/interfaces/ISearchJournal.html",[3,0.059,4,0.059,5,0.053,8,0.154,18,0.007,20,0.266,21,1.938,39,0.093,67,0.004,68,0.004,96,0.29,101,0.488,103,0.703,139,0.832,257,4.63,313,0.566,590,0.104,668,3.597,785,4.63,981,1.987,999,4.305,1000,3.916,1001,3.977,1002,3.977,1003,3.839,1004,3.017,1005,3.017,1006,4.712,1007,6.577,1008,6.577,1009,5.363,1010,6.15,1011,5.363,1012,6.15,1013,4.878,1014,5.808]],["title/interfaces/ISearchUnlinkedMsisdnsPayload.html",[590,0.059,748,2.794]],["body/interfaces/ISearchUnlinkedMsisdnsPayload.html",[3,0.076,4,0.076,5,0.068,8,0.197,18,0.007,20,0.237,28,0.585,39,0.096,67,0.005,68,0.005,101,0.575,103,0.436,106,0.914,136,3.526,139,1.342,313,0.727,321,2.608,340,2.365,463,3.526,500,4.232,590,0.096,748,4.524,907,2.795,957,3.18,1093,5.468,1094,6.09,1095,5.468,1096,5.468,1097,4.224,1098,4.224]],["title/interfaces/ISearchUnlinkedMsisdnsResponse.html",[328,2.168,590,0.059]],["body/interfaces/ISearchUnlinkedMsisdnsResponse.html",[3,0.067,4,0.067,5,0.06,8,0.175,18,0.007,19,0.824,20,0.167,39,0.109,67,0.005,68,0.005,96,0.241,101,0.532,103,0.623,106,1.04,139,1.471,142,2.302,313,0.644,321,2.31,328,3.248,334,2.987,340,2.732,342,2.6,343,1.886,344,2.739,345,1.817,352,4.381,590,0.109,906,4.91,907,2.475,908,3.933,909,4.91,910,4.91,911,5.563]],["title/interfaces/IState.html",[590,0.059,909,3.278]],["body/interfaces/IState.html",[3,0.067,4,0.067,5,0.06,8,0.173,18,0.007,19,0.93,20,0.243,39,0.109,67,0.005,68,0.005,96,0.238,101,0.528,103,0.667,106,1.086,139,1.594,142,1.858,313,0.638,321,2.287,328,2.45,334,4.629,340,2.716,342,2.574,343,1.867,344,2.712,345,1.799,352,2.788,590,0.109,906,4.878,907,2.45,908,3.894,909,5.454,910,4.878,911,4.663]],["title/interfaces/IStateClient.html",[590,0.059,934,3.649]],["body/interfaces/IStateClient.html",[3,0.085,4,0.085,5,0.076,8,0.219,18,0.007,19,0.95,20,0.253,28,0.651,39,0.085,67,0.005,68,0.005,96,0.302,101,0.614,106,1.048,139,1.597,313,0.808,330,2.459,590,0.085,934,6.307,954,4.757,1099,6.815,1100,8.224,1101,8.224]],["title/interfaces/IStreetType.html",[590,0.059,1102,3.903]],["body/interfaces/IStreetType.html",[3,0.082,4,0.082,5,0.073,8,0.213,18,0.007,19,0.94,20,0.248,28,0.631,39,0.1,67,0.005,68,0.005,96,0.358,101,0.602,106,1.034,139,1.581,313,0.784,329,3.34,330,2.386,590,0.113,1064,5.849,1102,7.447,1103,5.897,1104,5.424]],["title/interfaces/IStreetTypesResponse.html",[590,0.059,1064,3.446]],["body/interfaces/IStreetTypesResponse.html",[3,0.084,4,0.084,5,0.074,8,0.216,18,0.007,19,0.696,20,0.206,28,0.641,39,0.101,67,0.005,68,0.005,96,0.362,101,0.608,106,0.797,139,1.17,313,0.797,329,2.999,330,2.424,590,0.113,1064,6.358,1102,7.67,1103,5.99,1104,7.487]],["title/interfaces/IStructuredClientName.html",[590,0.059,969,2.468]],["body/interfaces/IStructuredClientName.html",[3,0.033,4,0.033,5,0.029,8,0.084,18,0.007,19,0.272,20,0.213,21,0.86,28,0.622,37,0.575,39,0.103,67,0.003,68,0.003,96,0.369,101,0.313,103,0.679,106,0.865,136,1.671,139,1.136,140,0.947,142,2.183,209,1.092,304,2.058,313,0.311,329,2.683,330,0.947,340,1.467,343,2.073,345,1.402,370,2.058,371,1.909,372,1.361,373,2.113,374,1.909,375,1.956,376,1.289,377,1.865,378,2.714,379,1.289,380,1.361,382,3.382,402,2.637,403,1.324,406,1.257,408,1.361,463,1.047,500,1.257,543,1.257,556,1.865,590,0.115,720,1.782,754,1.956,801,2.711,802,1.324,803,1.289,815,2.711,816,1.956,817,2.005,907,1.196,921,1.324,947,1.444,948,2.305,949,1.444,950,1.444,951,1.444,952,2.711,953,2.113,954,2.711,955,1.444,956,1.444,957,1.361,958,2.79,959,2.236,960,2.79,961,2.79,962,2.005,963,1.444,964,1.444,965,1.444,966,2.305,967,3.587,968,2.711,969,3.095,970,3.095,971,3.095,972,3.095,973,1.444,974,1.444,975,2.711,976,1.196,977,1.444,978,1.444,979,1.444,980,1.361,981,1.092]],["title/interfaces/IStructuredNameClientSearch.html",[590,0.059,960,2.54]],["body/interfaces/IStructuredNameClientSearch.html",[3,0.033,4,0.033,5,0.029,8,0.085,18,0.007,19,0.275,20,0.214,21,0.866,28,0.625,37,0.581,39,0.104,67,0.003,68,0.003,96,0.37,101,0.315,103,0.677,106,0.868,136,1.684,139,1.141,140,0.956,142,2.055,209,1.103,304,2.074,313,0.314,329,2.694,330,0.956,340,1.477,343,2.084,345,1.413,370,2.074,371,1.924,372,1.375,373,2.13,374,1.924,375,1.971,376,1.302,377,1.879,378,2.727,379,1.302,380,1.375,382,3.398,402,2.654,403,1.337,406,1.269,408,1.375,463,1.057,500,1.269,543,1.269,556,1.879,590,0.115,720,1.796,754,1.971,801,2.729,802,1.337,803,1.302,815,2.729,816,1.971,817,2.021,907,1.208,921,1.337,947,1.458,948,2.322,949,1.458,950,1.458,951,1.458,952,2.729,953,2.13,954,2.729,955,1.458,956,1.458,957,1.375,958,2.808,959,2.254,960,3.203,961,2.808,962,2.021,963,3.301,964,3.301,965,3.301,966,3.604,967,3.604,968,2.729,969,2.729,970,1.375,971,1.375,972,1.375,973,1.458,974,1.458,975,2.729,976,1.208,977,1.458,978,1.458,979,1.458,980,1.375,981,1.103]],["title/interfaces/ISubscriberClient.html",[590,0.059,935,3.903]],["body/interfaces/ISubscriberClient.html",[3,0.075,4,0.075,5,0.067,8,0.195,18,0.007,20,0.285,28,0.8,39,0.075,67,0.005,68,0.005,96,0.269,101,0.57,103,0.658,106,0.994,139,1.533,313,0.718,340,2.47,343,3.056,345,2.945,590,0.075,921,4.439,929,6.749,932,6.374,934,6.749,935,6.27,940,5.398,945,5.398,976,4.01,1105,6.054]],["title/interfaces/ISubscriberClientSearch.html",[590,0.059,975,2.468]],["body/interfaces/ISubscriberClientSearch.html",[3,0.032,4,0.032,5,0.029,8,0.083,18,0.007,19,0.268,20,0.232,21,0.851,28,0.618,37,0.567,39,0.103,67,0.003,68,0.003,96,0.368,101,0.309,103,0.678,106,0.922,136,1.653,139,1.313,140,0.935,142,2.137,209,1.078,304,2.036,313,0.307,329,2.669,330,0.935,340,2.036,343,2.52,345,2.168,370,2.036,371,1.889,372,1.344,373,2.091,374,1.889,375,1.936,376,1.273,377,1.845,378,2.696,379,1.273,380,1.344,382,3.36,402,2.614,403,1.307,406,1.24,408,1.344,463,1.033,500,1.24,543,1.24,556,1.845,590,0.115,720,1.764,754,1.936,801,2.688,802,1.307,803,1.273,815,3.36,816,1.936,817,1.985,907,1.181,921,2.988,947,1.425,948,2.281,949,1.425,950,1.425,951,1.425,952,2.688,953,2.091,954,2.688,955,1.425,956,1.425,957,1.344,958,2.766,959,2.213,960,2.766,961,2.766,962,1.985,963,1.425,964,1.425,965,1.425,966,2.281,967,2.281,968,2.688,969,2.688,970,1.344,971,1.344,972,1.344,973,1.425,974,1.425,975,3.072,976,2.699,977,1.425,978,1.425,979,1.425,980,1.344,981,1.078]],["title/interfaces/ITraceId.html",[590,0.059,890,3.903]],["body/interfaces/ITraceId.html",[3,0.082,4,0.082,5,0.074,8,0.214,18,0.007,20,0.204,39,0.101,67,0.005,68,0.005,96,0.294,97,2.954,101,0.604,103,0.646,136,2.647,313,0.787,501,4.37,503,6.75,590,0.101,888,5.917,889,5.917,890,7.161]],["title/interfaces/IValidationError.html",[590,0.059,883,3.278]],["body/interfaces/IValidationError.html",[3,0.085,4,0.063,5,0.057,8,0.164,18,0.007,20,0.237,39,0.107,62,1.484,67,0.004,68,0.004,96,0.227,98,4.532,101,0.511,103,0.686,106,0.606,112,2.727,116,2.649,126,2.446,167,3.364,205,3.119,222,4.119,295,3.108,310,2.661,313,0.606,478,2.999,590,0.107,617,3.695,843,3.519,845,3.364,848,3.519,850,3.519,876,3.519,877,3.7,878,3.7,879,3.519,880,3.7,881,3.7,882,3.519,883,5.317,884,3.519,885,3.7,886,3.519,887,3.7]],["title/interfaces/IValidationVariables.html",[590,0.059,884,3.278]],["body/interfaces/IValidationVariables.html",[3,0.085,4,0.064,5,0.057,8,0.165,18,0.007,20,0.238,39,0.107,62,1.49,67,0.004,68,0.004,96,0.228,98,4.541,101,0.512,103,0.668,106,0.608,112,2.738,116,2.66,126,2.456,167,3.378,205,3.923,222,3.764,295,3.121,310,1.655,313,0.608,478,3.012,590,0.107,617,4.121,843,3.534,845,3.378,848,3.534,850,3.534,876,3.534,877,3.715,878,3.715,879,3.534,880,3.715,881,3.715,882,3.534,883,5.689,884,4.728,885,5.982,886,3.534,887,3.715]],["title/entities/Journal.html",[1106,4.243,1107,3.446]],["body/entities/Journal.html",[3,0.058,4,0.058,5,0.052,8,0.208,15,1.828,18,0.007,19,0.485,20,0.276,28,0.616,39,0.058,40,0.35,41,1.909,62,2.31,67,0.004,68,0.004,96,0.286,101,0.482,103,0.639,139,1.286,142,1.694,201,2.593,230,4.675,257,3.941,313,0.556,341,3.108,342,4.23,364,2.578,668,3.551,785,3.941,981,2.686,1001,4.492,1002,4.492,1003,3.79,1004,4.079,1005,4.666,1106,6.583,1107,5.348,1108,3.844,1109,8.837,1110,8.837,1111,4.686,1112,4.686,1113,6.455,1114,4.686,1115,7.384,1116,4.686,1117,6.455,1118,4.686,1119,4.686,1120,6.455,1121,5.755,1122,4.686,1123,4.686,1124,4.686,1125,4.686,1126,8.344,1127,6.455,1128,6.455,1129,3.594,1130,3.394,1131,4.686]],["title/classes/JournalDTO.html",[40,0.355,1132,3.903]],["body/classes/JournalDTO.html",[3,0.053,4,0.053,5,0.047,8,0.136,15,1.77,18,0.007,20,0.264,21,1.233,28,0.574,39,0.075,40,0.448,48,2.484,62,2.425,67,0.004,68,0.004,96,0.414,101,0.448,103,0.623,106,0.713,139,1.555,201,2.51,257,4.584,266,5.821,300,1.341,308,2.255,309,2.787,310,2.881,311,1.318,327,2.877,341,3.262,367,3.387,668,3.306,785,4.584,981,2.501,1001,5.225,1002,5.225,1003,3.529,1005,5.427,1130,5.063,1132,7.044,1133,3.773,1134,4.232,1135,7.609,1136,4.232,1137,4.232,1138,4.232,1139,4.232,1140,4.232,1141,5.359,1142,4.609,1143,3.773,1144,3.773,1145,3.773]],["title/modules/JournalizatingModule.html",[69,1.684,1146,3.446]],["body/modules/JournalizatingModule.html",[3,0.078,4,0.078,5,0.069,10,2.256,18,0.006,28,0.892,32,1.641,36,1.726,37,1.37,38,1.947,39,0.078,40,0.467,44,2.093,51,3.671,52,2.784,61,1.982,62,1.816,67,0.005,68,0.005,69,3.01,71,2.92,72,2.994,73,3.155,74,3.155,75,3.072,76,4.176,77,4.176,82,3.935,83,3.155,84,3.155,89,5.173,90,5.863,91,3.44,99,4.164,113,4.308,120,2.92,121,4.308,127,4.118,251,6.956,593,5.173,1107,4.53,1146,6.864,1147,5.576,1148,5.576,1149,5.576,1150,7.119,1151,6.254,1152,6.254,1153,5.576,1154,4.796,1155,6.254,1156,5.129,1157,6.254,1158,6.254,1159,6.254,1160,6.254,1161,3.952,1162,6.254,1163,7.802,1164,6.254,1165,6.254,1166,6.254]],["title/injectables/JournalizatingService.html",[31,1.406,1150,3.446]],["body/injectables/JournalizatingService.html",[3,0.038,4,0.038,5,0.034,8,0.225,9,1.63,10,3.221,12,1.295,15,1.566,17,1.64,18,0.007,19,0.724,20,0.261,21,1.326,26,2.794,27,3.253,28,0.667,31,1.386,32,0.795,36,0.837,37,0.664,38,0.944,39,0.038,40,0.226,42,2.246,43,1.833,44,3.037,52,3.289,59,3.206,61,2.342,62,1.667,67,0.003,68,0.003,96,0.353,101,0.35,114,2.554,126,2.747,128,1.35,139,0.817,140,2.331,142,1.506,153,1.916,160,2.246,209,1.262,217,3.369,257,3.063,562,1.916,576,4.869,601,3.967,785,3.063,981,2.388,999,5.38,1001,1.844,1002,4.494,1004,2.965,1005,3.627,1006,4.415,1013,3.93,1014,3.398,1107,2.196,1121,2.703,1129,2.325,1130,5.06,1150,3.398,1154,2.325,1156,2.487,1167,3.032,1168,6.46,1169,4.183,1170,4.692,1171,6.46,1172,4.183,1173,3.032,1174,5.76,1175,5.739,1176,6.46,1177,3.032,1178,4.692,1179,3.032,1180,4.692,1181,3.032,1182,4.692,1183,3.032,1184,3.032,1185,4.183,1186,3.032,1187,3.032,1188,3.032,1189,3.032,1190,3.032,1191,3.032,1192,3.032,1193,5.739,1194,3.032,1195,3.032,1196,3.032,1197,3.032,1198,3.032,1199,3.032,1200,3.032,1201,3.032,1202,7.705,1203,3.032,1204,3.032,1205,3.032,1206,3.032,1207,7.705,1208,3.032,1209,3.032,1210,3.032,1211,6.46,1212,4.692,1213,3.032,1214,3.032,1215,4.692,1216,3.032,1217,3.032,1218,3.032,1219,3.032,1220,3.032,1221,4.692,1222,4.692,1223,6.46,1224,6.46,1225,4.692,1226,3.032,1227,3.032,1228,3.032,1229,5.739,1230,5.739,1231,4.692,1232,4.692,1233,3.032,1234,3.032,1235,4.692,1236,3.032,1237,4.692,1238,3.032,1239,3.032,1240,3.032,1241,3.032,1242,3.848,1243,3.032,1244,3.032,1245,4.692,1246,3.032,1247,3.032,1248,3.032,1249,3.032,1250,3.032]],["title/controllers/JournalizationController.html",[196,2.617,1251,3.903]],["body/controllers/JournalizationController.html",[3,0.064,4,0.064,5,0.057,8,0.166,9,2.395,10,3.203,15,1.462,17,1.75,18,0.007,19,0.714,20,0.212,21,1.415,26,2.771,27,2.639,28,0.791,32,1.355,36,1.902,37,1.51,38,1.608,39,0.064,40,0.385,43,2.017,44,1.728,59,2.869,61,1.637,67,0.004,68,0.004,96,0.367,114,3.069,140,2.8,142,1.809,151,2.678,160,4.131,196,3.793,198,2.678,201,2.073,262,4.994,317,4.605,318,3.401,715,4.605,751,6.147,758,3.961,1006,5.453,1150,5.621,1251,5.655,1252,5.165,1253,6.895,1254,6.895,1255,6.895,1256,6.793,1257,5.165,1258,4.605,1259,5.165,1260,6.895,1261,5.165,1262,5.655,1263,4.605,1264,5.165,1265,5.165,1266,5.165,1267,5.165]],["title/modules/JournalizationModule.html",[69,1.684,1268,3.649]],["body/modules/JournalizationModule.html",[3,0.08,4,0.08,5,0.071,10,2.31,18,0.006,28,0.919,32,1.68,36,1.766,37,1.402,39,0.08,40,0.478,61,2.029,62,1.859,67,0.005,68,0.005,69,3.041,71,2.989,72,3.064,73,3.229,74,3.229,75,3.144,76,3.888,77,3.144,82,3.993,83,3.229,84,3.229,89,3.894,91,3.521,99,4.225,113,4.41,120,3.696,198,4.105,794,5.251,795,6.59,796,5.251,797,5.251,798,5.251,799,5.251,1108,5.251,1129,4.909,1146,6.806,1153,5.708,1154,4.909,1251,7.048,1263,5.708,1268,7.206,1269,5.708,1270,6.401,1271,6.401,1272,6.401,1273,7.916,1274,6.401,1275,6.401,1276,6.401,1277,6.401,1278,6.401]],["title/classes/JournalsDTO.html",[40,0.355,1142,3.649]],["body/classes/JournalsDTO.html",[3,0.059,4,0.059,5,0.053,8,0.153,12,1.309,15,1.575,17,1.204,18,0.007,19,0.491,20,0.246,21,0.974,28,0.621,39,0.081,40,0.486,48,2.786,62,2.158,67,0.004,68,0.004,96,0.421,101,0.486,103,0.568,106,0.994,139,1.46,201,1.957,257,3.967,266,5.383,300,1.504,308,2.443,309,2.964,310,2.956,311,1.477,327,3.116,341,2.903,367,4.078,668,2.61,785,3.967,981,1.975,1001,4.521,1002,4.521,1003,2.786,1005,4.696,1130,6.422,1132,7.406,1133,4.231,1141,5.805,1142,6.134,1143,5.805,1144,4.231,1145,4.231,1279,6.51,1280,4.745]],["title/controllers/KeycloakController.html",[196,2.617,1281,3.903]],["body/controllers/KeycloakController.html",[3,0.093,4,0.093,5,0.083,18,0.006,28,0.827,32,1.953,39,0.093,40,0.555,67,0.006,68,0.006,151,3.86,196,4.094,198,3.86,621,4.094,1281,7.107,1282,7.443,1283,6.637,1284,6.315,1285,6.105,1286,7.443]],["title/modules/KeycloakIntegrationModule.html",[69,1.684,791,3.446]],["body/modules/KeycloakIntegrationModule.html",[3,0.087,4,0.087,5,0.077,18,0.006,28,0.795,32,1.827,34,5.342,39,0.087,40,0.52,67,0.005,68,0.005,69,3.156,71,3.252,72,3.334,73,3.514,74,3.514,75,3.421,76,4.379,77,4.379,82,4.203,83,3.514,84,3.514,86,6.21,198,3.612,621,3.831,791,7.019,1287,6.21,1288,6.21,1289,6.21,1290,7.64,1291,6.21,1292,6.21]],["title/injectables/KeycloakIntegrationService.html",[31,1.406,1290,3.649]],["body/injectables/KeycloakIntegrationService.html",[3,0.094,4,0.094,5,0.084,18,0.006,28,0.725,31,2.59,32,1.992,39,0.094,40,0.566,67,0.006,68,0.006,128,3.379,129,6.769,1290,6.722,1291,6.769,1292,6.769]],["title/modules/KeycloakModule.html",[69,1.684,474,3.278]],["body/modules/KeycloakModule.html",[3,0.066,4,0.066,5,0.059,10,1.905,18,0.007,20,0.162,26,2.341,27,2.678,28,0.883,32,1.385,36,1.457,37,1.156,38,1.644,39,0.066,40,0.394,44,1.767,51,3.1,52,3.114,61,1.673,67,0.004,68,0.004,69,2.777,71,2.465,72,2.527,73,2.663,74,2.663,75,2.593,76,3.854,77,3.854,82,3.529,83,2.663,84,2.663,87,6.996,88,3.212,89,4.256,90,5.882,91,2.904,92,6.436,96,0.31,97,3.114,98,4.905,99,3.734,100,6.238,101,0.394,102,6.853,103,0.375,104,6.238,105,2.738,106,0.83,107,6.238,108,6.238,109,6.238,110,6.238,111,4.707,112,2.818,113,4.819,114,2.35,115,4.707,116,2.738,120,2.465,121,3.637,124,4.707,125,4.33,126,2.527,127,3.477,198,2.738,474,6.374,497,6.374,620,2.904,1281,4.33,1284,6.611,1285,4.33,1293,4.707,1294,4.707,1295,4.707,1296,5.28,1297,5.28,1298,5.738,1299,4.707,1300,4.707,1301,5.28,1302,5.28]],["title/injectables/KeycloakService.html",[31,1.406,1284,3.278]],["body/injectables/KeycloakService.html",[3,0.073,4,0.073,5,0.065,8,0.188,9,2.863,10,2.975,12,2.064,15,1.748,17,1.898,18,0.006,19,0.775,20,0.267,21,1.535,26,1.957,27,2.863,28,0.857,31,2.21,32,1.535,36,1.614,37,1.281,38,1.821,39,0.073,40,0.436,42,4.299,43,2.921,44,2.503,52,2.603,59,2.434,61,2.613,67,0.005,68,0.005,88,3.558,90,6.148,91,3.217,101,0.558,103,0.586,116,3.878,128,2.603,132,4.236,133,6.327,142,1.962,152,4.029,153,3.696,156,3.851,158,3.558,161,4.029,168,3.851,175,4.486,176,4.486,190,4.486,501,4.925,620,3.217,621,3.217,624,4.549,625,4.549,1284,5.152,1298,7.127,1299,5.215,1303,5.849,1304,7.479,1305,7.479,1306,7.479,1307,5.849,1308,5.215,1309,7.479,1310,5.215,1311,5.215,1312,5.849,1313,5.849,1314,5.849,1315,5.849,1316,5.849,1317,5.849,1318,5.849,1319,5.215]],["title/guards/KeycloakTokenGuard.html",[0,3.903,497,3.278]],["body/guards/KeycloakTokenGuard.html",[2,4.732,3,0.072,4,0.072,5,0.064,8,0.186,9,2.575,10,2.955,11,7.708,12,2.045,15,1.571,17,1.881,18,0.006,19,0.768,20,0.228,21,1.521,22,6.61,23,7.091,25,3.509,26,1.931,27,2.838,28,0.854,31,2.19,32,1.514,36,1.592,37,1.263,38,1.796,39,0.072,40,0.43,41,2.35,42,3.549,43,2.896,44,3.063,49,4.732,51,4.809,52,3.646,59,2.401,61,2.596,62,2.379,67,0.005,68,0.005,90,6.129,91,3.173,120,2.694,121,3.974,171,3.799,190,5.685,311,1.796,497,5.106,501,3.799,620,3.173,621,4.506,718,6.61,1284,6.304,1285,4.732,1298,6.08,1300,5.144,1310,5.144,1320,5.769,1321,5.769,1322,5.769,1323,5.769,1324,8.191,1325,5.769,1326,5.769,1327,5.769,1328,5.769,1329,5.769,1330,5.769,1331,5.769,1332,5.769,1333,7.413,1334,5.769,1335,5.769,1336,5.769]],["title/modules/LogsAndJournalsModule.html",[69,1.684,475,3.007]],["body/modules/LogsAndJournalsModule.html",[3,0.079,4,0.079,5,0.071,18,0.006,28,0.897,32,1.677,36,1.763,37,1.4,39,0.079,40,0.477,67,0.005,68,0.005,69,3.039,71,2.984,72,3.059,73,3.224,74,3.224,75,3.139,76,4.217,77,4.217,82,3.989,83,3.224,84,3.224,89,4.81,91,3.515,99,4.22,214,7.559,262,5.727,475,6.228,476,5.714,481,3.888,516,6.49,1337,5.698,1338,5.698,1339,5.698,1340,6.391,1341,4.901,1342,6.391,1343,6.391,1344,5.698,1345,6.486,1346,6.391]],["title/classes/LogsAndJournalsResolver.html",[40,0.355,1345,3.903]],["body/classes/LogsAndJournalsResolver.html",[3,0.048,4,0.048,5,0.043,8,0.126,9,1.969,10,2.409,12,1.076,15,1.202,17,1.439,18,0.007,19,0.759,20,0.174,21,1.163,26,1.897,27,2.556,28,0.637,36,1.076,37,0.854,38,1.215,39,0.048,40,0.291,43,1.524,44,2.719,47,2.687,52,2.972,59,2.359,61,1.797,62,2.359,67,0.004,68,0.004,96,0.325,103,0.689,114,3.731,126,1.867,151,2.023,160,2.714,201,1.173,209,2.359,226,5.349,257,4.156,262,2.826,300,1.237,311,1.215,341,3.275,367,2.523,489,2.687,494,3.905,515,4.65,516,4.827,576,2.465,785,4.156,981,1.623,1005,2.465,1010,5.971,1012,5.971,1013,4.737,1014,5.64,1107,2.826,1130,5.309,1142,5.621,1341,5.121,1344,3.478,1345,4.65,1347,3.901,1348,6.678,1349,3.901,1350,3.901,1351,3.901,1352,5.64,1353,5.669,1354,3.901,1355,5.477,1356,4.348,1357,3.2,1358,3.901,1359,3.901,1360,3.901,1361,3.901,1362,3.901,1363,3.901,1364,3.901,1365,3.901,1366,3.901,1367,3.901,1368,3.901,1369,5.669,1370,3.901,1371,3.2,1372,3.901,1373,3.901,1374,3.2,1375,3.2,1376,3.2,1377,3.2,1378,3.2]],["title/injectables/LogsAndJournalsService.html",[31,1.406,516,3.133]],["body/injectables/LogsAndJournalsService.html",[3,0.055,4,0.055,5,0.049,8,0.142,9,2.151,10,3.054,12,1.218,15,1.516,17,1.815,18,0.007,19,0.803,20,0.22,21,1.468,26,2.595,27,2.968,28,0.683,31,1.829,32,1.158,36,1.708,37,1.356,38,1.374,39,0.055,40,0.329,43,1.724,44,2.393,59,2.577,61,1.399,67,0.004,68,0.004,96,0.344,103,0.662,114,3.634,128,1.965,139,0.769,140,2.234,142,1.876,151,2.289,160,2.113,257,4.64,262,4.485,481,2.685,514,5.349,516,4.077,543,2.113,563,3.385,668,4.265,691,4.265,785,4.358,999,4.077,1001,5.149,1002,5.149,1003,4.552,1004,2.789,1006,5.16,1169,6.377,1172,5.521,1185,5.521,1262,3.62,1341,5.946,1379,3.936,1380,4.414,1381,4.414,1382,4.414,1383,4.414,1384,4.414,1385,5.521,1386,3.936,1387,3.936,1388,3.936,1389,3.936,1390,3.936,1391,3.936,1392,3.936,1393,3.936,1394,4.414,1395,3.62,1396,4.414]],["title/classes/MonetaryClientSearchDTO.html",[40,0.355,306,3.903]],["body/classes/MonetaryClientSearchDTO.html",[3,0.079,4,0.079,5,0.07,8,0.204,15,1.667,18,0.007,19,0.886,20,0.242,28,0.751,39,0.079,40,0.473,41,3.204,67,0.005,68,0.005,96,0.416,101,0.587,103,0.608,106,0.933,201,2.365,231,5.022,300,2.009,301,4.202,306,7.337,308,2.951,309,3.137,310,2.76,311,1.973,313,0.752,327,3.765,899,6.196,1397,6.337,1398,6.337,1399,6.337]],["title/classes/MsisdnDto.html",[40,0.355,339,3.007]],["body/classes/MsisdnDto.html",[3,0.039,4,0.039,5,0.034,8,0.1,12,1.606,15,1.647,17,0.787,18,0.007,19,0.87,20,0.239,21,1.194,28,0.624,39,0.097,40,0.579,41,1.263,62,2.389,67,0.003,68,0.003,96,0.432,101,0.356,103,0.671,106,1.088,139,1.511,142,1.253,201,2.241,205,2.653,300,0.983,301,3.939,308,2.797,309,3.198,310,3.036,311,0.966,313,0.368,320,5.067,321,3.411,322,2.042,323,3.977,326,3.768,327,2.285,328,2.176,329,3.232,330,1.119,331,2.626,332,2.042,333,5.067,334,3.202,335,3.977,336,3.833,337,2.042,338,5.067,339,4.909,340,2.617,341,3.213,342,4.021,343,2.698,344,3.918,345,2.811,346,2.626,347,3.144,348,1.821,349,2.042,350,2.904,351,3.017,352,2.476,353,2.042,354,2.042,355,4.144,356,2.936,357,3.305,358,2.042,359,3.305,360,2.042,361,2.042,362,2.042,363,2.904,364,1.706,365,2.711,366,1.655,367,1.38,1400,4.774,1401,3.101,1402,3.101,1403,3.101,1404,3.101,1405,3.101]],["title/classes/MsisdnFilterDTO.html",[40,0.355,1406,3.278]],["body/classes/MsisdnFilterDTO.html",[3,0.052,4,0.052,5,0.046,8,0.134,15,1.467,18,0.007,20,0.213,21,1.703,28,0.661,36,1.147,37,0.911,38,1.295,39,0.086,40,0.563,41,1.693,62,2.619,67,0.004,68,0.004,96,0.412,101,0.443,103,0.607,106,0.704,201,2.081,205,3.154,222,4.238,300,1.318,308,2.597,310,2.946,311,1.295,321,3.211,326,3.694,340,2.33,341,3.413,342,1.99,344,3.491,345,2.924,346,2.287,357,2.361,359,2.361,420,3.524,442,4.286,443,2.738,444,2.738,445,5.521,446,4.432,447,2.287,452,2.738,453,4.971,454,4.211,455,4.374,456,2.738,457,2.738,458,2.738,690,4.592,1094,4.088,1097,5.499,1098,5.499,1161,2.627,1406,4.088,1407,3.41,1408,5.789,1409,4.158,1410,4.158,1411,4.158,1412,4.158,1413,5.789,1414,4.158,1415,4.158,1416,5.677,1417,5.677,1418,3.41,1419,3.41,1420,5.677,1421,3.41,1422,3.011,1423,3.41,1424,3.41,1425,3.188,1426,3.41,1427,3.41,1428,4.868,1429,3.41,1430,2.864,1431,3.41,1432,3.41,1433,3.41,1434,3.41]],["title/classes/NameClientSearchDTO.html",[40,0.355,404,3.903]],["body/classes/NameClientSearchDTO.html",[3,0.074,4,0.074,5,0.066,8,0.191,12,1.637,15,1.759,17,1.505,18,0.007,19,0.614,20,0.255,21,1.217,28,0.792,39,0.074,40,0.442,41,3.073,67,0.005,68,0.005,96,0.409,101,0.563,103,0.655,201,2.268,300,1.88,301,4.29,308,2.831,309,3.009,310,2.678,311,1.847,313,0.703,404,7.164,959,4.814,962,4.484,968,4.304,1435,5.931,1436,7.546,1437,7.683,1438,7.546,1439,5.931,1440,5.931,1441,5.931,1442,5.931]],["title/classes/PaginationDTO.html",[40,0.355,1352,3.446]],["body/classes/PaginationDTO.html",[3,0.065,4,0.065,5,0.058,8,0.169,12,1.453,15,1.661,17,1.336,18,0.007,19,0.545,20,0.241,21,1.08,28,0.667,39,0.065,40,0.623,48,4.899,67,0.004,68,0.004,96,0.396,101,0.521,106,1.121,126,3.995,201,2.099,300,1.669,310,2.529,311,1.639,327,3.751,341,3.26,442,3.965,445,4.952,447,4.31,562,5.274,827,5.058,1161,5.274,1352,6.045,1443,5.265,1444,9.36,1445,9.528,1446,6.984,1447,6.984,1448,6.984,1449,8.346,1450,5.265,1451,7.836,1452,5.265,1453,5.265]],["title/classes/PassportClientSearchDTO.html",[40,0.355,383,3.903]],["body/classes/PassportClientSearchDTO.html",[3,0.074,4,0.074,5,0.066,8,0.191,12,1.634,15,1.758,17,1.503,18,0.007,19,0.613,20,0.255,21,1.215,28,0.72,39,0.074,40,0.442,62,2.535,67,0.005,68,0.005,96,0.409,101,0.562,103,0.673,201,2.266,300,1.877,301,4.288,308,2.828,309,3.006,310,2.676,311,1.844,329,3.316,330,2.137,341,3.41,383,7.16,388,6.721,389,6.721,390,6.721,980,4.675,981,3.896,1454,5.922,1455,7.538,1456,7.538,1457,5.922,1458,5.922,1459,5.922]],["title/interfaces/PostSearchBody.html",[590,0.059,1460,3.903]],["body/interfaces/PostSearchBody.html",[3,0.077,4,0.077,5,0.069,8,0.201,18,0.007,20,0.273,39,0.077,67,0.005,68,0.005,96,0.276,101,0.581,103,0.663,106,1.123,139,1.549,158,5.41,313,0.739,367,2.774,590,0.106,601,3.539,668,3.429,1013,5.41,1242,6.386,1460,6.964,1461,5.558,1462,7.929,1463,5.113]],["title/interfaces/PostSearchResult.html",[590,0.059,1463,3.903]],["body/interfaces/PostSearchResult.html",[3,0.08,4,0.08,5,0.071,8,0.207,18,0.007,20,0.265,39,0.08,67,0.005,68,0.005,96,0.286,101,0.593,103,0.565,106,1.022,139,1.122,158,3.921,288,6.096,313,0.764,367,2.869,590,0.107,601,3.659,668,3.545,1013,3.921,1242,7.581,1460,6.52,1461,5.746,1462,5.746,1463,6.52]],["title/modules/PromModule.html",[69,1.684,653,3.649]],["body/modules/PromModule.html",[3,0.074,4,0.074,5,0.066,18,0.007,28,0.86,32,1.554,39,0.103,40,0.442,44,2.523,67,0.005,68,0.005,69,2.935,71,2.765,76,2.909,77,2.909,96,0.334,99,3.161,543,3.608,644,7.558,652,7.16,653,6.359,654,7.16,692,6.183,827,4.289,1464,5.28,1465,7.783,1466,5.922,1467,5.28,1468,5.922,1469,5.28,1470,5.922,1471,7.538,1472,5.28,1473,5.922,1474,6.721,1475,5.922,1476,7.538,1477,5.922]],["title/injectables/RabbitMQService.html",[31,1.406,514,3.007]],["body/injectables/RabbitMQService.html",[3,0.038,4,0.038,5,0.034,8,0.098,9,1.634,10,3.115,12,1.298,15,1.483,17,1.878,18,0.007,19,0.725,20,0.227,21,1.436,26,2.667,27,3.305,28,0.668,31,1.39,32,0.798,36,0.839,37,1.259,38,0.947,39,0.038,40,0.227,42,2.753,43,2.246,44,1.018,59,2.393,61,2.051,67,0.003,68,0.003,96,0.328,97,2.56,103,0.581,114,3.293,127,2.003,128,1.354,136,2.95,137,3.356,140,3.386,141,1.922,142,1.941,160,3.692,187,2.333,318,2.003,328,1.386,480,2.333,490,4.717,492,2.203,514,3.634,535,2.712,562,1.922,691,6.154,716,3.858,720,1.294,748,1.786,758,5.915,785,1.623,1004,1.922,1006,4.675,1256,3.858,1258,5.127,1478,3.042,1479,4.703,1480,4.194,1481,5.751,1482,2.712,1483,6.877,1484,5.751,1485,5.587,1486,3.042,1487,4.194,1488,4.703,1489,3.042,1490,4.703,1491,3.042,1492,4.703,1493,7.699,1494,3.042,1495,8.097,1496,4.194,1497,3.042,1498,3.042,1499,5.127,1500,2.712,1501,2.712,1502,3.042,1503,2.712,1504,4.194,1505,2.203,1506,3.042,1507,3.042,1508,3.042]],["title/modules/RabbitModule.html",[69,1.684,476,2.895]],["body/modules/RabbitModule.html",[3,0.066,4,0.066,5,0.058,18,0.007,19,0.865,28,0.852,32,1.383,36,1.455,37,1.155,38,1.642,39,0.066,40,0.393,44,2.339,51,4.104,52,3.111,61,2.215,62,2.277,67,0.004,68,0.004,69,2.956,71,2.462,72,2.524,73,2.66,74,2.66,75,2.59,76,3.851,77,3.851,82,3.526,83,2.66,84,2.66,89,5.08,90,5.999,91,2.9,96,0.31,99,4.185,113,4.815,120,3.264,121,4.815,125,4.324,126,2.524,127,4.603,318,3.472,476,5.751,480,4.043,514,6.063,600,3.095,611,3.207,683,6.991,689,4.701,691,5.402,827,3.819,1395,5.733,1485,6.467,1500,4.701,1509,4.701,1510,4.701,1511,4.701,1512,5.272,1513,5.272,1514,5.272,1515,5.272,1516,6.99,1517,8.35,1518,6.99,1519,6.99,1520,6.99,1521,6.99,1522,6.99,1523,6.99,1524,6.99,1525,5.272,1526,5.272,1527,6.99,1528,6.99,1529,5.272,1530,5.272]],["title/classes/RegionDto.html",[40,0.355,338,3.007]],["body/classes/RegionDto.html",[3,0.042,4,0.042,5,0.037,8,0.108,12,1.684,15,1.293,17,0.85,18,0.007,19,0.934,20,0.187,21,0.687,28,0.649,39,0.099,40,0.595,41,1.363,62,2.385,67,0.003,68,0.003,96,0.432,101,0.378,103,0.677,106,1.079,139,1.537,142,1.328,201,1.521,205,2.781,300,1.061,301,3.341,308,1.899,309,3.276,310,3.066,311,1.042,313,0.397,320,4.616,321,2.893,322,2.204,323,4.137,326,3.899,327,2.423,328,2.306,329,3.284,330,1.208,331,2.784,332,2.204,333,4.616,334,3.357,335,4.137,336,4.018,337,2.204,338,5.041,339,4.616,340,2.553,341,3.209,342,3.677,343,2.119,344,3.078,345,2.571,346,2.784,347,3.332,348,1.965,349,2.204,350,3.079,351,3.198,352,2.624,353,2.204,354,2.204,355,4.288,356,3.078,357,3.465,358,2.204,359,3.465,360,2.204,361,2.204,362,2.204,363,3.079,364,1.841,365,2.873,366,1.787,367,1.49,1531,5.061,1532,3.347]],["title/injectables/SearchApimeService.html",[31,1.406,81,3.133]],["body/injectables/SearchApimeService.html",[3,0.036,4,0.036,5,0.032,6,4.94,8,0.094,9,1.945,10,3.417,12,0.805,15,1.751,17,2.136,18,0.007,19,0.855,20,0.282,21,1.695,26,2.703,27,3.475,28,0.604,31,1.345,32,0.766,36,0.805,37,0.639,38,0.908,39,0.036,40,0.218,43,1.14,44,3.038,59,3.437,61,3.011,67,0.003,68,0.003,81,2.999,88,1.775,95,7.502,116,4.709,128,1.299,132,2.113,133,5.01,140,3.276,142,2.412,149,2.01,150,2.113,151,1.513,152,5.563,153,5.104,154,2.393,156,5.318,157,5.563,158,4.913,159,5.563,160,4.28,161,5.414,168,5.318,171,5.318,172,5.318,175,6.194,176,6.194,220,5.563,328,1.33,340,1.278,371,1.33,375,1.362,377,1.299,406,2.18,556,1.299,576,1.844,690,1.775,704,4.594,705,4.594,706,4.594,707,4.594,709,4.594,710,4.594,712,4.594,713,4.057,719,2.393,720,4.001,723,2.393,726,2.393,729,2.393,735,2.393,738,2.393,744,2.393,747,2.238,748,3.715,754,1.362,816,1.362,962,1.397,976,1.33,1038,1.844,1063,2.113,1068,5.85,1069,5.85,1073,2.113,1080,2.238,1311,7.007,1533,7.502,1534,2.918,1535,4.994,1536,2.918,1537,2.918,1538,2.918,1539,2.918,1540,2.601,1541,2.918,1542,2.918,1543,2.918,1544,2.918,1545,2.918,1546,2.918,1547,7.273,1548,2.601,1549,7.201,1550,7.201,1551,7.201,1552,7.201,1553,4.06,1554,2.601,1555,2.601,1556,2.601,1557,2.601,1558,2.601,1559,2.601,1560,2.601,1561,2.601]],["title/injectables/SearchApimeService-1.html",[31,1.17,81,2.607,562,2.502]],["body/injectables/SearchApimeService-1.html",[3,0.027,4,0.027,5,0.024,6,4.634,8,0.07,9,1.598,10,3.324,12,0.601,15,1.638,17,2.041,18,0.007,19,0.8,20,0.261,21,1.585,26,2.92,27,3.389,28,0.51,31,1.063,32,0.571,36,0.601,37,0.477,38,0.678,39,0.027,40,0.162,42,2.202,43,0.851,44,1.205,59,3.135,61,2.59,67,0.002,68,0.002,81,2.37,88,1.325,96,0.334,97,0.969,98,3.742,103,0.327,105,3.792,114,3.514,116,2.386,128,0.969,132,1.577,133,4.39,140,3.404,142,2.408,149,1.5,150,1.577,151,1.129,152,2.48,153,2.275,154,1.786,156,2.37,157,3.681,158,3.251,159,2.48,160,2.832,161,1.5,168,2.37,171,3.519,172,2.37,175,1.67,176,1.67,191,1.786,220,2.48,328,0.992,340,1.789,371,0.992,375,1.017,377,0.969,556,0.969,576,1.376,704,3.773,705,3.773,706,3.773,707,3.773,709,3.773,710,3.773,712,3.773,713,3.332,719,1.786,720,3.919,723,1.786,726,1.786,729,1.786,735,1.786,738,1.786,744,1.786,747,1.67,748,3.742,754,1.017,816,1.017,817,2.558,879,3.681,962,1.042,976,0.992,1003,2.701,1038,4.027,1062,1.786,1063,1.577,1066,3.773,1067,1.786,1068,2.607,1069,2.607,1071,5.784,1073,4.885,1080,1.67,1319,3.209,1505,2.607,1533,7.038,1535,4.102,1540,1.942,1548,1.942,1549,1.942,1550,1.942,1551,1.942,1552,1.942,1553,3.209,1554,1.942,1555,1.942,1556,1.942,1557,1.942,1558,1.942,1559,1.942,1560,1.942,1561,1.942,1562,2.178,1563,1.942,1564,2.178,1565,2.178,1566,2.178,1567,2.178,1568,2.952,1569,2.178,1570,2.178,1571,2.178,1572,2.178,1573,2.178,1574,2.178,1575,2.178,1576,2.178,1577,2.178]],["title/classes/SearchAreaWithLabelDTO.html",[40,0.355,858,3.446]],["body/classes/SearchAreaWithLabelDTO.html",[3,0.069,4,0.069,5,0.062,8,0.179,15,1.533,18,0.007,20,0.222,28,0.768,36,1.531,37,1.215,38,1.728,39,0.1,40,0.636,67,0.005,68,0.005,96,0.419,101,0.539,103,0.643,201,2.173,222,3.295,224,5.609,300,1.759,308,2.712,309,3.207,310,2.851,311,1.728,356,3.647,420,3.754,442,4.105,446,4.244,447,3.053,448,5.001,463,2.883,466,5.001,851,4.02,852,4.552,853,4.552,857,5.93,858,6.17,859,3.823,860,4.256,861,4.552,1578,5.55,1579,5.55]],["title/classes/SearchAreasDTO.html",[40,0.355,859,3.278]],["body/classes/SearchAreasDTO.html",[3,0.07,4,0.07,5,0.063,8,0.182,15,1.201,18,0.007,20,0.174,28,0.775,36,1.563,37,1.241,38,1.764,39,0.101,40,0.641,67,0.005,68,0.005,96,0.417,101,0.547,103,0.631,201,1.703,222,3.339,224,4.825,300,1.796,308,2.126,309,3.239,310,2.869,311,1.764,356,3.696,420,3.421,442,4.16,446,4.302,447,3.117,448,4.768,463,2.922,466,4.302,851,4.104,852,4.647,853,4.647,857,6.01,858,6.219,859,5.047,860,6.228,861,4.647,1580,5.666]],["title/classes/SearchAreasResolver.html",[40,0.355,1581,3.903]],["body/classes/SearchAreasResolver.html",[3,0.079,4,0.079,5,0.07,8,0.205,9,2.738,10,3.091,12,1.754,15,1.671,17,2.001,18,0.006,19,0.928,20,0.242,21,1.617,26,2.128,27,3.017,28,0.818,39,0.079,40,0.474,43,2.484,44,2.128,47,4.38,59,2.646,61,2.015,67,0.005,68,0.005,96,0.35,151,3.297,201,1.912,209,3.28,300,2.015,311,1.98,420,4,463,2.536,489,4.38,494,5.43,499,4.876,851,6.487,859,5.901,1581,6.465,1582,6.205,1583,6.359,1584,8.209,1585,6.359,1586,6.795,1587,6.359,1588,6.359,1589,6.359,1590,8.567,1591,4.187,1592,5.669,1593,5.669,1594,6.359]],["title/injectables/SearchAreasService.html",[31,1.406,1586,3.446]],["body/injectables/SearchAreasService.html",[3,0.077,4,0.077,5,0.069,8,0.201,9,2.704,10,3.063,15,1.321,17,1.582,18,0.006,19,0.646,20,0.191,21,1.279,26,2.086,27,2.98,28,0.81,31,2.3,32,1.635,36,1.72,37,1.365,38,1.941,39,0.077,40,0.465,44,2.841,61,1.976,67,0.005,68,0.005,103,0.603,128,2.774,224,4.104,420,3.635,448,3.659,463,2.486,466,3.659,858,5.639,859,4.294,860,5.971,1425,4.78,1582,5.639,1584,6.942,1586,5.639,1593,5.558,1595,6.233,1596,7.786,1597,6.233,1598,5.558,1599,6.233,1600,6.233,1601,6.233,1602,6.233,1603,6.233,1604,6.233,1605,6.233,1606,6.233,1607,5.113,1608,6.386,1609,6.386,1610,6.386,1611,6.386,1612,6.233,1613,5.113,1614,5.113,1615,5.113,1616,5.113,1617,5.113,1618,5.113,1619,5.113,1620,6.233,1621,7.786,1622,6.233,1623,6.233]],["title/modules/SearchClientsModule.html",[69,1.684,866,3.446]],["body/modules/SearchClientsModule.html",[3,0.077,4,0.077,5,0.069,18,0.006,28,0.902,32,1.622,36,2.137,37,1.696,39,0.077,40,0.461,67,0.005,68,0.005,69,2.994,71,2.887,72,2.959,73,3.119,74,3.119,75,3.037,76,4.155,77,4.155,82,3.907,83,3.119,84,3.119,99,4.134,420,2.887,475,5.887,476,5.667,481,3.761,483,4.259,866,7.163,1581,6.353,1582,4.478,1586,7.108,1591,5.839,1592,5.512,1624,5.512,1625,5.512,1626,5.512,1627,6.183,1628,7.108,1629,6.183,1630,5.512,1631,6.353,1632,6.183,1633,6.183]],["title/classes/SearchClientsResolver.html",[40,0.355,1631,3.903]],["body/classes/SearchClientsResolver.html",[3,0.062,4,0.062,5,0.055,8,0.159,9,2.329,10,2.742,12,1.367,15,1.422,17,1.702,18,0.007,19,0.844,20,0.206,21,1.376,25,4.954,26,1.658,27,2.567,28,0.837,29,4.857,30,3.8,32,1.3,36,1.367,37,1.085,38,1.543,39,0.062,40,0.37,43,1.936,44,3.001,47,3.414,51,2.909,52,2.206,59,3.65,61,1.571,62,1.947,66,4.065,67,0.004,68,0.004,96,0.297,126,3.21,136,2.674,140,1.788,142,1.3,144,3.8,145,4.857,146,3.8,151,2.57,160,3.21,201,1.49,209,2.79,226,4.416,300,1.571,311,1.543,341,3.181,366,2.645,367,2.206,368,4.238,370,3.294,378,2.79,419,5.61,420,3.549,422,4.857,423,4.857,449,5.363,462,5.61,463,2.674,466,3.937,467,5.236,489,3.414,494,4.619,496,3.8,499,3.8,500,3.21,501,3.263,502,4.065,503,4.857,720,2.852,754,3.131,1352,5.899,1355,6.234,1356,5.143,1357,4.065,1374,4.065,1375,4.065,1376,4.065,1377,4.065,1378,4.065,1582,5.505,1591,3.263,1628,6.353,1630,4.418,1631,5.5,1634,4.956,1635,8.509,1636,4.956,1637,4.956,1638,4.956,1639,8.144,1640,6.525,1641,6.979,1642,4.956,1643,4.418,1644,4.418,1645,4.418,1646,6.706,1647,4.956,1648,4.956,1649,8.771,1650,4.956,1651,4.956,1652,4.956]],["title/injectables/SearchClientsService.html",[31,1.406,1628,3.446]],["body/injectables/SearchClientsService.html",[3,0.026,4,0.026,5,0.023,8,0.067,9,1.209,10,2.868,12,0.96,15,1.227,17,1.469,18,0.007,19,0.599,20,0.178,21,1.187,26,2.216,27,2.984,28,0.552,31,1.028,32,0.549,36,1.234,37,1.707,38,0.651,39,0.026,40,0.156,42,1.666,43,1.36,44,2.216,52,2.32,59,2.886,61,2.694,62,1.298,67,0.002,68,0.002,96,0.231,103,0.37,106,0.618,114,2.948,128,0.931,140,2.751,142,2.23,160,2.77,226,2.944,231,1.228,303,1.715,310,2.016,340,1.255,343,0.726,345,0.7,370,4.131,371,0.953,372,1.085,373,1.055,374,0.953,375,0.976,376,1.71,377,1.99,378,3.091,379,1.027,380,1.085,402,3.633,420,2.917,424,4.114,432,4.114,439,4.114,448,4.072,449,4.114,451,3.238,454,2.72,455,4.383,466,3.398,481,1.272,483,1.441,512,3.986,513,1.715,514,3.293,515,3.667,516,3.432,518,5.124,558,1.715,576,1.322,690,1.272,720,2.657,721,2.855,724,2.855,727,2.855,730,3.667,733,3.667,736,2.855,739,3.667,742,3.667,745,2.855,754,2.087,899,1.515,952,3.597,980,1.805,981,2.408,1013,1.272,1161,2.2,1371,1.715,1505,3.775,1582,4.525,1607,2.855,1608,2.855,1609,2.855,1610,2.855,1611,2.855,1613,2.855,1614,1.715,1615,1.715,1616,2.855,1617,2.855,1618,1.715,1619,1.715,1628,2.521,1640,4.438,1643,1.865,1653,2.091,1654,4.471,1655,5.212,1656,4.471,1657,2.091,1658,2.091,1659,7.201,1660,2.091,1661,2.091,1662,2.091,1663,4.471,1664,5.212,1665,2.091,1666,2.091,1667,4.471,1668,1.865,1669,2.091,1670,2.091,1671,3.986,1672,3.986,1673,3.986,1674,6.185,1675,6.623,1676,2.091,1677,2.091,1678,2.091,1679,4.471,1680,2.091,1681,2.091,1682,2.091,1683,2.091,1684,2.091,1685,2.091,1686,2.091,1687,3.481,1688,3.481,1689,2.091,1690,2.091,1691,2.091,1692,2.091,1693,2.091,1694,2.091,1695,2.091,1696,3.481,1697,2.091,1698,2.091,1699,3.481,1700,2.091,1701,2.091,1702,3.481,1703,3.481,1704,3.481,1705,2.091,1706,2.091,1707,6.623,1708,1.865,1709,3.103,1710,6.623,1711,1.865,1712,2.091,1713,3.481,1714,2.091,1715,5.212,1716,2.091,1717,2.091,1718,3.481,1719,3.481,1720,3.481]],["title/injectables/SearchDictionaryService.html",[31,1.406,1065,3.903]],["body/injectables/SearchDictionaryService.html",[3,0.045,4,0.045,5,0.04,6,5.324,8,0.117,9,2.222,10,3.541,12,0.999,15,1.902,17,2.302,18,0.007,19,0.93,20,0.281,21,1.842,26,2.967,27,3.659,28,0.675,31,1.586,32,0.95,36,0.999,37,0.793,38,1.128,39,0.045,40,0.27,42,3.062,43,1.415,44,1.212,59,1.507,61,2.845,67,0.003,68,0.003,88,2.203,103,0.454,105,3.317,116,1.878,128,1.612,132,2.623,133,5.45,140,3.535,142,1.678,149,2.495,150,2.623,151,1.878,152,2.495,153,2.289,156,2.385,157,2.495,158,2.203,159,2.495,160,4.341,161,2.495,168,2.385,171,2.385,172,2.385,220,2.495,340,1.507,371,1.651,375,2.507,377,2.39,406,1.734,556,2.39,590,0.045,720,4.181,816,2.507,894,2.623,904,2.623,914,2.623,962,1.734,976,1.651,983,2.623,997,2.623,1003,2.126,1017,2.623,1025,2.623,1038,2.289,1046,2.623,1055,2.623,1060,5.802,1061,8.085,1062,2.971,1063,2.623,1064,2.623,1065,4.403,1066,5.247,1067,2.971,1068,2.623,1069,2.623,1070,5.703,1071,7.169,1072,3.23,1073,6.222,1074,5.703,1075,3.23,1076,5.703,1077,3.23,1078,5.703,1079,3.23,1080,2.778,1081,5.703,1082,3.23,1083,5.703,1084,3.23,1085,5.703,1086,3.23,1087,5.703,1088,3.23,1089,5.703,1090,3.23,1091,5.703,1092,3.23,1563,3.23,1721,3.622,1722,3.622,1723,3.622,1724,3.622,1725,3.622,1726,3.622,1727,3.622,1728,3.622,1729,3.622,1730,3.622,1731,3.622,1732,3.622,1733,3.622,1734,3.622,1735,3.622,1736,3.622,1737,3.622,1738,3.622,1739,3.622,1740,3.622,1741,3.622,1742,3.622,1743,3.622]],["title/injectables/SearchService.html",[31,1.406,1485,3.446]],["body/injectables/SearchService.html",[3,0.055,4,0.055,5,0.049,8,0.142,9,2.147,10,2.577,12,1.706,15,1.31,17,1.813,18,0.007,19,0.64,20,0.219,21,1.268,26,2.069,27,3.123,28,0.682,31,1.826,32,1.155,39,0.055,40,0.329,42,2.108,43,1.72,59,1.832,61,1.396,67,0.004,68,0.004,96,0.195,103,0.507,114,2.752,127,2.9,128,1.96,140,3.134,142,1.874,187,3.377,318,2.9,691,6.615,758,6.256,1038,5.833,1482,3.926,1483,6.906,1485,4.477,1487,5.512,1496,5.512,1499,6.906,1501,3.926,1503,3.926,1504,3.926,1505,3.19,1744,7.143,1745,4.404,1746,4.404,1747,6.182,1748,4.404,1749,6.182]],["title/classes/SearchUnlinkedMsisdnsDTO.html",[40,0.355,363,2.895]],["body/classes/SearchUnlinkedMsisdnsDTO.html",[3,0.042,4,0.042,5,0.037,8,0.108,12,1.403,15,1.078,18,0.007,19,0.872,20,0.156,28,0.651,39,0.099,40,0.596,41,1.372,62,2.39,67,0.003,68,0.003,96,0.432,101,0.379,103,0.67,106,1.06,139,1.467,142,1.334,201,1.529,205,2.791,300,1.068,301,3.008,308,1.908,309,3.282,310,3.068,311,1.049,313,0.399,320,4.628,321,2.605,322,2.218,323,3.726,326,3.909,327,2.434,328,2.317,329,3.288,330,1.215,331,2.797,332,2.218,333,4.628,334,3.369,335,4.151,336,4.033,337,2.218,338,4.628,339,4.628,340,2.575,341,3.215,342,3.686,343,2.127,344,3.09,345,2.577,346,2.797,347,3.348,348,1.977,349,2.218,350,3.093,351,3.213,352,2.637,353,2.218,354,2.218,355,4.521,356,3.442,357,3.478,358,2.218,359,3.478,360,2.218,361,2.218,362,2.218,363,4.151,364,1.853,365,2.887,366,3.269,367,2.726,1750,3.368,1751,3.368]],["title/interfaces/SearchUnlinkedMsisdnsInput.html",[590,0.059,1094,3.278]],["body/interfaces/SearchUnlinkedMsisdnsInput.html",[3,0.067,4,0.067,5,0.06,8,0.175,18,0.007,20,0.244,21,1.733,28,0.518,39,0.089,67,0.005,68,0.005,96,0.241,101,0.532,103,0.565,106,1.068,136,2.842,139,1.471,313,0.644,321,2.31,340,2.613,463,2.166,500,2.6,590,0.089,748,3.188,907,2.475,957,2.816,1093,4.842,1094,5.481,1095,6.355,1096,6.355,1097,5.819,1098,5.819]],["title/modules/SearchUnlinkedMsisdnsModule.html",[69,1.684,867,3.446]],["body/modules/SearchUnlinkedMsisdnsModule.html",[3,0.079,4,0.079,5,0.071,18,0.006,28,0.88,32,1.674,36,2.18,37,1.73,39,0.079,40,0.476,67,0.005,68,0.005,69,3.037,71,2.979,72,3.054,73,3.218,74,3.218,75,3.134,76,4.214,77,4.214,82,3.985,83,3.218,84,3.218,99,4.216,321,3.814,420,2.979,475,5.933,476,5.712,481,3.881,483,4.395,867,7.137,1591,5.201,1752,5.688,1753,5.688,1754,6.38,1755,5.688,1756,7.374,1757,7.137,1758,5.233,1759,6.38,1760,5.688,1761,6.38]],["title/classes/SearchUnlinkedMsisdnsQueryDto.html",[40,0.355,1422,3.446]],["body/classes/SearchUnlinkedMsisdnsQueryDto.html",[3,0.049,4,0.049,5,0.044,8,0.127,12,1.089,15,1.562,17,1.001,18,0.007,19,0.409,20,0.226,21,1.605,28,0.642,36,1.089,37,0.864,38,1.229,39,0.084,40,0.55,41,2.328,62,2.623,67,0.004,68,0.004,96,0.405,101,0.426,103,0.633,106,0.874,201,2.021,205,1.798,222,4.262,300,1.251,308,2.145,310,2.914,311,1.229,321,3.327,326,3.588,340,2.562,341,3.286,342,1.889,344,1.99,345,2.618,346,2.171,357,2.24,359,2.24,420,3.652,442,4.184,443,2.598,444,2.598,445,5.444,446,4.326,447,2.171,452,2.598,453,4.853,454,4.089,455,4.247,456,2.598,457,2.598,458,2.598,690,4.483,1094,4.63,1097,6.142,1098,6.142,1161,3.612,1406,2.718,1407,3.236,1408,5.154,1413,5.154,1416,5.513,1417,5.513,1418,3.236,1419,3.236,1420,5.513,1421,3.236,1422,4.14,1423,3.236,1424,4.688,1425,4.384,1426,4.688,1427,4.688,1428,4.688,1429,4.688,1430,2.718,1431,3.236,1432,3.236,1433,3.236,1434,3.236,1762,5.716,1763,5.716,1764,5.716,1765,3.946,1766,3.946,1767,3.946]],["title/classes/SearchUnlinkedMsisdnsResolver.html",[40,0.355,1756,3.649]],["body/classes/SearchUnlinkedMsisdnsResolver.html",[3,0.062,4,0.062,5,0.056,8,0.161,9,2.348,10,2.759,12,1.865,15,1.433,17,1.716,18,0.006,19,0.848,20,0.208,21,1.387,25,4.978,26,1.678,27,2.587,28,0.84,29,5.538,30,3.846,32,1.316,36,1.384,37,1.098,38,1.561,39,0.062,40,0.374,42,2.4,43,1.959,44,3.061,47,3.454,51,3.968,52,3.009,59,3.663,61,1.589,62,1.963,66,5.544,67,0.004,68,0.004,126,3.236,136,2.696,140,1.809,142,1.316,144,3.846,145,4.896,146,3.846,160,3.236,201,1.507,209,2.813,226,4.451,300,1.589,311,1.561,321,3.826,328,3.08,341,3.197,352,2.6,355,4.804,363,4.652,366,2.677,367,2.232,420,3.57,463,3.264,489,3.454,494,4.656,496,3.846,499,3.846,500,3.236,501,3.302,502,4.113,503,4.896,713,6.188,748,3.968,1352,5.927,1355,6.272,1356,5.184,1357,4.113,1374,4.113,1375,4.113,1376,4.113,1377,4.113,1378,4.113,1406,5.637,1422,5.927,1430,5.637,1591,3.302,1640,6.276,1641,6.712,1644,4.471,1645,4.471,1756,5.184,1757,6.375,1758,6.272,1760,4.471,1768,5.015,1769,5.015,1770,5.015,1771,5.015,1772,5.015,1773,4.471,1774,7.647,1775,5.015,1776,5.015,1777,5.015,1778,5.015,1779,5.015,1780,5.015,1781,5.015,1782,6.76,1783,5.015]],["title/classes/SearchUnlinkedMsisdnsResponseDto.html",[40,0.355,351,3.007]],["body/classes/SearchUnlinkedMsisdnsResponseDto.html",[3,0.042,4,0.042,5,0.037,8,0.108,12,1.685,15,1.074,17,0.85,18,0.007,19,0.888,20,0.156,21,0.687,28,0.65,39,0.099,40,0.595,41,2.063,62,2.442,67,0.003,68,0.003,96,0.431,101,0.378,103,0.67,106,1.047,139,1.465,142,1.917,201,1.007,205,2.782,300,1.062,301,2.999,308,1.257,309,3.277,310,3.066,311,1.043,313,0.397,320,4.617,321,2.597,322,2.206,323,3.714,326,3.9,327,2.424,328,2.782,329,3.285,330,1.209,331,2.786,332,2.206,333,4.617,334,3.358,335,4.139,336,4.02,337,2.206,338,4.617,339,5.192,340,2.59,341,3.285,342,3.679,343,2.12,344,3.08,345,2.572,346,2.786,347,3.335,348,1.967,349,2.206,350,3.081,351,4.3,352,3.789,353,3.335,354,2.206,355,4.29,356,3.08,357,3.466,358,2.206,359,3.466,360,2.206,361,2.206,362,2.206,363,3.081,364,1.843,365,2.875,366,1.788,367,1.491,1784,5.064]],["title/injectables/SearchUnlinkedMsisdnsService.html",[31,1.406,1757,3.446]],["body/injectables/SearchUnlinkedMsisdnsService.html",[3,0.029,4,0.029,5,0.026,8,0.076,9,1.334,10,2.915,12,0.651,15,1.309,17,1.567,18,0.007,19,0.639,20,0.19,21,1.267,26,2.435,27,3.093,28,0.535,31,1.135,32,0.619,36,1.06,37,0.841,38,0.734,39,0.029,40,0.176,43,0.921,44,2.651,52,1.71,59,1.599,61,2.561,62,1.412,67,0.002,68,0.002,96,0.249,114,2.946,128,1.049,140,2.858,142,2.267,151,1.223,160,3.994,205,1.074,226,2.53,230,1.708,310,0.761,321,3.437,328,2.555,340,2.4,342,1.129,345,0.789,355,5.272,356,1.938,357,3.183,359,1.339,420,3.091,454,2.958,481,1.434,513,1.934,514,3.543,518,4.598,558,1.934,576,1.49,690,1.434,691,4.56,713,3.521,747,1.808,748,3.886,749,1.934,911,4.956,1161,2.428,1371,1.934,1406,5.013,1430,4.56,1480,3.425,1505,4.061,1640,5.353,1641,6.347,1674,3.425,1708,2.102,1709,2.102,1711,2.102,1757,2.783,1758,5.429,1773,2.102,1785,2.358,1786,3.842,1787,2.358,1788,2.358,1789,2.358,1790,5.606,1791,4.862,1792,5.606,1793,4.862,1794,5.606,1795,4.862,1796,3.842,1797,2.358,1798,4.335,1799,2.358,1800,2.358,1801,2.358,1802,5.606,1803,6.173,1804,3.842,1805,2.358,1806,2.358,1807,2.358,1808,2.358,1809,2.358,1810,2.358,1811,2.358,1812,2.358,1813,2.358,1814,2.358,1815,2.358,1816,2.358,1817,2.358,1818,3.842,1819,3.842,1820,4.862,1821,2.358,1822,4.862,1823,2.358,1824,4.862,1825,2.358,1826,4.862,1827,2.358,1828,2.358,1829,2.358,1830,2.358,1831,3.842,1832,3.842,1833,3.842]],["title/classes/SortInput.html",[40,0.355,449,3.133]],["body/classes/SortInput.html",[3,0.059,4,0.059,5,0.052,8,0.152,12,1.306,15,1.573,17,1.201,18,0.007,19,0.49,20,0.228,21,0.971,28,0.709,36,1.306,37,1.037,38,1.474,39,0.099,40,0.625,62,2.155,67,0.004,68,0.004,96,0.424,101,0.485,103,0.65,106,0.771,201,1.954,222,3.383,300,1.5,308,2.438,309,2.592,310,3.1,311,1.474,327,3.111,331,2.604,340,1.824,341,2.899,356,2.388,364,2.604,365,3.69,366,2.526,367,2.107,368,4.69,374,2.962,378,2.704,419,3.26,420,3.73,421,3.63,422,4.707,423,3.428,424,4.887,427,3.428,428,3.428,429,3.428,430,3.428,432,4.887,435,3.428,436,3.428,437,3.428,439,4.887,442,4.536,443,3.117,444,3.117,445,5.049,446,4.691,447,2.604,448,4.358,449,4.28,450,3.63,451,4.707,452,3.117,453,5.943,454,5.263,455,5.599,456,4.28,457,3.117,458,3.117,459,3.63,460,3.63,461,3.63,462,3.26,463,1.888,464,3.428,465,3.63,466,2.779,467,3.26,468,3.63,1834,6.499,1835,4.733,1836,4.733,1837,4.733]],["title/classes/SortInputDTO.html",[40,0.355,1430,3.278]],["body/classes/SortInputDTO.html",[3,0.053,4,0.053,5,0.047,8,0.137,12,1.173,15,1.485,17,1.079,18,0.007,19,0.44,20,0.215,21,0.872,28,0.669,36,1.173,37,0.931,38,1.324,39,0.087,40,0.569,41,1.731,62,2.497,67,0.004,68,0.004,96,0.411,101,0.45,103,0.644,106,0.715,201,1.813,205,1.937,222,4.13,300,1.347,308,2.262,310,3.034,311,1.324,321,3.243,326,3.74,340,2.413,341,3.145,342,2.886,344,2.144,345,2.798,346,2.338,357,3.423,359,3.423,420,3.56,442,4.329,443,2.799,444,2.799,445,5.553,446,4.476,447,2.338,452,2.799,453,5.786,454,5.087,455,5.434,456,3.97,457,2.799,458,2.799,690,4.638,1094,4.153,1097,5.546,1098,5.546,1161,2.686,1406,2.928,1407,3.487,1408,5.373,1413,5.373,1416,5.747,1417,5.747,1418,3.487,1419,3.487,1420,5.747,1421,3.487,1422,3.079,1423,3.487,1424,3.487,1425,3.26,1426,3.487,1427,3.487,1428,4.945,1429,3.487,1430,4.153,1431,3.487,1432,3.487,1433,3.487,1434,3.487,1838,6.03,1839,4.251,1840,4.251,1841,4.251]],["title/classes/StateDto.html",[40,0.355,333,3.007]],["body/classes/StateDto.html",[3,0.041,4,0.041,5,0.036,8,0.106,12,1.665,15,1.428,17,0.834,18,0.007,19,0.931,20,0.207,21,0.674,28,0.643,39,0.099,40,0.591,41,1.339,62,2.372,67,0.003,68,0.003,96,0.432,101,0.372,103,0.682,106,1.075,139,1.531,142,1.309,201,1.814,205,2.75,300,1.042,301,3.559,308,2.264,309,3.257,310,3.059,311,1.023,313,0.39,320,4.579,321,3.082,322,2.164,323,4.099,326,3.867,327,2.389,328,2.274,329,3.272,330,1.186,331,2.745,332,2.164,333,5.01,334,4.361,335,4.099,336,3.973,337,2.164,338,4.579,339,4.579,340,2.544,341,3.191,342,3.652,343,2.096,344,3.044,345,2.553,346,2.745,347,3.286,348,1.929,349,2.164,350,3.036,351,3.154,352,2.588,353,2.164,354,2.164,355,4.254,356,3.044,357,3.426,358,2.164,359,3.426,360,2.164,361,2.164,362,2.164,363,3.036,364,1.808,365,2.834,366,1.754,367,1.463,1842,4.991,1843,3.287,1844,3.287]],["title/classes/StructuredNameClientSearchDTO.html",[40,0.355,1437,3.903]],["body/classes/StructuredNameClientSearchDTO.html",[3,0.072,4,0.072,5,0.065,8,0.187,12,1.606,15,1.839,17,1.478,18,0.007,19,0.603,20,0.266,21,1.195,28,0.712,39,0.072,40,0.434,41,3.037,67,0.005,68,0.005,96,0.419,101,0.556,103,0.706,201,2.473,300,1.845,301,4.404,308,3.087,309,2.974,310,2.799,311,1.813,313,0.69,969,4.266,970,4.65,971,4.266,972,4.837,1437,7.115,1845,5.822,1846,7.457,1847,8.675,1848,7.457,1849,5.822,1850,5.822,1851,5.822,1852,5.822,1853,5.822]],["title/classes/SubscriberClientSearchDTO.html",[40,0.355,407,3.903]],["body/classes/SubscriberClientSearchDTO.html",[3,0.061,4,0.061,5,0.054,8,0.157,12,1.829,15,1.893,17,1.237,18,0.007,19,0.505,20,0.274,21,1.546,28,0.719,39,0.061,40,0.364,41,2.7,62,1.925,67,0.004,68,0.004,96,0.426,101,0.495,103,0.703,106,1.003,139,1.52,201,2.624,226,3.209,300,1.545,301,4.463,308,3.274,309,2.644,310,2.881,311,1.517,313,0.578,323,2.964,326,3.539,335,2.964,340,2.586,341,2.59,343,3.101,345,2.988,346,2.681,348,2.861,350,2.964,407,6.634,813,7.324,921,4.504,975,3.908,976,4.069,1854,4.873,1855,6.63,1856,4.873,1857,4.873,1858,4.873,1859,4.873,1860,4.873,1861,4.873,1862,4.873,1863,4.873]],["title/classes/UnlinkedMsisdnsDto.html",[40,0.355,355,2.794]],["body/classes/UnlinkedMsisdnsDto.html",[3,0.038,4,0.038,5,0.034,8,0.1,12,1.605,15,1.646,17,0.786,18,0.007,19,0.87,20,0.238,21,0.635,28,0.624,39,0.096,40,0.579,41,1.261,62,2.578,67,0.003,68,0.003,96,0.432,101,0.356,103,0.662,106,1.028,139,1.432,142,1.251,201,2.24,205,3.396,300,0.981,301,3.937,308,2.796,309,3.196,310,3.036,311,0.964,313,0.367,320,4.458,321,3.409,322,2.039,323,3.538,326,3.765,327,2.283,328,2.173,329,3.545,330,1.117,331,2.623,332,2.039,333,4.458,334,3.199,335,3.974,336,3.829,337,2.039,338,4.458,339,4.458,340,2.604,341,3.468,342,4.019,343,2.02,344,2.933,345,2.81,346,2.623,347,3.14,348,1.818,349,2.039,350,2.901,351,3.013,352,2.473,353,2.039,354,2.039,355,4.558,356,3.295,357,4.408,358,3.14,359,4.408,360,2.039,361,2.039,362,2.039,363,2.901,364,1.703,365,2.707,366,1.653,367,1.378,1864,3.096,1865,4.768,1866,3.096,1867,3.096,1868,3.096,1869,3.096,1870,3.096]],["title/controllers/UptimeController.html",[196,2.617,630,3.903]],["body/controllers/UptimeController.html",[3,0.091,4,0.091,5,0.081,8,0.236,9,2.982,15,1.553,18,0.006,26,2.452,28,0.7,32,1.923,39,0.091,40,0.547,61,2.323,67,0.005,68,0.005,196,4.724,198,3.8,201,2.203,630,7.043,696,8.375,700,6.534,1871,7.328,1872,8.587,1873,7.328]],["title/dependencies.html",[72,2.743,1874,3.531]],["body/dependencies.html",[18,0.006,20,0.174,32,1.489,40,0.547,48,5.516,67,0.005,68,0.005,72,2.716,88,3.452,91,3.121,145,4.11,187,4.351,209,2.361,234,7.246,236,3.331,238,5.059,266,4.11,279,5.059,311,1.767,318,3.736,447,3.121,491,5.059,543,2.716,598,5.223,638,6.539,642,5.059,644,6.666,645,5.059,646,6.539,648,5.059,657,4.654,681,5.059,682,5.059,827,4.11,833,6.539,1129,4.351,1154,4.351,1156,4.654,1465,5.059,1467,5.059,1469,5.059,1472,5.059,1474,6.539,1875,5.674,1876,5.674,1877,5.674,1878,5.674,1879,5.674,1880,5.674,1881,5.674,1882,5.674,1883,5.674,1884,5.674,1885,7.334,1886,5.674,1887,8.591,1888,5.674,1889,5.674,1890,5.674,1891,5.674,1892,5.674,1893,5.674,1894,5.674,1895,5.674,1896,5.674,1897,5.674,1898,8.127,1899,7.334,1900,5.674,1901,5.674,1902,5.674,1903,5.674,1904,5.674,1905,5.674,1906,5.674,1907,5.674,1908,5.674,1909,5.674,1910,5.674,1911,7.334,1912,5.674,1913,5.674,1914,5.674,1915,5.674,1916,5.674,1917,5.674,1918,5.674,1919,5.674,1920,5.674,1921,5.674,1922,5.674,1923,5.674,1924,5.674,1925,5.674,1926,5.674,1927,5.674,1928,5.674,1929,5.674,1930,5.674,1931,5.674,1932,5.674,1933,5.674,1934,5.674,1935,5.674,1936,5.674,1937,5.674,1938,5.674,1939,5.674,1940,5.674,1941,5.674,1942,5.674,1943,5.674]],["title/miscellaneous/enumerations.html",[1944,2.502,1945,5.11]],["body/miscellaneous/enumerations.html",[8,0.123,18,0.007,67,0.004,68,0.004,231,5.971,340,2.036,345,1.867,376,3.238,379,2.74,424,3.673,427,4.04,428,4.04,429,2.763,430,4.04,432,3.673,435,2.763,436,2.763,437,2.763,439,3.673,448,3.275,464,4.04,492,4.775,526,4.973,527,4.973,528,4.973,529,4.973,530,4.973,531,4.973,532,4.973,533,4.973,534,4.973,556,1.698,562,4.166,563,4.277,785,2.036,817,2.67,953,3.659,1013,3.393,1408,4.277,1413,4.277,1568,4.575,1668,4.973,1944,2.411,1945,3.402,1946,6.593,1947,6.593,1948,7.253,1949,5.878,1950,3.129,1951,4.575,1952,3.815,1953,3.402,1954,4.973,1955,5.878,1956,3.129,1957,3.815,1958,3.815,1959,3.815,1960,3.815,1961,3.815,1962,2.926,1963,3.815,1964,3.815,1965,3.815,1966,3.815,1967,3.815,1968,3.815,1969,3.815,1970,3.815,1971,3.815,1972,5.578,1973,3.815,1974,3.815,1975,3.815,1976,3.815,1977,3.815,1978,3.815,1979,3.815,1980,3.815,1981,3.815,1982,3.815,1983,3.815,1984,3.815,1985,3.815,1986,3.815,1987,3.815,1988,4.973,1989,3.815,1990,3.815,1991,3.815,1992,3.815,1993,3.815,1994,3.815,1995,3.815,1996,3.815,1997,3.815,1998,3.815,1999,3.815,2000,3.815,2001,3.815,2002,3.815,2003,3.815,2004,3.815,2005,3.815,2006,3.815,2007,3.815,2008,3.815,2009,3.815,2010,3.815,2011,3.815,2012,3.815,2013,3.129,2014,4.973,2015,3.815,2016,3.815,2017,3.815,2018,3.815,2019,3.402,2020,5.578,2021,5.578,2022,5.578,2023,5.578,2024,3.402]],["title/miscellaneous/functions.html",[1944,2.502,2025,5.11]],["body/miscellaneous/functions.html",[8,0.168,17,2.199,18,0.007,19,0.897,20,0.284,21,1.778,26,2.785,48,3.07,67,0.004,68,0.004,75,4.591,96,0.369,103,0.633,224,3.443,231,3.07,331,4.296,367,2.327,368,3.304,424,4.577,432,4.577,439,4.577,702,3.787,953,2.638,1027,4.289,1038,5.259,1944,3.304,1962,4.01,2025,4.662,2026,7.809,2027,6.952,2028,7.421,2029,6.952,2030,6.952,2031,6.952,2032,5.229,2033,5.229,2034,5.229,2035,5.229,2036,4.662,2037,5.229,2038,5.229,2039,5.229,2040,5.229,2041,5.229,2042,5.229,2043,5.229,2044,6.198,2045,6.952,2046,5.229]],["title/index.html",[8,0.127,2047,3.96,2048,3.96]],["body/index.html",[5,0.066,18,0.006,19,0.617,33,3.09,37,1.305,48,3.499,67,0.005,68,0.005,160,2.853,261,5.313,688,5.313,756,4.57,757,4.57,1038,5.529,1395,4.888,1493,6.748,1495,5.313,1591,3.924,1962,5.804,2049,5.959,2050,8.749,2051,7.568,2052,7.568,2053,5.959,2054,5.959,2055,7.568,2056,7.568,2057,8.317,2058,8.317,2059,9.714,2060,5.959,2061,5.959,2062,7.568,2063,8.317,2064,5.959,2065,5.959,2066,5.959,2067,5.959,2068,5.959,2069,7.568,2070,9.766,2071,9.377,2072,9.377,2073,7.568,2074,8.749,2075,7.568,2076,7.568,2077,7.568,2078,7.568,2079,8.317,2080,7.568,2081,8.317,2082,8.749,2083,5.959,2084,5.959,2085,5.959,2086,5.959,2087,7.568,2088,5.959,2089,5.959,2090,5.959,2091,5.959,2092,5.959,2093,9.031,2094,8.317,2095,7.568]],["title/modules.html",[71,3.045]],["body/modules.html",[18,0.005,67,0.005,68,0.005,70,4.936,71,3.182,291,4.936,469,4.936,474,4.695,475,4.307,476,4.146,626,4.936,653,5.226,787,5.226,791,4.936,862,5.226,866,4.936,867,4.936,1146,4.936,1268,5.226,2096,9.995,2097,9.995,2098,9.995,2099,10.019,2100,6.815,2101,6.815]],["title/overview.html",[2102,5.816]],["body/overview.html",[1,5.992,2,3.685,14,5.52,18,0.006,67,0.004,68,0.004,69,1.59,70,6.641,71,2.097,72,2.15,73,2.266,74,2.266,75,2.206,76,2.206,77,2.206,78,4.005,79,4.005,80,4.005,81,5.752,82,3.162,83,2.266,84,2.266,128,2,198,2.33,210,5.229,214,6.699,291,6.165,292,4.005,293,4.005,294,4.005,295,5.314,300,1.424,313,0.533,469,6.771,470,4.005,471,4.005,472,4.005,473,4.005,474,6.138,475,5.992,476,5.687,477,5.992,478,5.128,492,3.254,497,5.382,514,5.52,516,5.752,562,2.839,626,6.327,627,4.005,752,5.229,787,6.833,788,4.005,789,4.005,790,4.005,791,6.165,862,7.271,863,4.005,864,4.005,865,4.005,866,6.823,867,6.711,1108,3.685,1146,6.165,1147,4.005,1148,4.005,1149,4.005,1150,6.327,1268,5.992,1269,4.005,1284,6.017,1287,4.005,1288,4.005,1289,4.005,1290,6.699,1293,4.005,1294,4.005,1295,4.005,1337,4.005,1338,4.005,1339,4.005,1485,5.229,1509,4.005,1510,4.005,1511,4.005,1586,6.327,1624,4.005,1625,4.005,1626,4.005,1628,6.327,1752,4.005,1753,4.005,1755,4.005,1756,5.992,1757,6.327,2102,4.005,2103,4.492,2104,4.492,2105,4.492,2106,4.492,2107,4.492]],["title/properties.html",[101,0.428,1874,3.531]],["body/properties.html",[18,0.006,36,2.082,37,1.653,67,0.006,68,0.006,96,0.335,101,0.563,1174,6.729,2108,7.547,2109,7.547,2110,7.547,2111,7.547,2112,7.547,2113,7.547,2114,7.547,2115,7.547,2116,7.547,2117,7.547,2118,7.547]],["title/miscellaneous/typealiases.html",[1944,2.502,2119,5.731]],["body/miscellaneous/typealiases.html",[8,0.149,18,0.007,20,0.142,67,0.004,68,0.004,103,0.455,106,0.549,142,2.077,329,2.699,378,2.663,382,3.804,900,6.541,952,3.319,953,3.229,954,3.319,1038,4.045,1944,2.925,1950,3.797,1951,5.25,1956,3.797,1962,4.908,2013,3.797,2014,4.127,2044,6.541,2120,4.629,2121,4.629,2122,6.401,2123,7.336,2124,4.629,2125,4.629,2126,7.336,2127,4.629,2128,4.629,2129,4.629,2130,4.629,2131,4.629]],["title/miscellaneous/variables.html",[1944,2.502,2132,5.11]],["body/miscellaneous/variables.html",[6,1.236,8,0.068,10,1.888,18,0.007,19,0.363,20,0.285,25,1.281,27,1.719,33,2.329,35,2.871,37,0.461,44,2.492,48,2.637,49,1.727,52,1.558,56,1.727,61,2.106,62,1.304,67,0.002,68,0.002,96,0.155,97,2.79,98,2.055,103,0.646,106,0.621,112,1.124,139,0.782,140,1.263,149,2.411,156,1.386,157,1.45,158,1.281,159,1.45,171,2.305,172,2.305,190,2.684,204,5.095,205,0.959,209,2.178,220,1.45,230,6.867,231,5.566,257,1.868,321,0.896,340,1.63,341,1.367,367,1.999,378,0.876,379,1.034,403,1.062,496,2.684,543,2.15,549,1.727,556,1.558,562,2.212,563,1.615,576,3.307,599,2.732,612,1.281,652,3.684,654,3.684,668,1.158,690,1.281,702,2.535,716,4.292,720,0.896,721,3.684,724,3.684,727,3.684,730,3.684,733,4.292,736,3.684,739,3.684,742,4.292,745,3.684,748,1.236,749,4.292,757,1.615,785,1.124,795,4.807,803,1.034,817,2.15,845,1.386,936,1.877,976,0.959,981,0.876,999,1.386,1001,1.281,1002,1.281,1063,2.535,1068,1.525,1069,1.525,1073,1.525,1097,3.094,1098,3.094,1104,1.727,1161,1.33,1256,4.292,1262,4.292,1283,3.121,1308,3.121,1341,1.615,1356,2.684,1379,3.121,1385,3.121,1386,1.877,1387,1.877,1388,1.877,1389,1.877,1390,1.877,1391,1.877,1392,1.877,1393,1.877,1464,1.877,1568,1.727,1591,1.386,1598,3.121,1607,1.727,1608,1.727,1609,1.727,1610,1.727,1611,1.727,1613,1.727,1614,1.727,1615,1.727,1616,1.727,1617,1.727,1618,1.727,1619,1.727,1671,4.666,1672,4.666,1673,4.666,1798,3.121,1944,1.33,1949,1.877,1950,1.727,1951,2.871,1953,1.877,1954,3.121,1955,1.877,1956,1.727,1988,1.877,2013,1.727,2019,1.877,2024,1.877,2028,5.923,2036,1.877,2132,1.877,2133,6.268,2134,4.492,2135,6.268,2136,3.5,2137,3.5,2138,3.5,2139,4.492,2140,4.492,2141,4.492,2142,5.233,2143,8.218,2144,3.5,2145,3.5,2146,4.492,2147,5.233,2148,2.105,2149,5.809,2150,3.5,2151,3.5,2152,3.5,2153,3.5,2154,2.105,2155,5.233,2156,2.105,2157,3.5,2158,4.492,2159,4.492,2160,4.492,2161,4.492,2162,2.105,2163,2.105,2164,4.492,2165,2.105,2166,2.105,2167,2.105,2168,2.105,2169,2.105,2170,2.105,2171,2.105,2172,2.105,2173,2.105,2174,3.5,2175,2.105,2176,2.105,2177,2.105,2178,3.5,2179,4.492,2180,2.105,2181,3.5,2182,3.5,2183,3.5,2184,2.105,2185,2.105,2186,2.105,2187,2.105,2188,2.105,2189,2.105,2190,2.105,2191,2.105,2192,2.105,2193,2.105,2194,2.105,2195,2.105,2196,2.105,2197,2.105,2198,2.105,2199,2.105,2200,2.105,2201,2.105,2202,2.105,2203,2.105,2204,2.105,2205,2.105,2206,2.105,2207,2.105,2208,2.105,2209,2.105,2210,2.105,2211,2.105,2212,2.105,2213,2.105,2214,2.105,2215,2.105,2216,2.105,2217,3.5,2218,2.105,2219,2.105,2220,2.105,2221,2.105,2222,2.105,2223,2.105,2224,2.105,2225,2.105,2226,2.105,2227,2.105,2228,5.233,2229,2.105,2230,2.105,2231,2.105,2232,2.105,2233,2.105,2234,3.5,2235,3.5,2236,2.105,2237,2.105,2238,2.105,2239,2.105,2240,2.105,2241,2.105,2242,3.5,2243,2.105,2244,2.105,2245,2.105,2246,2.105,2247,2.105,2248,2.105,2249,2.105,2250,2.105,2251,2.105,2252,2.105,2253,2.105,2254,2.105,2255,2.105,2256,2.105,2257,3.5,2258,2.105,2259,3.5,2260,2.105,2261,2.105,2262,2.105,2263,2.105,2264,2.105,2265,2.105,2266,2.105,2267,2.105,2268,2.105,2269,2.105,2270,2.105,2271,2.105,2272,2.105,2273,2.105,2274,2.105,2275,2.105,2276,2.105,2277,2.105,2278,2.105,2279,2.105,2280,2.105,2281,2.105,2282,4.492,2283,4.492,2284,4.492,2285,4.492,2286,4.492,2287,4.492,2288,4.492,2289,8.735,2290,4.492,2291,4.492,2292,3.5,2293,2.105,2294,2.105,2295,2.105,2296,3.5,2297,2.105,2298,2.105,2299,2.105,2300,2.105,2301,2.105,2302,2.105,2303,4.492,2304,2.105,2305,2.105,2306,3.5,2307,2.105,2308,2.105,2309,2.105,2310,2.105,2311,2.105,2312,2.105,2313,2.105,2314,2.105,2315,2.105,2316,2.105,2317,2.105,2318,2.105,2319,2.105,2320,2.105,2321,2.105,2322,2.105,2323,2.105,2324,2.105]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":576,"title":{},"body":{"injectables/ClientService.html":{},"injectables/JournalizatingService.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["0.1.0",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["0.10.4",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["0.16.0",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["08",{"_index":1008,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{}}}],["098f",{"_index":1387,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":562,"title":{"injectables/SearchApimeService-1.html":{}},"body":{"injectables/ClientService.html":{},"injectables/JournalizatingService.html":{},"classes/PaginationDTO.html":{},"injectables/RabbitMQService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).padstart(2",{"_index":2191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":2109,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["1.1.24",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["1.7.7",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1161,"title":{},"body":{"modules/JournalizatingModule.html":{},"classes/MsisdnFilterDTO.html":{},"classes/PaginationDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"miscellaneous/variables.html":{}}}],["10.0.1",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["10.3.9",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["10000",{"_index":1302,"title":{},"body":{"modules/KeycloakModule.html":{}}}],["100000",{"_index":123,"title":{},"body":{"modules/ApimeIntegrationModule.html":{}}}],["10_fsf2bndtfa20njm8hjzylrwwhjnogastcgz9o7mhyqe",{"_index":2197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.0.0",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["11.11.2024",{"_index":561,"title":{},"body":{"injectables/ClientService.html":{}}}],["12.1.0",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":1391,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["12345",{"_index":1096,"title":{},"body":{"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{}}}],["127.0.0.1",{"_index":1552,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["15",{"_index":2103,"title":{},"body":{"overview.html":{}}}],["15.1.3",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":1241,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["16.3.0",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["16t00:00:00z",{"_index":1009,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{}}}],["17.13.3",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["17t23:59:59z",{"_index":1011,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{}}}],["19",{"_index":2105,"title":{},"body":{"overview.html":{}}}],["2",{"_index":492,"title":{},"body":{"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"injectables/RabbitMQService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2.0.0",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["2024",{"_index":1007,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{}}}],["25",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["254",{"_index":522,"title":{},"body":{"injectables/ClientService.html":{}}}],["255",{"_index":523,"title":{},"body":{"injectables/ClientService.html":{}}}],["256",{"_index":524,"title":{},"body":{"injectables/ClientService.html":{}}}],["258",{"_index":525,"title":{},"body":{"injectables/ClientService.html":{}}}],["2fd/graphdoc",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":563,"title":{},"body":{"injectables/ClientService.html":{},"injectables/LogsAndJournalsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["3.0.3",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["3.13.1",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":124,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["37",{"_index":2106,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1988,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["4.0.2",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["4.1.14",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["4.10.4",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["4.6.7",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":850,"title":{},"body":{"classes/ErrorFilter.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["404",{"_index":880,"title":{},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["462b",{"_index":1388,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["4873:4873",{"_index":2089,"title":{},"body":{"index.html":{}}}],["5",{"_index":1425,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"injectables/SearchAreasService.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["5.15.0",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":881,"title":{},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["59",{"_index":1211,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["6",{"_index":2104,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["6.2.13",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":1163,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["7.0.0",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["78",{"_index":2107,"title":{},"body":{"overview.html":{}}}],["7c62f2db",{"_index":1386,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["8.12.0",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["8085",{"_index":2067,"title":{},"body":{"index.html":{}}}],["86400",{"_index":687,"title":{},"body":{"modules/CoreModule.html":{}}}],["9",{"_index":1427,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["95021",{"_index":1095,"title":{},"body":{"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{}}}],["999",{"_index":1212,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["__teardown_message__",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a6b1",{"_index":1389,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["a[field",{"_index":1708,"title":{},"body":{"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["access_token",{"_index":501,"title":{},"body":{"classes/ClientResolver.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/ITraceId.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["account",{"_index":371,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{}}}],["account_number",{"_index":464,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["account_number)'})@isenum(searchareaenum",{"_index":585,"title":{},"body":{"classes/ClientsSearchInputDTO.html":{}}}],["active",{"_index":427,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["additionaldata",{"_index":1001,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["additionaldata.id",{"_index":1236,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["additionaldata.name",{"_index":1234,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["additionaldata.title",{"_index":1233,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["additionalphone",{"_index":372,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{}}}],["additionalphonenumber",{"_index":976,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"classes/SubscriberClientSearchDTO.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":612,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"miscellaneous/variables.html":{}}}],["addresstype",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addresstypes",{"_index":895,"title":{},"body":{"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{}}}],["admin",{"_index":257,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"injectables/ClientService.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IEnum.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["admin.entity.ts",{"_index":1111,"title":{},"body":{"entities/Journal.html":{}}}],["admin.entity.ts:23",{"_index":1118,"title":{},"body":{"entities/Journal.html":{}}}],["admin.entity.ts:29",{"_index":1123,"title":{},"body":{"entities/Journal.html":{}}}],["admin.entity.ts:38",{"_index":1116,"title":{},"body":{"entities/Journal.html":{}}}],["admin.entity.ts:44",{"_index":1124,"title":{},"body":{"entities/Journal.html":{}}}],["admin.entity.ts:54",{"_index":1122,"title":{},"body":{"entities/Journal.html":{}}}],["admin.entity.ts:64",{"_index":1114,"title":{},"body":{"entities/Journal.html":{}}}],["admin/logs",{"_index":1110,"title":{},"body":{"entities/Journal.html":{}}}],["aliases",{"_index":2120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_russia",{"_index":2009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amqp",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["amqp://${config.url}${config.vhost",{"_index":1523,"title":{},"body":{"modules/RabbitModule.html":{}}}],["amqplib",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["analysis",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":97,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IClientApiResult.html":{},"interfaces/ITraceId.html":{},"modules/KeycloakModule.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService-1.html":{},"miscellaneous/variables.html":{}}}],["api_v1",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_v1_dictionary",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_v1_search",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_v2",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apihealth",{"_index":63,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["apime",{"_index":33,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apime.service",{"_index":95,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/SearchApimeService.html":{}}}],["apime.service.ts",{"_index":1062,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:106",{"_index":1727,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:111",{"_index":1567,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:118",{"_index":1731,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:126",{"_index":1573,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:13",{"_index":1562,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:130",{"_index":1729,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:142",{"_index":1725,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:150",{"_index":1564,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:156",{"_index":1733,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:183",{"_index":1574,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:21",{"_index":1569,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:24",{"_index":1721,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:27",{"_index":1723,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:36",{"_index":1572,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:46",{"_index":1741,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:51",{"_index":1570,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:58",{"_index":1743,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:66",{"_index":1571,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:70",{"_index":1739,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:81",{"_index":1565,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime.service.ts:82",{"_index":1735,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:94",{"_index":1737,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["apime.service.ts:96",{"_index":1566,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["apime_check",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apime_pass",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apime_uri",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apimeconfig",{"_index":117,"title":{},"body":{"modules/ApimeIntegrationModule.html":{}}}],["apimeconfig.uri",{"_index":122,"title":{},"body":{"modules/ApimeIntegrationModule.html":{}}}],["apimeconnectionguard",{"_index":1,"title":{"guards/ApimeConnectionGuard.html":{}},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"overview.html":{}}}],["apimecorepkg",{"_index":897,"title":{},"body":{"interfaces/IApiMeHealth.html":{}}}],["apimeinputs",{"_index":957,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{}}}],["apimeintegrationmodule",{"_index":70,"title":{"modules/ApimeIntegrationModule.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"modules/DlModule.html":{},"modules.html":{},"overview.html":{}}}],["apimeintegrationservice",{"_index":14,"title":{"injectables/ApimeIntegrationService.html":{}},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"overview.html":{}}}],["apimetokeninterceptor",{"_index":177,"title":{"injectables/ApimeTokenInterceptor.html":{}},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["apiresponse",{"_index":58,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["apollo",{"_index":644,"title":{},"body":{"modules/CoreModule.html":{},"modules/PromModule.html":{},"dependencies.html":{}}}],["apollo/server",{"_index":648,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["apollodriver",{"_index":640,"title":{},"body":{"modules/CoreModule.html":{}}}],["apollodriverconfig",{"_index":641,"title":{},"body":{"modules/CoreModule.html":{}}}],["apolloserver",{"_index":658,"title":{},"body":{"modules/CoreModule.html":{}}}],["apolloserverplugin",{"_index":647,"title":{},"body":{"modules/CoreModule.html":{}}}],["apollotracingplugin",{"_index":1471,"title":{},"body":{"modules/PromModule.html":{}}}],["app",{"_index":261,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"index.html":{}}}],["app.broker",{"_index":872,"title":{},"body":{"modules/GqlModule.html":{}}}],["app.controller",{"_index":871,"title":{},"body":{"modules/GqlModule.html":{}}}],["app.service",{"_index":211,"title":{},"body":{"controllers/AppController.html":{},"modules/GqlModule.html":{}}}],["app_filter",{"_index":869,"title":{},"body":{"modules/GqlModule.html":{}}}],["app_guard",{"_index":656,"title":{},"body":{"modules/CoreModule.html":{}}}],["appcontroller",{"_index":197,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/GqlModule.html":{}}}],["application/json",{"_index":159,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["application/x",{"_index":1315,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["apploggerloki",{"_index":214,"title":{"injectables/AppLoggerLoki.html":{}},"body":{"injectables/AppLoggerLoki.html":{},"modules/LogsAndJournalsModule.html":{},"overview.html":{}}}],["apps/.../global",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../graphql",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":2026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../validation.ts",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/data",{"_index":702,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/graphql",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/graphql/src/app/app.broker.ts",{"_index":316,"title":{},"body":{"controllers/BrokerMessage.html":{}}}],["apps/graphql/src/app/app.controller.ts",{"_index":199,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/graphql/src/app/app.controller.ts:16",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/graphql/src/app/app.controller.ts:28",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/graphql/src/app/app.service.ts",{"_index":285,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/graphql/src/app/app.service.ts:11",{"_index":287,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/graphql/src/app/config/validation.ts",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/graphql/src/app/gql.module.ts",{"_index":868,"title":{},"body":{"modules/GqlModule.html":{}}}],["apps/graphql/src/graphql",{"_index":2211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/graphql/src/main.ts",{"_index":2035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/journalization",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/journalization/src/app/config/validation.ts",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/journalization/src/app/journalization.controller.ts",{"_index":1252,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["apps/journalization/src/app/journalization.controller.ts:22",{"_index":1261,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["apps/journalization/src/app/journalization.controller.ts:34",{"_index":1257,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["apps/journalization/src/app/journalization.module.ts",{"_index":1271,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["apps/journalization/src/main.ts",{"_index":2034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appservice",{"_index":210,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/GqlModule.html":{},"overview.html":{}}}],["area",{"_index":466,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{}}}],["area.enum.ts",{"_index":1954,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["areas",{"_index":860,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{}}}],["areas.map((area",{"_index":1622,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["areas.resolver",{"_index":1633,"title":{},"body":{"modules/SearchClientsModule.html":{}}}],["areas.resolver.ts",{"_index":1583,"title":{},"body":{"classes/SearchAreasResolver.html":{}}}],["areas.resolver.ts:16",{"_index":1589,"title":{},"body":{"classes/SearchAreasResolver.html":{}}}],["areas.resolver.ts:9",{"_index":1587,"title":{},"body":{"classes/SearchAreasResolver.html":{}}}],["areas.service",{"_index":1592,"title":{},"body":{"classes/SearchAreasResolver.html":{},"modules/SearchClientsModule.html":{}}}],["areas.service.ts",{"_index":1595,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["areas.service.ts:10",{"_index":1597,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["areasearch",{"_index":1639,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["areaswithlabels",{"_index":1621,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["args",{"_index":47,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"classes/ClientResolver.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["args('admin",{"_index":1359,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["args('dataid",{"_index":1363,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["args('filter",{"_index":1645,"title":{},"body":{"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["args('fromdate",{"_index":1360,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["args('input",{"_index":499,"title":{},"body":{"classes/ClientResolver.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["args('pagination",{"_index":1357,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["args('service",{"_index":1358,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["args('sort",{"_index":1644,"title":{},"body":{"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["args('state",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args('title",{"_index":1362,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["args('todate",{"_index":1361,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["args('usertype",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argumentshost",{"_index":830,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["array",{"_index":668,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/IRelationClient.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"injectables/LogsAndJournalsService.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(datasearch",{"_index":1777,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["array.length",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.slice(startindex",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arraynotempty",{"_index":1420,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["arrayslice",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asc",{"_index":454,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["async",{"_index":10,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/AppLoggerLoki.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IRequestParams.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":254,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["auth.service",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["authmodule",{"_index":291,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/GqlModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2117,"title":{},"body":{"properties.html":{}}}],["authorid",{"_index":1462,"title":{},"body":{"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{}}}],["authorization",{"_index":171,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"guards/KeycloakTokenGuard.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":295,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"overview.html":{}}}],["autoschemafile",{"_index":670,"title":{},"body":{"modules/CoreModule.html":{}}}],["available",{"_index":2101,"title":{},"body":{"modules.html":{}}}],["await",{"_index":59,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["awaiting_verification",{"_index":528,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["axios",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1371,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["b[field",{"_index":1711,"title":{},"body":{"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["bacc",{"_index":290,"title":{},"body":{"injectables/AppService.html":{}}}],["backend",{"_index":2110,"title":{},"body":{"properties.html":{}}}],["backend.git",{"_index":2116,"title":{},"body":{"properties.html":{}}}],["backend/apime",{"_index":755,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{}}}],["backend/auth",{"_index":875,"title":{},"body":{"modules/GqlModule.html":{}}}],["backend/client",{"_index":873,"title":{},"body":{"modules/GqlModule.html":{}}}],["backend/core",{"_index":870,"title":{},"body":{"modules/GqlModule.html":{}}}],["backend/journalizating",{"_index":1263,"title":{},"body":{"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{}}}],["backend/keycloak",{"_index":484,"title":{},"body":{"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{}}}],["backend/logs",{"_index":483,"title":{},"body":{"modules/ClientModule.html":{},"injectables/ClientService.html":{},"modules/GqlModule.html":{},"modules/SearchClientsModule.html":{},"injectables/SearchClientsService.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{}}}],["backend/metrics",{"_index":655,"title":{},"body":{"modules/CoreModule.html":{}}}],["backend/rabbit",{"_index":481,"title":{},"body":{"modules/ClientModule.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"modules/LogsAndJournalsModule.html":{},"injectables/LogsAndJournalsService.html":{},"modules/SearchClientsModule.html":{},"injectables/SearchClientsService.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["backend/search",{"_index":874,"title":{},"body":{"modules/GqlModule.html":{}}}],["backend/shared",{"_index":38,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/IRequestParams.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnFilterDTO.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["bad",{"_index":164,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["balance",{"_index":373,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{}}}],["balance.interface",{"_index":937,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["balanceclientsearchdto",{"_index":299,"title":{"classes/BalanceClientSearchDTO.html":{}},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/ClientDataDTO.html":{}}}],["base",{"_index":2076,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":1127,"title":{},"body":{"entities/Journal.html":{}}}],["baseurl",{"_index":104,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["bb1024d4f0d1",{"_index":1390,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":172,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["billingdeliverytype",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billingdeliverytypes",{"_index":905,"title":{},"body":{"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{}}}],["birthdate",{"_index":374,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IContractClient.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{}}}],["blocked",{"_index":429,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["body",{"_index":1193,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["bool",{"_index":1237,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["boolean",{"_index":617,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"interfaces/HttpError.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["bootstrap",{"_index":75,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch_id",{"_index":1053,"title":{},"body":{"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{}}}],["broker",{"_index":592,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["broker/kafka.ts",{"_index":2225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker/rmq.ts",{"_index":2203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker/rmq_journal.ts",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brokermessage",{"_index":315,"title":{"controllers/BrokerMessage.html":{}},"body":{"controllers/BrokerMessage.html":{},"modules/GqlModule.html":{}}}],["browse",{"_index":2099,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2096,"title":{},"body":{"modules.html":{}}}],["budgetorganization",{"_index":2015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["build",{"_index":2071,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["business_line",{"_index":1967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["byaccount",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bycontract",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bydocument",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["byequipment",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bymsisdn",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["byname",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bytitle",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache",{"_index":646,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["calculateesiastatus",{"_index":511,"title":{},"body":{"injectables/ClientService.html":{}}}],["calculateesiastatus(payload",{"_index":519,"title":{},"body":{"injectables/ClientService.html":{}}}],["callhandler",{"_index":183,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["canactivate",{"_index":11,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"guards/KeycloakTokenGuard.html":{}}}],["canactivate(context",{"_index":22,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"guards/KeycloakTokenGuard.html":{}}}],["card",{"_index":950,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["case",{"_index":1674,"title":{},"body":{"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["catch",{"_index":168,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ErrorFilter.html":{},"interfaces/IRequestParams.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["catch(exception",{"_index":829,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["catch(httpexception",{"_index":834,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["category",{"_index":344,"title":{},"body":{"classes/CategoryDto.html":{},"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["categorydto",{"_index":320,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["categoryid",{"_index":1098,"title":{},"body":{"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"classes/MsisdnFilterDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{},"miscellaneous/variables.html":{}}}],["categoryid.length",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categoryid=${encodeuricomponent(id",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categoryname",{"_index":359,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["cdgepeth6eiisonpzcmnmxvhfanwnm",{"_index":2198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changedat",{"_index":334,"title":{},"body":{"classes/CategoryDto.html":{},"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["childs",{"_index":1058,"title":{},"body":{"interfaces/IRelationClient.html":{}}}],["circuit",{"_index":949,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["citytype",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["citytypes",{"_index":915,"title":{},"body":{"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{}}}],["class",{"_index":40,"title":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/CoreResolver.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/IRequestParams.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{},"dependencies.html":{}}}],["classes",{"_index":300,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/CoreResolver.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"overview.html":{}}}],["classref",{"_index":2045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classtype",{"_index":2044,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["client",{"_index":543,"title":{},"body":{"injectables/ClientService.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/LogsAndJournalsService.html":{},"modules/PromModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["client.account",{"_index":1695,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.balance.monetary",{"_index":1663,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.balance?.monetary?.length",{"_index":1680,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.birthdate",{"_index":1686,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.clienttype",{"_index":1698,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.contractnumber",{"_index":1697,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.document",{"_index":1664,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.document.issuedate",{"_index":1689,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.document.number",{"_index":1688,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.document.series",{"_index":1687,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.juridicaltype",{"_index":1696,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.name.unstructured",{"_index":1683,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.resolver",{"_index":482,"title":{},"body":{"modules/ClientModule.html":{}}}],["client.segment",{"_index":1705,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.service",{"_index":480,"title":{},"body":{"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{}}}],["client.service.ts",{"_index":1745,"title":{},"body":{"injectables/SearchService.html":{}}}],["client.service.ts:33",{"_index":1748,"title":{},"body":{"injectables/SearchService.html":{}}}],["client.service.ts:6",{"_index":1746,"title":{},"body":{"injectables/SearchService.html":{}}}],["client.state",{"_index":1699,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.subscribers?.[0]?.additionalphonenumber",{"_index":1690,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.subscribers?.[0]?.equipment?.iccid",{"_index":1693,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.subscribers?.[0]?.msisdn",{"_index":1684,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client.subscribers?.[0]?.region",{"_index":1692,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["client/balance.dto.ts",{"_index":302,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{}}}],["client/balance.dto.ts:16",{"_index":307,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{}}}],["client/client.dto.ts",{"_index":369,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:104",{"_index":394,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:107",{"_index":385,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:110",{"_index":392,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:115",{"_index":398,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:120",{"_index":399,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:125",{"_index":384,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:65",{"_index":393,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:71",{"_index":395,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:74",{"_index":387,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:80",{"_index":391,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:86",{"_index":396,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:92",{"_index":386,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/client.dto.ts:98",{"_index":397,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["client/clientname.dto.ts",{"_index":1435,"title":{},"body":{"classes/NameClientSearchDTO.html":{}}}],["client/clientname.dto.ts:16",{"_index":1439,"title":{},"body":{"classes/NameClientSearchDTO.html":{}}}],["client/clientname.dto.ts:19",{"_index":1438,"title":{},"body":{"classes/NameClientSearchDTO.html":{}}}],["client/document.dto.ts",{"_index":800,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["client/document.dto.ts:14",{"_index":808,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["client/document.dto.ts:17",{"_index":807,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["client/document.dto.ts:20",{"_index":806,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["client/document.dto.ts:23",{"_index":805,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["client/equipment.dto.ts",{"_index":814,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{}}}],["client/equipment.dto.ts:12",{"_index":820,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{}}}],["client/equipment.dto.ts:15",{"_index":823,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{}}}],["client/equipment.dto.ts:18",{"_index":819,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{}}}],["client/equipment.dto.ts:21",{"_index":821,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{}}}],["client/equipment.dto.ts:26",{"_index":818,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{}}}],["client/monetary.dto.ts",{"_index":1397,"title":{},"body":{"classes/MonetaryClientSearchDTO.html":{}}}],["client/monetary.dto.ts:14",{"_index":1398,"title":{},"body":{"classes/MonetaryClientSearchDTO.html":{}}}],["client/monetary.dto.ts:17",{"_index":1399,"title":{},"body":{"classes/MonetaryClientSearchDTO.html":{}}}],["client/passport.dto.ts",{"_index":1454,"title":{},"body":{"classes/PassportClientSearchDTO.html":{}}}],["client/passport.dto.ts:15",{"_index":1457,"title":{},"body":{"classes/PassportClientSearchDTO.html":{}}}],["client/passport.dto.ts:21",{"_index":1456,"title":{},"body":{"classes/PassportClientSearchDTO.html":{}}}],["client/search.interface.ts",{"_index":947,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["client/structuredclientname.dto.ts",{"_index":1845,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["client/structuredclientname.dto.ts:13",{"_index":1849,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["client/structuredclientname.dto.ts:16",{"_index":1850,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["client/structuredclientname.dto.ts:19",{"_index":1848,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["client/subscriber.dto.ts",{"_index":1854,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["client/subscriber.dto.ts:12",{"_index":1857,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["client/subscriber.dto.ts:15",{"_index":1858,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["client/subscriber.dto.ts:18",{"_index":1859,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["client/subscriber.dto.ts:23",{"_index":1860,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["client/subscriber.dto.ts:29",{"_index":1856,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["client/subscriber.dto.ts:34",{"_index":1855,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["client_history",{"_index":1101,"title":{},"body":{"interfaces/IStateClient.html":{}}}],["client_id",{"_index":624,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"injectables/KeycloakService.html":{}}}],["client_secret",{"_index":625,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"injectables/KeycloakService.html":{}}}],["clientapimedto",{"_index":401,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/ClientResolver.html":{}}}],["clientdata",{"_index":508,"title":{},"body":{"classes/ClientResolver.html":{},"injectables/ClientService.html":{}}}],["clientdatadto",{"_index":368,"title":{"classes/ClientDataDTO.html":{}},"body":{"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SearchClientsResolver.html":{},"classes/SortInput.html":{},"miscellaneous/functions.html":{}}}],["clientfilterinput",{"_index":419,"title":{"classes/ClientFilterInput.html":{}},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SearchClientsResolver.html":{},"classes/SortInput.html":{}}}],["clientid",{"_index":137,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"injectables/RabbitMQService.html":{}}}],["clientmodule",{"_index":469,"title":{"modules/ClientModule.html":{}},"body":{"modules/ClientModule.html":{},"modules/GqlModule.html":{},"modules.html":{},"overview.html":{}}}],["clientname",{"_index":917,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["clientnormalize",{"_index":1649,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["clientopts",{"_index":250,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["clientproxy",{"_index":1483,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["clientresolver",{"_index":477,"title":{"classes/ClientResolver.html":{}},"body":{"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"overview.html":{}}}],["clients",{"_index":37,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnFilterDTO.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["clients.filter((client",{"_index":1701,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.map((client",{"_index":1678,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.module.ts",{"_index":1629,"title":{},"body":{"modules/SearchClientsModule.html":{}}}],["clients.resolver",{"_index":1632,"title":{},"body":{"modules/SearchClientsModule.html":{}}}],["clients.resolver.ts",{"_index":1634,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["clients.resolver.ts:23",{"_index":1637,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["clients.resolver.ts:30",{"_index":1642,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["clients.service",{"_index":1630,"title":{},"body":{"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{}}}],["clients.service.ts",{"_index":1653,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.service.ts:129",{"_index":1666,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.service.ts:171",{"_index":1662,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.service.ts:231",{"_index":1660,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.service.ts:273",{"_index":1670,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.service.ts:30",{"_index":1657,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients.sort((a",{"_index":1706,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clients/src/lib/other/clients.dto.ts",{"_index":421,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{}}}],["clients/src/lib/other/clients.dto.ts:17",{"_index":1837,"title":{},"body":{"classes/SortInput.html":{}}}],["clients/src/lib/other/clients.dto.ts:22",{"_index":1834,"title":{},"body":{"classes/SortInput.html":{}}}],["clients/src/lib/other/clients.dto.ts:41",{"_index":438,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["clients/src/lib/other/clients.dto.ts:50",{"_index":431,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["clients/src/lib/other/clients.dto.ts:60",{"_index":441,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["clients/src/lib/other/clients.dto.ts:67",{"_index":587,"title":{},"body":{"classes/ClientsSearchInputDTO.html":{}}}],["clients/src/lib/other/clients.dto.ts:73",{"_index":586,"title":{},"body":{"classes/ClientsSearchInputDTO.html":{}}}],["clients/src/lib/other/clients.dto.ts:79",{"_index":588,"title":{},"body":{"classes/ClientsSearchedDTO.html":{}}}],["clients/src/lib/other/clients.dto.ts:82",{"_index":589,"title":{},"body":{"classes/ClientsSearchedDTO.html":{}}}],["clients/src/lib/other/searchareas.dto.ts",{"_index":852,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{}}}],["clients/src/lib/other/searchareas.dto.ts:13",{"_index":1578,"title":{},"body":{"classes/SearchAreaWithLabelDTO.html":{}}}],["clients/src/lib/other/searchareas.dto.ts:18",{"_index":1579,"title":{},"body":{"classes/SearchAreaWithLabelDTO.html":{}}}],["clients/src/lib/other/searchareas.dto.ts:26",{"_index":1580,"title":{},"body":{"classes/SearchAreasDTO.html":{}}}],["clients/src/lib/other/searchareas.dto.ts:40",{"_index":854,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{}}}],["clients/src/lib/search",{"_index":1582,"title":{},"body":{"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{}}}],["clientservice",{"_index":478,"title":{"injectables/ClientService.html":{}},"body":{"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"overview.html":{}}}],["clientsmodule",{"_index":1513,"title":{},"body":{"modules/RabbitModule.html":{}}}],["clientsmodule.registerasync",{"_index":1515,"title":{},"body":{"modules/RabbitModule.html":{}}}],["clientssearched",{"_index":1646,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["clientssearched.clients",{"_index":1648,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["clientssearcheddto",{"_index":467,"title":{"classes/ClientsSearchedDTO.html":{}},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SearchClientsResolver.html":{},"classes/SortInput.html":{}}}],["clientssearchinputdto",{"_index":462,"title":{"classes/ClientsSearchInputDTO.html":{}},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SearchClientsResolver.html":{},"classes/SortInput.html":{}}}],["clientstate",{"_index":1659,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["clienttype",{"_index":403,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"miscellaneous/variables.html":{}}}],["clienttypes",{"_index":984,"title":{},"body":{"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{}}}],["closed",{"_index":430,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["cluster_apimeintegrationmodule",{"_index":78,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"overview.html":{}}}],["cluster_apimeintegrationmodule_exports",{"_index":80,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"overview.html":{}}}],["cluster_apimeintegrationmodule_providers",{"_index":79,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_clientmodule",{"_index":470,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_exports",{"_index":473,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_imports",{"_index":471,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_providers",{"_index":472,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":627,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":628,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_dlmodule",{"_index":788,"title":{},"body":{"modules/DlModule.html":{},"overview.html":{}}}],["cluster_dlmodule_imports",{"_index":790,"title":{},"body":{"modules/DlModule.html":{},"overview.html":{}}}],["cluster_dlmodule_providers",{"_index":789,"title":{},"body":{"modules/DlModule.html":{},"overview.html":{}}}],["cluster_gqlmodule",{"_index":863,"title":{},"body":{"modules/GqlModule.html":{},"overview.html":{}}}],["cluster_gqlmodule_imports",{"_index":864,"title":{},"body":{"modules/GqlModule.html":{},"overview.html":{}}}],["cluster_gqlmodule_providers",{"_index":865,"title":{},"body":{"modules/GqlModule.html":{},"overview.html":{}}}],["cluster_journalizatingmodule",{"_index":1147,"title":{},"body":{"modules/JournalizatingModule.html":{},"overview.html":{}}}],["cluster_journalizatingmodule_exports",{"_index":1149,"title":{},"body":{"modules/JournalizatingModule.html":{},"overview.html":{}}}],["cluster_journalizatingmodule_providers",{"_index":1148,"title":{},"body":{"modules/JournalizatingModule.html":{},"overview.html":{}}}],["cluster_journalizationmodule",{"_index":1269,"title":{},"body":{"modules/JournalizationModule.html":{},"overview.html":{}}}],["cluster_journalizationmodule_imports",{"_index":1270,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["cluster_keycloakintegrationmodule",{"_index":1287,"title":{},"body":{"modules/KeycloakIntegrationModule.html":{},"overview.html":{}}}],["cluster_keycloakintegrationmodule_exports",{"_index":1289,"title":{},"body":{"modules/KeycloakIntegrationModule.html":{},"overview.html":{}}}],["cluster_keycloakintegrationmodule_providers",{"_index":1288,"title":{},"body":{"modules/KeycloakIntegrationModule.html":{},"overview.html":{}}}],["cluster_keycloakmodule",{"_index":1293,"title":{},"body":{"modules/KeycloakModule.html":{},"overview.html":{}}}],["cluster_keycloakmodule_exports",{"_index":1294,"title":{},"body":{"modules/KeycloakModule.html":{},"overview.html":{}}}],["cluster_keycloakmodule_providers",{"_index":1295,"title":{},"body":{"modules/KeycloakModule.html":{},"overview.html":{}}}],["cluster_logsandjournalsmodule",{"_index":1337,"title":{},"body":{"modules/LogsAndJournalsModule.html":{},"overview.html":{}}}],["cluster_logsandjournalsmodule_exports",{"_index":1338,"title":{},"body":{"modules/LogsAndJournalsModule.html":{},"overview.html":{}}}],["cluster_logsandjournalsmodule_imports",{"_index":1340,"title":{},"body":{"modules/LogsAndJournalsModule.html":{}}}],["cluster_logsandjournalsmodule_providers",{"_index":1339,"title":{},"body":{"modules/LogsAndJournalsModule.html":{},"overview.html":{}}}],["cluster_rabbitmodule",{"_index":1509,"title":{},"body":{"modules/RabbitModule.html":{},"overview.html":{}}}],["cluster_rabbitmodule_exports",{"_index":1510,"title":{},"body":{"modules/RabbitModule.html":{},"overview.html":{}}}],["cluster_rabbitmodule_providers",{"_index":1511,"title":{},"body":{"modules/RabbitModule.html":{},"overview.html":{}}}],["cluster_searchclientsmodule",{"_index":1624,"title":{},"body":{"modules/SearchClientsModule.html":{},"overview.html":{}}}],["cluster_searchclientsmodule_exports",{"_index":1626,"title":{},"body":{"modules/SearchClientsModule.html":{},"overview.html":{}}}],["cluster_searchclientsmodule_imports",{"_index":1627,"title":{},"body":{"modules/SearchClientsModule.html":{}}}],["cluster_searchclientsmodule_providers",{"_index":1625,"title":{},"body":{"modules/SearchClientsModule.html":{},"overview.html":{}}}],["cluster_searchunlinkedmsisdnsmodule",{"_index":1752,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["cluster_searchunlinkedmsisdnsmodule_exports",{"_index":1753,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["cluster_searchunlinkedmsisdnsmodule_imports",{"_index":1754,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{}}}],["cluster_searchunlinkedmsisdnsmodule_providers",{"_index":1755,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["cmd",{"_index":758,"title":{},"body":{"controllers/DLMessagePattern.html":{},"controllers/JournalizationController.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["collectdefaultmetrics",{"_index":2220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1126,"title":{},"body":{"entities/Journal.html":{}}}],["column({comment",{"_index":1115,"title":{},"body":{"entities/Journal.html":{}}}],["column({type",{"_index":1112,"title":{},"body":{"entities/Journal.html":{}}}],["comment",{"_index":342,"title":{},"body":{"classes/CategoryDto.html":{},"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"entities/Journal.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["complete",{"_index":878,"title":{},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["complexity",{"_index":491,"title":{},"body":{"classes/ClientResolver.html":{},"dependencies.html":{}}}],["compodoc",{"_index":2063,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":2079,"title":{},"body":{"index.html":{}}}],["compose.local.yml",{"_index":2092,"title":{},"body":{"index.html":{}}}],["compose.qa.yml",{"_index":2080,"title":{},"body":{"index.html":{}}}],["config",{"_index":1517,"title":{},"body":{"modules/RabbitModule.html":{}}}],["config.queues.dl",{"_index":1525,"title":{},"body":{"modules/RabbitModule.html":{}}}],["config.queues.jz",{"_index":1530,"title":{},"body":{"modules/RabbitModule.html":{}}}],["config/configuration",{"_index":794,"title":{},"body":{"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizationModule.html":{}}}],["config/validation",{"_index":796,"title":{},"body":{"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizationModule.html":{}}}],["configmodule",{"_index":89,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{}}}],["configmodule.forroot",{"_index":797,"title":{},"body":{"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizationModule.html":{}}}],["configservice",{"_index":90,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/JournalizatingModule.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/RabbitModule.html":{}}}],["configservice.get('apime",{"_index":118,"title":{},"body":{"modules/ApimeIntegrationModule.html":{}}}],["configservice.get('broker",{"_index":1518,"title":{},"body":{"modules/RabbitModule.html":{}}}],["configservice.get('elasticsearchnode",{"_index":1158,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["configservice.get('keycloak",{"_index":1299,"title":{},"body":{"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{}}}],["configservice.get('playgroundgql",{"_index":679,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.get('redis",{"_index":677,"title":{},"body":{"modules/CoreModule.html":{}}}],["configuration",{"_index":120,"title":{"interfaces/Configuration.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"guards/KeycloakTokenGuard.html":{},"modules/RabbitModule.html":{}}}],["configurationapime",{"_index":93,"title":{"interfaces/ConfigurationApiMe.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["configurationbroker",{"_index":600,"title":{"interfaces/ConfigurationBroker.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/RabbitModule.html":{}}}],["configurationbrokerqueue",{"_index":608,"title":{"interfaces/ConfigurationBrokerQueue.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["configurationkafka",{"_index":602,"title":{"interfaces/ConfigurationKafka.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["configurationkeycloak",{"_index":620,"title":{"interfaces/ConfigurationKeycloak.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{}}}],["configurationpostgres",{"_index":603,"title":{"interfaces/ConfigurationPostgres.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["configurationredis",{"_index":605,"title":{"interfaces/ConfigurationRedis.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{}}}],["configure",{"_index":631,"title":{},"body":{"modules/CoreModule.html":{}}}],["configure(consumer",{"_index":632,"title":{},"body":{"modules/CoreModule.html":{}}}],["connect/token/introspect",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":279,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"dependencies.html":{}}}],["console.debug('getclientdata",{"_index":759,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclientbyaccount",{"_index":772,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclientbycontract",{"_index":774,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclientbydgn",{"_index":776,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclientbymsisdn",{"_index":768,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclientbypassport",{"_index":770,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclientbysubscribernumber",{"_index":766,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclientbytitle",{"_index":764,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.debug('searchclienticc",{"_index":778,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["console.error('loki",{"_index":278,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["console.error(`error",{"_index":1575,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["console.error(err",{"_index":272,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["console.log('createlog",{"_index":1265,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["console.log('datasearch",{"_index":1776,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["console.log(error",{"_index":169,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["console.warn",{"_index":1333,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["console.warn(clientdata",{"_index":542,"title":{},"body":{"injectables/ClientService.html":{}}}],["console.warn(error",{"_index":1319,"title":{},"body":{"injectables/KeycloakService.html":{},"injectables/SearchApimeService-1.html":{}}}],["console.warn(response",{"_index":1577,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["console.warn(segmenttype",{"_index":1700,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["const",{"_index":44,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"interfaces/IEnum.html":{},"interfaces/IGqlError.html":{},"interfaces/IRequestParams.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnDto.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["constructor(apimeintegrationservice",{"_index":13,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/DLService.html":{}}}],["constructor(clientservice",{"_index":486,"title":{},"body":{"classes/ClientResolver.html":{}}}],["constructor(field",{"_index":456,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["constructor(fio",{"_index":381,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["constructor(firstname",{"_index":1846,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["constructor(httpservice",{"_index":132,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["constructor(id",{"_index":323,"title":{},"body":{"classes/CategoryDto.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["constructor(input",{"_index":853,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{}}}],["constructor(journals",{"_index":1143,"title":{},"body":{"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{}}}],["constructor(keycloakservice",{"_index":1321,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["constructor(logsadminrepo",{"_index":1173,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["constructor(logsadminservice",{"_index":1349,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["constructor(monetary",{"_index":305,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{}}}],["constructor(msisdn",{"_index":1429,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["constructor(msisdns",{"_index":353,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["constructor(page",{"_index":1446,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["constructor(private",{"_index":151,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"controllers/AppController.html":{},"classes/ClientResolver.html":{},"interfaces/IRequestParams.html":{},"controllers/JournalizationController.html":{},"controllers/KeycloakController.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["constructor(rabbitmqservice",{"_index":1380,"title":{},"body":{"injectables/LogsAndJournalsService.html":{}}}],["constructor(rabbitservice",{"_index":513,"title":{},"body":{"injectables/ClientService.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["constructor(searchareasservice",{"_index":1585,"title":{},"body":{"classes/SearchAreasResolver.html":{}}}],["constructor(searchclientsservice",{"_index":1636,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["constructor(searchunlinkedmsisdnsservice",{"_index":1769,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["constructor(serialnumber",{"_index":1455,"title":{},"body":{"classes/PassportClientSearchDTO.html":{}}}],["constructor(status",{"_index":1864,"title":{},"body":{"classes/UnlinkedMsisdnsDto.html":{}}}],["constructor(structured",{"_index":1436,"title":{},"body":{"classes/NameClientSearchDTO.html":{}}}],["constructor(type",{"_index":804,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["constructor(webclientsclient",{"_index":1482,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["consumer",{"_index":635,"title":{},"body":{"modules/CoreModule.html":{}}}],["consumer.apply(graphqluploadexpress()).forroutes",{"_index":694,"title":{},"body":{"modules/CoreModule.html":{}}}],["contact",{"_index":988,"title":{},"body":{"interfaces/IContractClient.html":{}}}],["contact.interface",{"_index":993,"title":{},"body":{"interfaces/IContractClient.html":{}}}],["content",{"_index":158,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/KeycloakService.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":25,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"classes/ClientResolver.html":{},"classes/CoreResolver.html":{},"guards/KeycloakTokenGuard.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"miscellaneous/variables.html":{}}}],["context.getargs()[2",{"_index":46,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["context.req.headers.authorization?.replace('bearer",{"_index":2195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest",{"_index":192,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["contexttype",{"_index":840,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["contract",{"_index":918,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["contract.interface",{"_index":938,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["contract_number",{"_index":2023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contractnumber",{"_index":375,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{}}}],["contractstate",{"_index":422,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SearchClientsResolver.html":{},"classes/SortInput.html":{}}}],["contractstate'})@field(undefined",{"_index":426,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["controller",{"_index":196,"title":{"controllers/AppController.html":{},"controllers/BrokerMessage.html":{},"controllers/DLMessagePattern.html":{},"controllers/JournalizationController.html":{},"controllers/KeycloakController.html":{},"controllers/UptimeController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BrokerMessage.html":{},"controllers/DLMessagePattern.html":{},"controllers/JournalizationController.html":{},"controllers/KeycloakController.html":{},"controllers/UptimeController.html":{}}}],["controller('keycloak",{"_index":1286,"title":{},"body":{"controllers/KeycloakController.html":{}}}],["controllers",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"controllers/BrokerMessage.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"controllers/UptimeController.html":{},"overview.html":{}}}],["copy.ts",{"_index":1534,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:104",{"_index":1543,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:13",{"_index":1536,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:133",{"_index":1537,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:16",{"_index":1541,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:161",{"_index":1538,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:189",{"_index":1539,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:217",{"_index":1545,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:248",{"_index":1546,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:45",{"_index":1544,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["copy.ts:74",{"_index":1542,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["core.resolver",{"_index":650,"title":{},"body":{"modules/CoreModule.html":{}}}],["coremodule",{"_index":626,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/GqlModule.html":{},"modules.html":{},"overview.html":{}}}],["coreresolver",{"_index":649,"title":{"classes/CoreResolver.html":{}},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{}}}],["corporate_credit",{"_index":1965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cors",{"_index":663,"title":{},"body":{"modules/CoreModule.html":{}}}],["cost",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["countries",{"_index":998,"title":{},"body":{"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{}}}],["country",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create_log",{"_index":1262,"title":{},"body":{"controllers/JournalizationController.html":{},"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["createdatecolumn",{"_index":1128,"title":{},"body":{"entities/Journal.html":{}}}],["createdatecolumn({type",{"_index":1119,"title":{},"body":{"entities/Journal.html":{}}}],["createenummap",{"_index":2027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createenummap(enumobj",{"_index":2037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createindexifnotexists",{"_index":1168,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["createlog",{"_index":1169,"title":{},"body":{"injectables/JournalizatingService.html":{},"injectables/LogsAndJournalsService.html":{}}}],["createlog(data",{"_index":1180,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["createlog(service",{"_index":1382,"title":{},"body":{"injectables/LogsAndJournalsService.html":{}}}],["createlogdata",{"_index":1170,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["createlogdata(payload",{"_index":1182,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["createmetricsplugin",{"_index":1468,"title":{},"body":{"modules/PromModule.html":{}}}],["createmetricsplugin(register",{"_index":1477,"title":{},"body":{"modules/PromModule.html":{}}}],["credentials",{"_index":664,"title":{},"body":{"modules/CoreModule.html":{}}}],["ctx",{"_index":835,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["ctx.getrequest",{"_index":838,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["ctx.getresponse",{"_index":837,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["customerid",{"_index":919,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["d",{"_index":2082,"title":{},"body":{"index.html":{}}}],["d/.test(sanitizedinput",{"_index":1605,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["data",{"_index":160,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"index.html":{}}}],["data.apimecorepkg",{"_index":162,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["data.category.name",{"_index":1813,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["data.filter((item",{"_index":1830,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["data.msisdn.tostring",{"_index":1811,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["data.region.name",{"_index":1812,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["data.sort((a",{"_index":1817,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["data.state.name",{"_index":1809,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["data?.comment",{"_index":1814,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["database",{"_index":616,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["dataid",{"_index":1014,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"injectables/JournalizatingService.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["datapayload",{"_index":1364,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["datasearch",{"_index":1774,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["date",{"_index":981,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IJournal.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/PassportClientSearchDTO.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["date().toisostring",{"_index":849,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["date(a.registred).gettime",{"_index":1373,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["date(b.registred).gettime",{"_index":1372,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["date(datestring",{"_index":2186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(hit._source.registred",{"_index":1248,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["date(journal.registred",{"_index":1368,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["date(now",{"_index":1215,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["date(payload.fromdate",{"_index":1204,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["date(payload.todate",{"_index":1209,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["date(vala",{"_index":1719,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["date(valb",{"_index":1720,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["date(valuea).gettime",{"_index":1821,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["date(valueb).gettime",{"_index":1823,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["date.getfullyear",{"_index":2193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datea",{"_index":1820,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["dateb",{"_index":1822,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["datefirstcall",{"_index":560,"title":{},"body":{"injectables/ClientService.html":{}}}],["datestatus",{"_index":357,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["datestring",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["day",{"_index":2187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["day}.${month}.${year",{"_index":2194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db_sync",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd",{"_index":390,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/PassportClientSearchDTO.html":{}}}],["dealer",{"_index":1960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debug",{"_index":167,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"modules/CoreModule.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["debug(message",{"_index":283,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["declarations",{"_index":74,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["decorators",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{}}}],["default",{"_index":230,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"injectables/DLService.html":{},"entities/Journal.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":1449,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["defined",{"_index":15,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{}}}],["dependencies",{"_index":72,"title":{"dependencies.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2068,"title":{},"body":{"index.html":{}}}],["deps",{"_index":2083,"title":{},"body":{"index.html":{}}}],["desc",{"_index":453,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["describe",{"_index":555,"title":{},"body":{"injectables/ClientService.html":{}}}],["description",{"_index":96,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"modules/KeycloakModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["dgn",{"_index":1568,"title":{},"body":{"injectables/SearchApimeService-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dictionary",{"_index":936,"title":{},"body":{"interfaces/IClientApiResult.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":455,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["districttype",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["districttypes",{"_index":1018,"title":{},"body":{"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{}}}],["dl",{"_index":610,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["dl.controller",{"_index":793,"title":{},"body":{"modules/DlModule.html":{}}}],["dl.service",{"_index":753,"title":{},"body":{"controllers/DLMessagePattern.html":{},"modules/DlModule.html":{}}}],["dlmessagepattern",{"_index":701,"title":{"controllers/DLMessagePattern.html":{}},"body":{"controllers/DLMessagePattern.html":{},"modules/DlModule.html":{}}}],["dlmessagepattern.name",{"_index":760,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["dlmodule",{"_index":787,"title":{"modules/DlModule.html":{}},"body":{"modules/DlModule.html":{},"modules.html":{},"overview.html":{}}}],["dlservice",{"_index":752,"title":{"injectables/DLService.html":{}},"body":{"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"overview.html":{}}}],["do_not_disable",{"_index":1972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["doc/schema",{"_index":2058,"title":{},"body":{"index.html":{}}}],["docker",{"_index":2070,"title":{},"body":{"index.html":{}}}],["dockerfile.base",{"_index":2073,"title":{},"body":{"index.html":{}}}],["dockerfile.deps",{"_index":2077,"title":{},"body":{"index.html":{}}}],["docnumber",{"_index":974,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["docseries",{"_index":973,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["document",{"_index":406,"title":{},"body":{"classes/ClientDataDTO.html":{},"injectables/ClientService.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchDictionaryService.html":{}}}],["document.interface",{"_index":939,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["documentation",{"_index":2052,"title":{},"body":{"index.html":{}}}],["documentclientsearchdto",{"_index":405,"title":{"classes/DocumentClientSearchDTO.html":{}},"body":{"classes/ClientDataDTO.html":{},"classes/DocumentClientSearchDTO.html":{}}}],["documents",{"_index":920,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["documenttype",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documenttypes",{"_index":1026,"title":{},"body":{"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypesResponse.html":{}}}],["driver",{"_index":673,"title":{},"body":{"modules/CoreModule.html":{}}}],["dto",{"_index":356,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["dto/payload.dto",{"_index":1773,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["durable",{"_index":1528,"title":{},"body":{"modules/RabbitModule.html":{}}}],["during",{"_index":1576,"title":{},"body":{"injectables/SearchApimeService-1.html":{}}}],["e",{"_index":2055,"title":{},"body":{"index.html":{}}}],["e2e/src/support/global",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ea",{"_index":900,"title":{},"body":{"interfaces/IBalanceClient.html":{},"miscellaneous/typealiases.html":{}}}],["each",{"_index":1428,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["elastic/elasticsearch",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["elasticsearch",{"_index":601,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"injectables/JournalizatingService.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{}}}],["elasticsearch_node",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elasticsearchmodule",{"_index":1155,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["elasticsearchmodule.registerasync",{"_index":1157,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["elasticsearchnode",{"_index":593,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/JournalizatingModule.html":{}}}],["elasticsearchservice",{"_index":1176,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["elasticsearchtransport",{"_index":237,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["email",{"_index":549,"title":{},"body":{"injectables/ClientService.html":{},"interfaces/IClientApiResult.html":{},"miscellaneous/variables.html":{}}}],["emittojournalization",{"_index":1479,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["emittojournalization(event",{"_index":1488,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["empty_contract",{"_index":1963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["endindex",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endofday",{"_index":1217,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["endofday.sethours(23",{"_index":1218,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["endofday.toisostring",{"_index":1220,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["endpoint",{"_index":2054,"title":{},"body":{"index.html":{}}}],["enom",{"_index":2018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enotfound",{"_index":176,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["entities",{"_index":1108,"title":{},"body":{"entities/Journal.html":{},"modules/JournalizationModule.html":{},"overview.html":{}}}],["entity",{"_index":1106,"title":{"entities/Journal.html":{}},"body":{"entities/Journal.html":{}}}],["entrepreneur",{"_index":436,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["enum",{"_index":1032,"title":{},"body":{"interfaces/IEnum.html":{}}}],["enumerations",{"_index":1945,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumobj",{"_index":2038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["env",{"_index":2069,"title":{},"body":{"index.html":{}}}],["equipment",{"_index":921,"title":{},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/SubscriberClientSearchDTO.html":{}}}],["equipment.dto",{"_index":1861,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["equipment.interface",{"_index":940,"title":{},"body":{"interfaces/IClientApiResult.html":{},"interfaces/ISubscriberClient.html":{}}}],["equipmentclientsearchdto",{"_index":813,"title":{"classes/EquipmentClientSearchDTO.html":{}},"body":{"classes/EquipmentClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{}}}],["err",{"_index":271,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["error",{"_index":116,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/AppLoggerLoki.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IRequestParams.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["error('apime",{"_index":119,"title":{},"body":{"modules/ApimeIntegrationModule.html":{}}}],["error('broker",{"_index":1519,"title":{},"body":{"modules/RabbitModule.html":{}}}],["error('elasticsearch",{"_index":1159,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["error('keycloak",{"_index":1300,"title":{},"body":{"modules/KeycloakModule.html":{},"guards/KeycloakTokenGuard.html":{}}}],["error('redis",{"_index":680,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(message",{"_index":219,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["error.interface.ts",{"_index":1043,"title":{},"body":{"interfaces/IGqlError.html":{}}}],["errorauthapime",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorfilter",{"_index":825,"title":{"classes/ErrorFilter.html":{}},"body":{"classes/ErrorFilter.html":{},"modules/GqlModule.html":{}}}],["errorhealthapime",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorloadtominio",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errormessages",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":885,"title":{},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["errortoken",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortokentime",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escapepercent",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esia",{"_index":551,"title":{},"body":{"injectables/ClientService.html":{}}}],["esiastatus",{"_index":564,"title":{},"body":{"injectables/ClientService.html":{}}}],["esservice",{"_index":1175,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["event",{"_index":1490,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["eventpattern",{"_index":317,"title":{},"body":{"controllers/BrokerMessage.html":{},"controllers/JournalizationController.html":{}}}],["eventpattern(create_log",{"_index":1260,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["example",{"_index":1031,"title":{},"body":{"interfaces/IEnum.html":{},"interfaces/IGqlError.html":{}}}],["exception",{"_index":832,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exception.getstatus",{"_index":839,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exception.message",{"_index":844,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exceptionfilter",{"_index":828,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["exceptionmsgql",{"_index":35,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"classes/ClientResolver.html":{},"miscellaneous/variables.html":{}}}],["exceptionmsgql.apime.errorhealthapime",{"_index":65,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["exceptions",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exclusive",{"_index":1984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["exclusive_gn",{"_index":1992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["executioncontext",{"_index":23,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeTokenInterceptor.html":{},"guards/KeycloakTokenGuard.html":{}}}],["export",{"_index":39,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{}}}],["exports",{"_index":77,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/PromModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["express",{"_index":833,"title":{},"body":{"classes/ErrorFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":364,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"entities/Journal.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["eyjhbgcioijsuzi1niisinr5ccigoiaislduiiwia2lkiia6ici0x3owze02mlm0wnfecurzotbca0v1znrqbkhurv94tehtbvjnae9jtfy0in0.eyjlehaioje3mze5mzi1njcsimlhdci6mtczmtkzmji2nywianrpijoizjvizjzhndetymyzys00odc4ltg1njutndazyjbmnjizztewiiwiaxnzijoiahr0chm6ly93zwity2xpzw50cy1rzxljbg9hay50zxn0lmnvcnaubw90axyvyxv0ac9yzwfsbxmvd2milcjhdwqioijhy2nvdw50iiwic3viijoimdk0n2jhm2itmthjyy00mguylwi1nzetymzjmweynmuyotayiiwidhlwijoiqmvhcmvyiiwiyxpwijoid2milcjzawqioijjzgnkzddlmy02yjriltq3owitotdios1hzgm2mmjhnjhkymiilcjhy3iioiixiiwiywxsb3dlzc1vcmlnaw5zijpbiioixswicmvhbg1fywnjzxnzijp7injvbgvzijpbim9mzmxpbmvfywnjzxnziiwidw1hx2f1dghvcml6yxrpb24ilcjkzwzhdwx0lxjvbgvzlxdjil19lcjyzxnvdxjjzv9hy2nlc3mionsid2mionsicm9szxmiolsid2nfc2hvdyisimjhbl9zzxj2x3byb21vil19lcjhy2nvdw50ijp7injvbgvzijpbim1hbmfnzs1hy2nvdw50iiwibwfuywdllwfjy291bnqtbglua3milcj2awv3lxbyb2zpbguixx19lcjzy29wzsi6inbyb2zpbgugzw1hawwilcjlbwfpbf92zxjpzmllzci6dhj1zswiaw52b2ljzv9sb2dpbii6imfzcl92bgfkiiwibmftzsi6itcs0lvqsnc0incr0ypqu9gd0yjqtdcyiiwichjlzmvycmvkx3vzzxjuyw1lijoidmxhzcisimdpdmvux25hbwuioilqktc70ldqtcisimzhbwlsev9uyw1lijoi0jhrg9c70yprinc10liilcjlbwfpbci6imj1bhvzagv2dmfaaxrlyw15lnbybyj9.dvg5izrtot24zhyuxakpzpostrdppeuo2jlvdh5tcupogfep0rtpmhbnd0op9fn815k8qrbykmckrhtfkjb9owyw9oyjp6mqzqpoewoqlquyo7aky",{"_index":2196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":2072,"title":{},"body":{"index.html":{}}}],["failed_to_send",{"_index":530,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":126,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/AppLoggerLoki.html":{},"classes/ClientResolver.html":{},"modules/CoreModule.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"injectables/JournalizatingService.html":{},"modules/KeycloakModule.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/PaginationDTO.html":{},"modules/RabbitModule.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["field",{"_index":310,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["field(undefined",{"_index":308,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["field(undefined)@isstring()@maxlength(10",{"_index":1765,"title":{},"body":{"classes/SearchUnlinkedMsisdnsQueryDto.html":{}}}],["field({description",{"_index":1135,"title":{},"body":{"classes/JournalDTO.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{},"index.html":{}}}],["files",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1641,"title":{},"body":{"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["filter((data",{"_index":1807,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["filter(data",{"_index":1788,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["filter.category",{"_index":1792,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["filter.region",{"_index":1794,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["filter.status",{"_index":1790,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["filterclients",{"_index":1654,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["filterclients(clients",{"_index":1658,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["filtereddatasearch",{"_index":1780,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["fio",{"_index":376,"title":{},"body":{"classes/ClientDataDTO.html":{},"injectables/ClientService.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/enumerations.html":{}}}],["first_name",{"_index":963,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["firstname",{"_index":970,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/StructuredNameClientSearchDTO.html":{}}}],["firstvaluefrom",{"_index":1499,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["firstvaluefrom(this.journalizationclient.emit(event",{"_index":1508,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["float",{"_index":327,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/CoreResolver.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/PaginationDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["force",{"_index":2060,"title":{},"body":{"index.html":{}}}],["form",{"_index":1317,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["format",{"_index":243,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["formattedjournals",{"_index":1366,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["formattedjournals.sort",{"_index":1370,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["free",{"_index":1999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["freemsisdns",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromdate",{"_index":1010,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["fromdateobj",{"_index":1203,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["fromdateobj.sethours(0",{"_index":1205,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["fromdateobj.toisostring",{"_index":1206,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["frozen",{"_index":1973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["functions",{"_index":2025,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":989,"title":{},"body":{"interfaces/IContractClient.html":{}}}],["gender.interface",{"_index":994,"title":{},"body":{"interfaces/IContractClient.html":{}}}],["generate",{"_index":2051,"title":{},"body":{"index.html":{}}}],["generatedocumentpassport",{"_index":1063,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["generatedocumentpassport(payload.input.tostring",{"_index":1080,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["generatepaginationarray",{"_index":1356,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"miscellaneous/variables.html":{}}}],["generatestringfromdate",{"_index":1798,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["generatestringfromdate(data.state.changedat",{"_index":1810,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["generatetokencontext",{"_index":496,"title":{},"body":{"classes/ClientResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"miscellaneous/variables.html":{}}}],["generatetokencontext(context",{"_index":502,"title":{},"body":{"classes/ClientResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["get('health",{"_index":202,"title":{},"body":{"controllers/AppController.html":{}}}],["get('health2",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["get('uptime",{"_index":1872,"title":{},"body":{"controllers/UptimeController.html":{}}}],["get_all",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get_client",{"_index":716,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/RabbitMQService.html":{},"miscellaneous/variables.html":{}}}],["get_logs",{"_index":1256,"title":{},"body":{"controllers/JournalizationController.html":{},"injectables/RabbitMQService.html":{},"miscellaneous/variables.html":{}}}],["getalljournal",{"_index":1348,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["getalljournal(pagination",{"_index":1351,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["getalllogs",{"_index":1171,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["getclient",{"_index":490,"title":{},"body":{"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"injectables/RabbitMQService.html":{}}}],["getclient(payload",{"_index":535,"title":{},"body":{"injectables/ClientService.html":{},"injectables/RabbitMQService.html":{}}}],["getclientbyid",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getclientdata",{"_index":130,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{}}}],["getclientdata(clientid",{"_index":488,"title":{},"body":{"classes/ClientResolver.html":{}}}],["getclientdata(payload",{"_index":135,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/DLService.html":{}}}],["getclientdata(tokendata",{"_index":714,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["getclientssearch",{"_index":1635,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["getclientssearch(context",{"_index":1638,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["getconnectionoptions",{"_index":1273,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["getdata",{"_index":286,"title":{},"body":{"injectables/AppService.html":{}}}],["getheaders",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmetadataargsstorage",{"_index":1274,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["getmetadataargsstorage().tables.map((tbl",{"_index":1277,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["getsearchareas",{"_index":1584,"title":{},"body":{"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{}}}],["getsearchareas(getsearchareasinput",{"_index":1588,"title":{},"body":{"classes/SearchAreasResolver.html":{}}}],["getsearchareas(input",{"_index":1596,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["getsearchareasinput",{"_index":1590,"title":{},"body":{"classes/SearchAreasResolver.html":{}}}],["getsearchareasinputdto",{"_index":851,"title":{"classes/GetSearchAreasInputDTO.html":{}},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{}}}],["getting",{"_index":2047,"title":{"index.html":{}},"body":{}}],["gold_1",{"_index":1977,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gold_2",{"_index":1986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gold_3",{"_index":1981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gold_4",{"_index":1987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["good",{"_index":166,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["gq",{"_index":609,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["gql/health",{"_index":1331,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["gqlcontext",{"_index":1327,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["gqlcontext.req",{"_index":1329,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["gqlerror",{"_index":1044,"title":{},"body":{"interfaces/IGqlError.html":{}}}],["gqlexecutioncontext",{"_index":1325,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext",{"_index":1328,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.headers",{"_index":1332,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["gqlmodule",{"_index":862,"title":{"modules/GqlModule.html":{}},"body":{"modules/GqlModule.html":{},"modules.html":{},"overview.html":{}}}],["graph",{"_index":2100,"title":{},"body":{"modules.html":{}}}],["graphdoc",{"_index":2050,"title":{},"body":{"index.html":{}}}],["graphql",{"_index":48,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/CoreModule.html":{},"interfaces/IGqlError.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/PaginationDTO.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["graphql_requests_total",{"_index":2213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlcontext",{"_index":45,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["graphqljson",{"_index":1141,"title":{},"body":{"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{}}}],["graphqlmodule",{"_index":639,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlmodule.forrootasync",{"_index":672,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlrequeststotal",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqluploadexpress",{"_index":637,"title":{},"body":{"modules/CoreModule.html":{}}}],["groupid",{"_index":613,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["gsm",{"_index":822,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{},"interfaces/IEquipmentClient.html":{}}}],["gte",{"_index":1227,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["guard",{"_index":0,"title":{"guards/ApimeConnectionGuard.html":{},"guards/KeycloakTokenGuard.html":{}},"body":{"modules/CoreModule.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"guards/KeycloakTokenGuard.html":{},"overview.html":{}}}],["guest",{"_index":1033,"title":{},"body":{"interfaces/IEnum.html":{}}}],["guin",{"_index":1969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h7bzumufziovwpiehtw42gbf0rtiedvq",{"_index":2199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handlegetlogs",{"_index":1253,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["handlegetlogs(payload",{"_index":1255,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["handlejournalization",{"_index":1254,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["handlejournalization(@payload",{"_index":1264,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["handlejournalization(data",{"_index":1259,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["headers",{"_index":156,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["healthcheck",{"_index":131,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"controllers/AppController.html":{}}}],["healthcheck2",{"_index":200,"title":{},"body":{"controllers/AppController.html":{}}}],["healthcheck2(@query('param",{"_index":213,"title":{},"body":{"controllers/AppController.html":{}}}],["healthcheck2(param",{"_index":206,"title":{},"body":{"controllers/AppController.html":{}}}],["hello",{"_index":289,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":2214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helpersgql",{"_index":332,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["hit._source",{"_index":1249,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["hit._source.registred",{"_index":1250,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["hits",{"_index":1242,"title":{},"body":{"injectables/JournalizatingService.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{}}}],["hits.length",{"_index":1244,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["hits.map((hit",{"_index":1246,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["host",{"_index":263,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/ErrorFilter.html":{}}}],["host.gettype",{"_index":841,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["host.switchtohttp",{"_index":836,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["http",{"_index":98,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"classes/ErrorFilter.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"modules/KeycloakModule.html":{},"injectables/SearchApimeService-1.html":{},"miscellaneous/variables.html":{}}}],["http://127.0.0.1:3100",{"_index":265,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["http://localhost:3010/graphql",{"_index":2056,"title":{},"body":{"index.html":{}}}],["http://localhost:9200",{"_index":253,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["httperror",{"_index":876,"title":{"interfaces/HttpError.html":{}},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["httpexception",{"_index":29,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"classes/ClientResolver.html":{},"classes/ErrorFilter.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["httpexception(exceptionmsgql.apime",{"_index":506,"title":{},"body":{"classes/ClientResolver.html":{}}}],["httpexception(httpexceptionmessagesgraphql.errorauthapime",{"_index":54,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["httpmodule",{"_index":87,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["httpmodule.registerasync",{"_index":111,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["httpmoduleoptions",{"_index":100,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["https",{"_index":92,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/KeycloakModule.html":{}}}],["https.agent",{"_index":109,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["https://gitlab.corp.motiv/web/motiv",{"_index":2113,"title":{},"body":{"properties.html":{}}}],["https://verdaccio.org/docs/docker",{"_index":2084,"title":{},"body":{"index.html":{}}}],["httpsagent",{"_index":110,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["httpservice",{"_index":133,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["httpstatus",{"_index":30,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"classes/ClientResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["httpstatus.bad_request",{"_index":66,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["httpstatus.not_found",{"_index":507,"title":{},"body":{"classes/ClientResolver.html":{}}}],["httpstatus.unauthorized",{"_index":55,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["iaccesstokeninput",{"_index":136,"title":{"interfaces/IAccessTokenInput.html":{}},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"injectables/RabbitMQService.html":{},"classes/SearchClientsResolver.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["iaddresstype",{"_index":891,"title":{"interfaces/IAddressType.html":{}},"body":{"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{}}}],["iaddresstypesresponse",{"_index":894,"title":{"interfaces/IAddressTypesResponse.html":{}},"body":{"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["iapimehealth",{"_index":147,"title":{"interfaces/IApiMeHealth.html":{}},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IApiMeHealth.html":{}}}],["ibalanceclient",{"_index":304,"title":{"interfaces/IBalanceClient.html":{}},"body":{"classes/BalanceClientSearchDTO.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["ibillingdeliverytype",{"_index":902,"title":{"interfaces/IBillingDeliveryType.html":{}},"body":{"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{}}}],["ibillingdeliverytypesresponse",{"_index":904,"title":{"interfaces/IBillingDeliveryTypesResponse.html":{}},"body":{"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["icategory",{"_index":906,"title":{"interfaces/ICategory.html":{}},"body":{"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{}}}],["icc",{"_index":817,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["iccid",{"_index":377,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{}}}],["icitytype",{"_index":912,"title":{"interfaces/ICityType.html":{}},"body":{"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{}}}],["icitytypesresponse",{"_index":914,"title":{"interfaces/ICityTypesResponse.html":{}},"body":{"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["iclientapiresult",{"_index":141,"title":{"interfaces/IClientApiResult.html":{}},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IClientApiResult.html":{},"injectables/RabbitMQService.html":{}}}],["iclientsearch",{"_index":370,"title":{"interfaces/IClientSearch.html":{}},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{}}}],["iclientsearchresult",{"_index":402,"title":{"interfaces/IClientSearchResult.html":{}},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{}}}],["iclienttype",{"_index":926,"title":{"interfaces/IClientType.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{}}}],["iclienttypesresponse",{"_index":983,"title":{"interfaces/IClientTypesResponse.html":{}},"body":{"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["icontactclient",{"_index":985,"title":{"interfaces/IContactClient.html":{}},"body":{"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{}}}],["icontractclient",{"_index":927,"title":{"interfaces/IContractClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IContractClient.html":{}}}],["icountrytype",{"_index":995,"title":{"interfaces/ICountryType.html":{}},"body":{"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{}}}],["icountrytypesresponse",{"_index":997,"title":{"interfaces/ICountryTypesResponse.html":{}},"body":{"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["icreatejournal",{"_index":999,"title":{"interfaces/ICreateJournal.html":{}},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"injectables/JournalizatingService.html":{},"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":139,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"injectables/ClientService.html":{},"classes/EquipmentClientSearchDTO.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IGenderClient.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnDto.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/variables.html":{}}}],["idataclientsearchresponse",{"_index":754,"title":{"interfaces/IDataClientSearchResponse.html":{}},"body":{"controllers/DLMessagePattern.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{}}}],["identifier",{"_index":951,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["identity",{"_index":979,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["idistricttype",{"_index":1015,"title":{"interfaces/IDistrictType.html":{}},"body":{"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{}}}],["idistricttypesresponse",{"_index":1017,"title":{"interfaces/IDistrictTypesResponse.html":{}},"body":{"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["idl",{"_index":2061,"title":{},"body":{"index.html":{}}}],["idocumentclient",{"_index":928,"title":{"interfaces/IDocumentClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentTypeClient.html":{}}}],["idocumentclientsearch",{"_index":801,"title":{"interfaces/IDocumentClientSearch.html":{}},"body":{"classes/DocumentClientSearchDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["idocumenttype",{"_index":1023,"title":{"interfaces/IDocumentType.html":{}},"body":{"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypesResponse.html":{}}}],["idocumenttypeclient",{"_index":1022,"title":{"interfaces/IDocumentTypeClient.html":{}},"body":{"interfaces/IDocumentClient.html":{},"interfaces/IDocumentTypeClient.html":{}}}],["idocumenttypesresponse",{"_index":1025,"title":{"interfaces/IDocumentTypesResponse.html":{}},"body":{"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["ienum",{"_index":1027,"title":{"interfaces/IEnum.html":{}},"body":{"interfaces/IEnum.html":{},"miscellaneous/functions.html":{}}}],["iequipmentclient",{"_index":929,"title":{"interfaces/IEquipmentClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/ISubscriberClient.html":{}}}],["iequipmentclientsearch",{"_index":815,"title":{"interfaces/IEquipmentClientSearch.html":{}},"body":{"classes/EquipmentClientSearchDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["ierror",{"_index":882,"title":{"interfaces/IError.html":{}},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["igenderclient",{"_index":992,"title":{"interfaces/IGenderClient.html":{}},"body":{"interfaces/IContractClient.html":{},"interfaces/IGenderClient.html":{}}}],["igqlerror",{"_index":1041,"title":{"interfaces/IGqlError.html":{}},"body":{"interfaces/IGqlError.html":{}}}],["ijournal",{"_index":1004,"title":{"interfaces/IJournal.html":{}},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"injectables/JournalizatingService.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{}}}],["ijuridicaltype",{"_index":930,"title":{"interfaces/IJuridicalType.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{}}}],["ijuridicaltypesresponse",{"_index":1046,"title":{"interfaces/IJuridicalTypesResponse.html":{}},"body":{"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["ilogger",{"_index":886,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["image:deps",{"_index":2078,"title":{},"body":{"index.html":{}}}],["image:nx",{"_index":2075,"title":{},"body":{"index.html":{}}}],["imonetaryclient",{"_index":899,"title":{"interfaces/IMonetaryClient.html":{}},"body":{"interfaces/IBalanceClient.html":{},"interfaces/IMonetaryClient.html":{},"classes/MonetaryClientSearchDTO.html":{},"injectables/SearchClientsService.html":{}}}],["imonetaryclient[]).find",{"_index":1681,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["implements",{"_index":41,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"entities/Journal.html":{},"guards/KeycloakTokenGuard.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["import",{"_index":28,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IContractClient.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{}}}],["imports",{"_index":99,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/PromModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{}}}],["imsi",{"_index":816,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["imsisdn",{"_index":911,"title":{"interfaces/IMsisdn.html":{}},"body":{"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["in_use",{"_index":2001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inameclient",{"_index":925,"title":{"interfaces/INameClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/INameClient.html":{}}}],["inameclientsearch",{"_index":968,"title":{"interfaces/INameClientSearch.html":{}},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/NameClientSearchDTO.html":{}}}],["includemethod",{"_index":2219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(['id",{"_index":1131,"title":{},"body":{"entities/Journal.html":{}}}],["indexexists",{"_index":1189,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["indexexists.body",{"_index":1191,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["indexprefix",{"_index":260,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["individual",{"_index":435,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{}}}],["info_not_found",{"_index":532,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["inject",{"_index":127,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/JournalizatingModule.html":{},"modules/KeycloakModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchService.html":{}}}],["inject('journalization",{"_index":1502,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["inject('web_clients",{"_index":1501,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["injectable",{"_index":31,"title":{"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/DLService.html":{},"injectables/JournalizatingService.html":{},"injectables/KeycloakIntegrationService.html":{},"injectables/KeycloakService.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/DLService.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"injectables/KeycloakIntegrationService.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["injectables",{"_index":128,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ClientService.html":{},"injectables/DLService.html":{},"injectables/JournalizatingService.html":{},"injectables/KeycloakIntegrationService.html":{},"injectables/KeycloakService.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":1187,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["injectrepository(journal",{"_index":1188,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["inn",{"_index":545,"title":{},"body":{"injectables/ClientService.html":{},"interfaces/IContractClient.html":{}}}],["input",{"_index":463,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SortInput.html":{}}}],["input.replace(/%/g",{"_index":1600,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["inputs.interface.ts",{"_index":889,"title":{},"body":{"interfaces/IAccessTokenInput.html":{},"interfaces/ITraceId.html":{}}}],["inputtype",{"_index":442,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/PaginationDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["installsubscriptionhandlers",{"_index":662,"title":{},"body":{"modules/CoreModule.html":{}}}],["instanceof",{"_index":1718,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["int",{"_index":326,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["integration",{"_index":756,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"index.html":{}}}],["integration.module.ts",{"_index":86,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakIntegrationModule.html":{}}}],["integration.service",{"_index":34,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeTokenInterceptor.html":{},"modules/KeycloakIntegrationModule.html":{}}}],["integration.service.ts",{"_index":129,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/KeycloakIntegrationService.html":{}}}],["integration.service.ts:12",{"_index":134,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["integration.service.ts:19",{"_index":143,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["integration.service.ts:52",{"_index":138,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["integration/src/lib/apime",{"_index":85,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{}}}],["integration/src/lib/apimeconnectionguard.ts",{"_index":7,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["integration/src/lib/apimeconnectionguard.ts:12",{"_index":16,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["integration/src/lib/apimeconnectionguard.ts:34",{"_index":24,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["integration/src/lib/apimetokeninterceptor.service.ts",{"_index":178,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["integration/src/lib/apimetokeninterceptor.service.ts:16",{"_index":180,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["integration/src/lib/apimetokeninterceptor.service.ts:32",{"_index":184,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["integration/src/lib/dictionary/dictionary",{"_index":1061,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["integration/src/lib/keycloak",{"_index":1292,"title":{},"body":{"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{}}}],["integration/src/lib/other/api",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integration/src/lib/other/static.interface.ts",{"_index":896,"title":{},"body":{"interfaces/IApiMeHealth.html":{}}}],["integration/src/lib/search/search",{"_index":1533,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["intercept",{"_index":179,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["intercept(context",{"_index":181,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["interface",{"_index":590,"title":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"injectables/SearchDictionaryService.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{}}}],["interfaces",{"_index":313,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/NameClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"overview.html":{}}}],["internal",{"_index":2114,"title":{},"body":{"properties.html":{}}}],["international",{"_index":948,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["introspect",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["introspection",{"_index":660,"title":{},"body":{"modules/CoreModule.html":{}}}],["introspecttoken",{"_index":1304,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["introspecttoken(access_token",{"_index":1306,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["invalid",{"_index":533,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["ioptionalpropertyclient",{"_index":520,"title":{"interfaces/IOptionalPropertyClient.html":{}},"body":{"injectables/ClientService.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IOptionalPropertyClient.html":{}}}],["ip",{"_index":1551,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["ipaymenttypeclient",{"_index":931,"title":{"interfaces/IPaymentTypeClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IPaymentTypeClient.html":{}}}],["iqjsi",{"_index":1392,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["iquerystructured",{"_index":958,"title":{"interfaces/IQueryStructured.html":{}},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["iqueryunstructured",{"_index":961,"title":{"interfaces/IQueryUnStructured.html":{}},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["iregion",{"_index":910,"title":{"interfaces/IRegion.html":{}},"body":{"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{}}}],["iregiontype",{"_index":932,"title":{"interfaces/IRegionType.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/ISubscriberClient.html":{}}}],["iregiontypesresponse",{"_index":1055,"title":{"interfaces/IRegionTypesResponse.html":{}},"body":{"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["irelationclient",{"_index":933,"title":{"interfaces/IRelationClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IRelationClient.html":{}}}],["irequestparams",{"_index":1060,"title":{"interfaces/IRequestParams.html":{}},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["isarray",{"_index":1416,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["isearchclientpayload",{"_index":720,"title":{"interfaces/ISearchClientPayload.html":{}},"body":{"controllers/DLMessagePattern.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["isearchjournal",{"_index":1006,"title":{"interfaces/ISearchJournal.html":{}},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{}}}],["isearchunlinkedmsisdnspayload",{"_index":748,"title":{"interfaces/ISearchUnlinkedMsisdnsPayload.html":{}},"body":{"controllers/DLMessagePattern.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["isearchunlinkedmsisdnsresponse",{"_index":328,"title":{"interfaces/ISearchUnlinkedMsisdnsResponse.html":{}},"body":{"classes/CategoryDto.html":{},"controllers/DLMessagePattern.html":{},"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"classes/MsisdnDto.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["isenum",{"_index":443,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["isenum(juridicaltypeclientenum",{"_index":459,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{}}}],["isenum(marketsegmentenum",{"_index":461,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{}}}],["isenum(msisdncategory",{"_index":1433,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["isenum(msisdnstatus",{"_index":1432,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["isenum(region",{"_index":1434,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["isenum(searchareaenum",{"_index":465,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{}}}],["isenum(stateclientenum",{"_index":460,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{}}}],["isfiveormoredigitswithsymbols",{"_index":1612,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["isfiveormoreletterswithsymbols",{"_index":1606,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["isglobal",{"_index":798,"title":{},"body":{"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizationModule.html":{}}}],["isin",{"_index":444,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["isin(['asc",{"_index":452,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["isin(['fio",{"_index":450,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{}}}],["isin(['status",{"_index":1431,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["isint",{"_index":1417,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["isint({each",{"_index":1764,"title":{},"body":{"classes/SearchUnlinkedMsisdnsQueryDto.html":{}}}],["ismain",{"_index":1020,"title":{},"body":{"interfaces/IDocumentClient.html":{},"interfaces/IDocumentTypeClient.html":{}}}],["ismorethanfivemixed",{"_index":1620,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["isnotempty",{"_index":857,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{}}}],["isnotempty({message",{"_index":855,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{}}}],["isnumber",{"_index":1451,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["isoptional",{"_index":445,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/PaginationDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["isoptional()@isenum(juridicaltypeclientenum",{"_index":433,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["isoptional()@isenum(marketsegmentenum",{"_index":440,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["isoptional()@isenum(msisdncategory",{"_index":1409,"title":{},"body":{"classes/MsisdnFilterDTO.html":{}}}],["isoptional()@isenum(msisdnstatus",{"_index":1414,"title":{},"body":{"classes/MsisdnFilterDTO.html":{}}}],["isoptional()@isenum(region",{"_index":1411,"title":{},"body":{"classes/MsisdnFilterDTO.html":{}}}],["isoptional()@isenum(stateclientenum",{"_index":425,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["isoptional()@isnumber()@field(undefined",{"_index":1448,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["isoptional()@isstring()@isin(['asc",{"_index":1839,"title":{},"body":{"classes/SortInputDTO.html":{}}}],["isoptional()@isstring()@isin(['status",{"_index":1840,"title":{},"body":{"classes/SortInputDTO.html":{}}}],["isplayground",{"_index":678,"title":{},"body":{"modules/CoreModule.html":{}}}],["isstring",{"_index":446,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["isstring()@isin(['asc",{"_index":1835,"title":{},"body":{"classes/SortInput.html":{}}}],["isstring()@isin(['fio",{"_index":1836,"title":{},"body":{"classes/SortInput.html":{}}}],["isstring({message",{"_index":856,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{}}}],["issueby",{"_index":1021,"title":{},"body":{"interfaces/IDocumentClient.html":{},"interfaces/IDocumentTypeClient.html":{}}}],["issuedate",{"_index":802,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["istate",{"_index":909,"title":{"interfaces/IState.html":{}},"body":{"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{}}}],["istateclient",{"_index":934,"title":{"interfaces/IStateClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/IStateClient.html":{},"interfaces/ISubscriberClient.html":{}}}],["istreettype",{"_index":1102,"title":{"interfaces/IStreetType.html":{}},"body":{"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{}}}],["istreettypesresponse",{"_index":1064,"title":{"interfaces/IStreetTypesResponse.html":{}},"body":{"interfaces/IRequestParams.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"injectables/SearchDictionaryService.html":{}}}],["istructuredclientname",{"_index":969,"title":{"interfaces/IStructuredClientName.html":{}},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/StructuredNameClientSearchDTO.html":{}}}],["istructurednameclientsearch",{"_index":960,"title":{"interfaces/IStructuredNameClientSearch.html":{}},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["isubscriberclient",{"_index":935,"title":{"interfaces/ISubscriberClient.html":{}},"body":{"interfaces/IClientApiResult.html":{},"interfaces/ISubscriberClient.html":{}}}],["isubscriberclientsearch",{"_index":975,"title":{"interfaces/ISubscriberClientSearch.html":{}},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/SubscriberClientSearchDTO.html":{}}}],["item.categoryname",{"_index":1793,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["item.region",{"_index":1795,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["item.status",{"_index":1791,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["items",{"_index":366,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["itraceid",{"_index":890,"title":{"interfaces/ITraceId.html":{}},"body":{"interfaces/IAccessTokenInput.html":{},"interfaces/ITraceId.html":{}}}],["ivalidationerror",{"_index":883,"title":{"interfaces/IValidationError.html":{}},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["ivalidationvariables",{"_index":884,"title":{"interfaces/IValidationVariables.html":{}},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["jest",{"_index":2095,"title":{},"body":{"index.html":{}}}],["joi",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["joi.boolean().default(false",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3015",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(5432",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(6379",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('asia/yekaterinburg",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["journal",{"_index":1107,"title":{"entities/Journal.html":{}},"body":{"entities/Journal.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["journaldto",{"_index":1132,"title":{"classes/JournalDTO.html":{}},"body":{"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{}}}],["journalizating.service",{"_index":1152,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["journalizatingmodule",{"_index":1146,"title":{"modules/JournalizatingModule.html":{}},"body":{"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules.html":{},"overview.html":{}}}],["journalizatingservice",{"_index":1150,"title":{"injectables/JournalizatingService.html":{}},"body":{"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"overview.html":{}}}],["journalization",{"_index":1395,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"modules/RabbitModule.html":{},"index.html":{}}}],["journalization.controller",{"_index":1272,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["journalizationclient",{"_index":1484,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["journalizationcontroller",{"_index":1251,"title":{"controllers/JournalizationController.html":{}},"body":{"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{}}}],["journalizationmodule",{"_index":1268,"title":{"modules/JournalizationModule.html":{}},"body":{"modules/JournalizationModule.html":{},"modules.html":{},"overview.html":{}}}],["journals",{"_index":1130,"title":{},"body":{"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["journals.map((journal",{"_index":1367,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["journals.module.ts",{"_index":1342,"title":{},"body":{"modules/LogsAndJournalsModule.html":{}}}],["journals.resolver",{"_index":1346,"title":{},"body":{"modules/LogsAndJournalsModule.html":{}}}],["journals.resolver.ts",{"_index":1347,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["journals.resolver.ts:10",{"_index":1350,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["journals.resolver.ts:29",{"_index":1354,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["journals.service",{"_index":1344,"title":{},"body":{"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["journals.service.ts",{"_index":1379,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["journals.service.ts:21",{"_index":1381,"title":{},"body":{"injectables/LogsAndJournalsService.html":{}}}],["journals.service.ts:30",{"_index":1384,"title":{},"body":{"injectables/LogsAndJournalsService.html":{}}}],["journals.service.ts:44",{"_index":1383,"title":{},"body":{"injectables/LogsAndJournalsService.html":{}}}],["journalsdata",{"_index":1353,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["journalsdto",{"_index":1142,"title":{"classes/JournalsDTO.html":{}},"body":{"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["json",{"_index":266,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"classes/ErrorFilter.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"dependencies.html":{}}}],["jsonb",{"_index":1113,"title":{},"body":{"entities/Journal.html":{}}}],["juridicaltype",{"_index":378,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["juridicaltype'})@field(undefined",{"_index":434,"title":{},"body":{"classes/ClientFilterInput.html":{}}}],["juridicaltypeclientenum",{"_index":432,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["juridicaltypeid",{"_index":893,"title":{},"body":{"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{}}}],["juridicaltypes",{"_index":1047,"title":{},"body":{"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{}}}],["jz",{"_index":611,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/RabbitModule.html":{}}}],["kafka",{"_index":594,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["kafka_broker",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kafka_client_id",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kafka_group_id",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycloak",{"_index":621,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{}}}],["keycloak.service",{"_index":1285,"title":{},"body":{"controllers/KeycloakController.html":{},"modules/KeycloakModule.html":{},"guards/KeycloakTokenGuard.html":{}}}],["keycloak_client_id",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycloak_client_secret",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycloak_host_port",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycloak_realm",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycloakconfig",{"_index":1298,"title":{},"body":{"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{}}}],["keycloakconfig.host}/realms/${keycloakconfig.realm",{"_index":1301,"title":{},"body":{"modules/KeycloakModule.html":{}}}],["keycloakconfig.keycloakguard",{"_index":1326,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["keycloakcontroller",{"_index":1281,"title":{"controllers/KeycloakController.html":{}},"body":{"controllers/KeycloakController.html":{},"modules/KeycloakModule.html":{}}}],["keycloakguard",{"_index":622,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["keycloakintegrationmodule",{"_index":791,"title":{"modules/KeycloakIntegrationModule.html":{}},"body":{"modules/DlModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules.html":{},"overview.html":{}}}],["keycloakintegrationservice",{"_index":1290,"title":{"injectables/KeycloakIntegrationService.html":{}},"body":{"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"overview.html":{}}}],["keycloakmethods",{"_index":1308,"title":{},"body":{"injectables/KeycloakService.html":{},"miscellaneous/variables.html":{}}}],["keycloakmethods.introspect",{"_index":1312,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["keycloakmodule",{"_index":474,"title":{"modules/KeycloakModule.html":{}},"body":{"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/KeycloakModule.html":{},"modules.html":{},"overview.html":{}}}],["keycloakservice",{"_index":1284,"title":{"injectables/KeycloakService.html":{}},"body":{"controllers/KeycloakController.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"overview.html":{}}}],["keycloaktokenguard",{"_index":497,"title":{"guards/KeycloakTokenGuard.html":{}},"body":{"classes/ClientResolver.html":{},"modules/CoreModule.html":{},"modules/KeycloakModule.html":{},"guards/KeycloakTokenGuard.html":{},"overview.html":{}}}],["keyof",{"_index":1709,"title":{},"body":{"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["keyword",{"_index":1195,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["kurgan",{"_index":2010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":224,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/IEnum.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{},"miscellaneous/functions.html":{}}}],["labelnames",{"_index":2216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["labels",{"_index":268,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["last_name",{"_index":965,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["lastname",{"_index":972,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/StructuredNameClientSearchDTO.html":{}}}],["legal_entity",{"_index":437,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":73,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["level",{"_index":249,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["libs/.../api",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../class",{"_index":2121,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../client.enum.ts",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../generators.ts",{"_index":2028,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../helper.ts",{"_index":2032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/.../http",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../juridical.type.ts",{"_index":2124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../kafka.ts",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../keycloak",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../logs",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../metrics.module.ts",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../mine.type.ts",{"_index":2123,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../msisdns",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../optional",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../passportverificationstatus.enum.ts",{"_index":1952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../rmq.ts",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../rmq_journal.ts",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../search",{"_index":1953,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/.../segment.type.ts",{"_index":2125,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../state.type.ts",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/apime",{"_index":6,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/auth.module.ts",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{}}}],["libs/auth/src/lib/auth.service.ts",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["libs/client/src/lib/client.module.ts",{"_index":479,"title":{},"body":{"modules/ClientModule.html":{}}}],["libs/client/src/lib/client.resolver.ts",{"_index":485,"title":{},"body":{"classes/ClientResolver.html":{}}}],["libs/client/src/lib/client.resolver.ts:16",{"_index":487,"title":{},"body":{"classes/ClientResolver.html":{}}}],["libs/client/src/lib/client.resolver.ts:24",{"_index":493,"title":{},"body":{"classes/ClientResolver.html":{}}}],["libs/client/src/lib/client.service.ts",{"_index":510,"title":{},"body":{"injectables/ClientService.html":{}}}],["libs/client/src/lib/client.service.ts:12",{"_index":517,"title":{},"body":{"injectables/ClientService.html":{}}}],["libs/client/src/lib/client.service.ts:18",{"_index":536,"title":{},"body":{"injectables/ClientService.html":{}}}],["libs/client/src/lib/client.service.ts:38",{"_index":538,"title":{},"body":{"injectables/ClientService.html":{}}}],["libs/client/src/lib/client.service.ts:74",{"_index":521,"title":{},"body":{"injectables/ClientService.html":{}}}],["libs/core/src/lib/core.module.ts",{"_index":629,"title":{},"body":{"modules/CoreModule.html":{}}}],["libs/core/src/lib/core.module.ts:121",{"_index":634,"title":{},"body":{"modules/CoreModule.html":{}}}],["libs/core/src/lib/core.resolver.ts",{"_index":695,"title":{},"body":{"classes/CoreResolver.html":{}}}],["libs/core/src/lib/core.resolver.ts:8",{"_index":698,"title":{},"body":{"classes/CoreResolver.html":{}}}],["libs/core/src/lib/uptime.controller.ts",{"_index":1871,"title":{},"body":{"controllers/UptimeController.html":{}}}],["libs/core/src/lib/uptime.controller.ts:6",{"_index":1873,"title":{},"body":{"controllers/UptimeController.html":{}}}],["libs/journalizating/src/lib/journalizating.module.ts",{"_index":1151,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["libs/journalizating/src/lib/journalizating.service.ts",{"_index":1167,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["libs/journalizating/src/lib/journalizating.service.ts:13",{"_index":1177,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["libs/journalizating/src/lib/journalizating.service.ts:24",{"_index":1179,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["libs/journalizating/src/lib/journalizating.service.ts:57",{"_index":1181,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["libs/journalizating/src/lib/journalizating.service.ts:66",{"_index":1183,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["libs/journalizating/src/lib/journalizating.service.ts:86",{"_index":1184,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["libs/journalizating/src/lib/journalizating.service.ts:95",{"_index":1186,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["libs/keycloak",{"_index":1291,"title":{},"body":{"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{}}}],["libs/keycloak/src/lib/keycloak",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/keycloak/src/lib/keycloak.controller.ts",{"_index":1282,"title":{},"body":{"controllers/KeycloakController.html":{}}}],["libs/keycloak/src/lib/keycloak.module.ts",{"_index":1296,"title":{},"body":{"modules/KeycloakModule.html":{}}}],["libs/keycloak/src/lib/keycloak.service.ts",{"_index":1303,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/keycloak/src/lib/keycloak.service.ts:19",{"_index":1307,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/keycloak/src/lib/keycloak.service.ts:9",{"_index":1305,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/keycloak/src/lib/tokenguard.guard.ts",{"_index":1320,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["libs/keycloak/src/lib/tokenguard.guard.ts:13",{"_index":1322,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["libs/keycloak/src/lib/tokenguard.guard.ts:19",{"_index":1323,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["libs/logs/src/lib/loggerloki.service.ts",{"_index":215,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["libs/logs/src/lib/loggerloki.service.ts:13",{"_index":218,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["libs/logs/src/lib/loggerloki.service.ts:56",{"_index":225,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["libs/logs/src/lib/loggerloki.service.ts:67",{"_index":221,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["libs/logs/src/lib/loggerloki.service.ts:78",{"_index":228,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["libs/logs/src/lib/logs",{"_index":1341,"title":{},"body":{"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["libs/metrics/src/lib/metrics.module.ts",{"_index":1464,"title":{},"body":{"modules/PromModule.html":{},"miscellaneous/variables.html":{}}}],["libs/rabbit/src/lib/rabbit.module.ts",{"_index":1512,"title":{},"body":{"modules/RabbitModule.html":{}}}],["libs/rabbit/src/lib/rabbit.service.ts",{"_index":1478,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["libs/rabbit/src/lib/rabbit.service.ts:23",{"_index":1486,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["libs/rabbit/src/lib/rabbit.service.ts:37",{"_index":1491,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["libs/rabbit/src/lib/rabbit.service.ts:69",{"_index":1494,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["libs/rabbit/src/lib/rabbit.service.ts:82",{"_index":1498,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["libs/rabbit/src/lib/rabbit.service.ts:97",{"_index":1489,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["libs/rabbit/src/lib/searchсlientservice/rabbit.search",{"_index":1744,"title":{},"body":{"injectables/SearchService.html":{}}}],["libs/search",{"_index":420,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["libs/shared/src/lib/dto/helpersgql/class",{"_index":2127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/shared/src/lib/dto/helpersgql/helper.ts",{"_index":2042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["libs/shared/src/lib/dto/helpersgql/pagination.dto.ts",{"_index":1443,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["libs/shared/src/lib/dto/helpersgql/pagination.dto.ts:21",{"_index":1450,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["libs/shared/src/lib/dto/helpersgql/pagination.dto.ts:30",{"_index":1447,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts",{"_index":1133,"title":{},"body":{"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:19",{"_index":1137,"title":{},"body":{"classes/JournalDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:22",{"_index":1139,"title":{},"body":{"classes/JournalDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:28",{"_index":1136,"title":{},"body":{"classes/JournalDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:31",{"_index":1140,"title":{},"body":{"classes/JournalDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:34",{"_index":1138,"title":{},"body":{"classes/JournalDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:41",{"_index":1134,"title":{},"body":{"classes/JournalDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:54",{"_index":1280,"title":{},"body":{"classes/JournalsDTO.html":{}}}],["libs/shared/src/lib/dto/journals/journals.dto.ts:57",{"_index":1279,"title":{},"body":{"classes/JournalsDTO.html":{}}}],["libs/shared/src/lib/dto/search",{"_index":301,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/NameClientSearchDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["libs/shared/src/lib/entities/logs",{"_index":1109,"title":{},"body":{"entities/Journal.html":{}}}],["libs/shared/src/lib/enums/client.enum.ts",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/lib/enums/msisdns",{"_index":1975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/lib/enums/passportverificationstatus.enum.ts",{"_index":2017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/shared/src/lib/enums/search",{"_index":2019,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["libs/shared/src/lib/interfaces/apimeinputs/apime",{"_index":888,"title":{},"body":{"interfaces/IAccessTokenInput.html":{},"interfaces/ITraceId.html":{}}}],["libs/shared/src/lib/interfaces/client/balance.interface.ts",{"_index":898,"title":{},"body":{"interfaces/IBalanceClient.html":{}}}],["libs/shared/src/lib/interfaces/client/client.interface.ts",{"_index":916,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["libs/shared/src/lib/interfaces/client/contact.interface.ts",{"_index":986,"title":{},"body":{"interfaces/IContactClient.html":{}}}],["libs/shared/src/lib/interfaces/client/contract.interface.ts",{"_index":987,"title":{},"body":{"interfaces/IContractClient.html":{}}}],["libs/shared/src/lib/interfaces/client/document.interface.ts",{"_index":1019,"title":{},"body":{"interfaces/IDocumentClient.html":{},"interfaces/IDocumentTypeClient.html":{}}}],["libs/shared/src/lib/interfaces/client/equipment.interface.ts",{"_index":1039,"title":{},"body":{"interfaces/IEquipmentClient.html":{}}}],["libs/shared/src/lib/interfaces/client/gender.interface.ts",{"_index":1040,"title":{},"body":{"interfaces/IGenderClient.html":{}}}],["libs/shared/src/lib/interfaces/client/monetary.interface.ts",{"_index":1048,"title":{},"body":{"interfaces/IMonetaryClient.html":{}}}],["libs/shared/src/lib/interfaces/client/name.interface.ts",{"_index":1049,"title":{},"body":{"interfaces/INameClient.html":{}}}],["libs/shared/src/lib/interfaces/client/optionalproperty.interface.ts",{"_index":1050,"title":{},"body":{"interfaces/IOptionalPropertyClient.html":{}}}],["libs/shared/src/lib/interfaces/client/paymenttype.interface.ts",{"_index":1051,"title":{},"body":{"interfaces/IPaymentTypeClient.html":{}}}],["libs/shared/src/lib/interfaces/client/relation.interface.ts",{"_index":1057,"title":{},"body":{"interfaces/IRelationClient.html":{}}}],["libs/shared/src/lib/interfaces/client/state.interface.ts",{"_index":1099,"title":{},"body":{"interfaces/IStateClient.html":{}}}],["libs/shared/src/lib/interfaces/client/subscriber.interface.ts",{"_index":1105,"title":{},"body":{"interfaces/ISubscriberClient.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/address/citytype.interface.ts",{"_index":913,"title":{},"body":{"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/address/countrytype.interface.ts",{"_index":996,"title":{},"body":{"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/address/districttype.interface.ts",{"_index":1016,"title":{},"body":{"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/address/regiontype.interface.ts",{"_index":1052,"title":{},"body":{"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/address/streettype.interface.ts",{"_index":1103,"title":{},"body":{"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/client/addresstype.interface.ts",{"_index":892,"title":{},"body":{"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/client/billingdeliverytype.interface.ts",{"_index":903,"title":{},"body":{"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/client/clienttype.interface.ts",{"_index":982,"title":{},"body":{"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/client/documenttype.interface.ts",{"_index":1024,"title":{},"body":{"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/dictionary/client/juridicaltype.interface.ts",{"_index":1045,"title":{},"body":{"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{}}}],["libs/shared/src/lib/interfaces/elasticsearch/postsearchbody.interface.ts",{"_index":1461,"title":{},"body":{"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{}}}],["libs/shared/src/lib/interfaces/journals/journals.interface.ts",{"_index":1000,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{}}}],["libs/shared/src/lib/interfaces/search",{"_index":907,"title":{},"body":{"interfaces/ICategory.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{}}}],["libs/shared/src/lib/interfaces/technical/configuration.interface.ts",{"_index":591,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["libs/shared/src/lib/interfaces/technical/enum.interface.ts",{"_index":1028,"title":{},"body":{"interfaces/IEnum.html":{}}}],["libs/shared/src/lib/interfaces/technical/errors.interface.ts",{"_index":877,"title":{},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["libs/shared/src/lib/interfaces/technical/gql",{"_index":1042,"title":{},"body":{"interfaces/IGqlError.html":{}}}],["libs/shared/src/lib/technical/error.filter.ts",{"_index":826,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["libs/shared/src/lib/technical/error.filter.ts:20",{"_index":831,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["libs/shared/src/lib/technical/errors/http",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/shared/src/lib/technical/generators.ts",{"_index":2036,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/shared/src/lib/technical/message",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/shared/src/lib/types/client/juridical.type.ts",{"_index":2129,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/shared/src/lib/types/client/segment.type.ts",{"_index":2130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/shared/src/lib/types/client/state.type.ts",{"_index":2131,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/shared/src/lib/types/mine.type.ts",{"_index":2128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/shared/src/lib/types/optional",{"_index":2013,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/shared/src/lib/types/state.type.ts",{"_index":2024,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":2111,"title":{},"body":{"properties.html":{}}}],["linked",{"_index":2000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linking",{"_index":2004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["linking_to_device",{"_index":2006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["literal",{"_index":288,"title":{},"body":{"injectables/AppService.html":{},"interfaces/IClientSearch.html":{},"interfaces/IRelationClient.html":{},"interfaces/PostSearchResult.html":{}}}],["live",{"_index":2053,"title":{},"body":{"index.html":{}}}],["load",{"_index":799,"title":{},"body":{"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizationModule.html":{}}}],["loader",{"_index":757,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loader/src/app/config/validation.ts",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader/src/app/dl.controller.ts",{"_index":703,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:100",{"_index":731,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:111",{"_index":737,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:125",{"_index":722,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:137",{"_index":725,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:151",{"_index":728,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:163",{"_index":746,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:175",{"_index":750,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:47",{"_index":717,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:63",{"_index":734,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:74",{"_index":743,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.controller.ts:86",{"_index":740,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["loader/src/app/dl.module.ts",{"_index":792,"title":{},"body":{"modules/DlModule.html":{}}}],["loader/src/app/dl.service.ts",{"_index":781,"title":{},"body":{"injectables/DLService.html":{}}}],["loader/src/app/dl.service.ts:14",{"_index":782,"title":{},"body":{"injectables/DLService.html":{}}}],["loader/src/app/dl.service.ts:27",{"_index":783,"title":{},"body":{"injectables/DLService.html":{}}}],["loader/src/main.ts",{"_index":2033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["local",{"_index":2091,"title":{},"body":{"index.html":{}}}],["localecompare",{"_index":1804,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["log",{"_index":217,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"injectables/JournalizatingService.html":{}}}],["log(message",{"_index":223,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["log.id",{"_index":1200,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["logger",{"_index":276,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"controllers/BrokerMessage.html":{},"injectables/DLService.html":{}}}],["logger(brokermessage.name",{"_index":319,"title":{},"body":{"controllers/BrokerMessage.html":{}}}],["logger(dlservice.name",{"_index":784,"title":{},"body":{"injectables/DLService.html":{}}}],["loggerloki.service",{"_index":1343,"title":{},"body":{"modules/LogsAndJournalsModule.html":{}}}],["loggerservice",{"_index":232,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["logs",{"_index":262,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"controllers/JournalizationController.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{}}}],["logsadminrepo",{"_index":1178,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["logsadminservice",{"_index":515,"title":{},"body":{"injectables/ClientService.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/SearchClientsService.html":{}}}],["logsandjournalsmodule",{"_index":475,"title":{"modules/LogsAndJournalsModule.html":{}},"body":{"modules/ClientModule.html":{},"modules/GqlModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsandjournalsresolver",{"_index":1345,"title":{"classes/LogsAndJournalsResolver.html":{}},"body":{"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["logsandjournalsservice",{"_index":516,"title":{"injectables/LogsAndJournalsService.html":{}},"body":{"injectables/ClientService.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/SearchClientsService.html":{},"overview.html":{}}}],["logsdata",{"_index":1369,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["loki",{"_index":236,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"dependencies.html":{}}}],["loki_host",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lokihost",{"_index":595,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["lokilogger",{"_index":216,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["lokitransport",{"_index":235,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["lte",{"_index":1228,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["m2m",{"_index":2014,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mainbalance",{"_index":1679,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["manager",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["map((id",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(async",{"_index":1808,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["maphits",{"_index":1245,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["mapjuridicaltype",{"_index":2029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapjuridicaltype(type",{"_index":2039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapmarketsegment",{"_index":2030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapmarketsegment(type",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mappings",{"_index":1194,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["mapstateclient",{"_index":2031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mapstateclient(type",{"_index":2041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["marketsegment",{"_index":423,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SearchClientsResolver.html":{},"classes/SortInput.html":{}}}],["marketsegmentenum",{"_index":439,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["massmarket",{"_index":1959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["match",{"_index":1224,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["matchcategory",{"_index":1832,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["matches",{"_index":1419,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["matches(/^[0",{"_index":1426,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["matchescontractstate",{"_index":1703,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["matchesjuridicaltype",{"_index":1702,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["matchesjuridicaltypestate",{"_index":1704,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["matching",{"_index":68,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchregion",{"_index":1833,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["matchstatus",{"_index":1831,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["maxlength",{"_index":1421,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["maxlength(10",{"_index":1423,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["maxredirects",{"_index":108,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["maxretries",{"_index":1160,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["message",{"_index":222,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/IGqlError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["messagepattern",{"_index":751,"title":{},"body":{"controllers/DLMessagePattern.html":{},"controllers/JournalizationController.html":{}}}],["messagepattern({cmd",{"_index":715,"title":{},"body":{"controllers/DLMessagePattern.html":{},"controllers/JournalizationController.html":{}}}],["messages.ts",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":112,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeTokenInterceptor.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"modules/KeycloakModule.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":9,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"controllers/UptimeController.html":{}}}],["methods.ts",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metrics",{"_index":1469,"title":{},"body":{"modules/PromModule.html":{},"dependencies.html":{}}}],["metrics.middleware.ts",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metrics_plugin_key",{"_index":652,"title":{},"body":{"modules/CoreModule.html":{},"modules/PromModule.html":{},"miscellaneous/variables.html":{}}}],["metricsclient",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricsmiddleware",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metricsplugin",{"_index":675,"title":{},"body":{"modules/CoreModule.html":{}}}],["middle",{"_index":1847,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["middle_name",{"_index":964,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["middlename",{"_index":971,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/StructuredNameClientSearchDTO.html":{}}}],["middlewareconsumer",{"_index":633,"title":{},"body":{"modules/CoreModule.html":{}}}],["minimum_should_match",{"_index":1238,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["minlength",{"_index":1418,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["minlength(5",{"_index":1424,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["miscellaneous",{"_index":1944,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misdn",{"_index":358,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["missing",{"_index":121,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/JournalizatingModule.html":{},"modules/KeycloakModule.html":{},"guards/KeycloakTokenGuard.html":{},"modules/RabbitModule.html":{}}}],["mit",{"_index":2112,"title":{},"body":{"properties.html":{}}}],["mm",{"_index":389,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/PassportClientSearchDTO.html":{}}}],["mobile",{"_index":977,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["mock",{"_index":2202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockcontext",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockcreatelog",{"_index":1385,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":69,"title":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/PromModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/PromModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["modules",{"_index":71,"title":{"modules.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/PromModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"modules.html":{},"overview.html":{}}}],["monetary",{"_index":303,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"interfaces/IBalanceClient.html":{},"injectables/SearchClientsService.html":{}}}],["monetary.dto",{"_index":312,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{}}}],["monetary.interface",{"_index":901,"title":{},"body":{"interfaces/IBalanceClient.html":{}}}],["monetary.name",{"_index":1682,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["monetaryclientsearchdto",{"_index":306,"title":{"classes/MonetaryClientSearchDTO.html":{}},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/MonetaryClientSearchDTO.html":{}}}],["month",{"_index":2189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msisdn",{"_index":340,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/ICategory.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["msisdn.replace(/%/g",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msisdncategory",{"_index":1408,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{},"miscellaneous/enumerations.html":{}}}],["msisdndto",{"_index":339,"title":{"classes/MsisdnDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdnfilterdto",{"_index":1406,"title":{"classes/MsisdnFilterDTO.html":{}},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{}}}],["msisdns",{"_index":352,"title":{},"body":{"classes/CategoryDto.html":{},"modules/GqlModule.html":{},"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns.module.ts",{"_index":1759,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{}}}],["msisdns.resolver",{"_index":1761,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{}}}],["msisdns.resolver.ts",{"_index":1768,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["msisdns.resolver.ts:22",{"_index":1770,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["msisdns.resolver.ts:30",{"_index":1772,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["msisdns.service",{"_index":1760,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["msisdns.service.ts",{"_index":1785,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["msisdns.service.ts:14",{"_index":1787,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["msisdns.service.ts:142",{"_index":1789,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["msisdns.service.ts:33",{"_index":1799,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["msisdns.service.ts:60",{"_index":1797,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["msisdns.service.ts:92",{"_index":1801,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["msisdns/payload.interface.ts",{"_index":1093,"title":{},"body":{"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{}}}],["msisdns/response.dto.ts",{"_index":322,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns/response.dto.ts:122",{"_index":1784,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResponseDto.html":{}}}],["msisdns/response.dto.ts:137",{"_index":1870,"title":{},"body":{"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns/response.dto.ts:14",{"_index":1843,"title":{},"body":{"classes/StateDto.html":{}}}],["msisdns/response.dto.ts:143",{"_index":1867,"title":{},"body":{"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns/response.dto.ts:146",{"_index":1868,"title":{},"body":{"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns/response.dto.ts:149",{"_index":1869,"title":{},"body":{"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns/response.dto.ts:155",{"_index":1866,"title":{},"body":{"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns/response.dto.ts:158",{"_index":1865,"title":{},"body":{"classes/UnlinkedMsisdnsDto.html":{}}}],["msisdns/response.dto.ts:17",{"_index":1844,"title":{},"body":{"classes/StateDto.html":{}}}],["msisdns/response.dto.ts:185",{"_index":1750,"title":{},"body":{"classes/SearchUnlinkedMsisdnsDTO.html":{}}}],["msisdns/response.dto.ts:188",{"_index":1751,"title":{},"body":{"classes/SearchUnlinkedMsisdnsDTO.html":{}}}],["msisdns/response.dto.ts:20",{"_index":1842,"title":{},"body":{"classes/StateDto.html":{}}}],["msisdns/response.dto.ts:35",{"_index":325,"title":{},"body":{"classes/CategoryDto.html":{}}}],["msisdns/response.dto.ts:38",{"_index":324,"title":{},"body":{"classes/CategoryDto.html":{}}}],["msisdns/response.dto.ts:52",{"_index":1532,"title":{},"body":{"classes/RegionDto.html":{}}}],["msisdns/response.dto.ts:55",{"_index":1531,"title":{},"body":{"classes/RegionDto.html":{}}}],["msisdns/response.dto.ts:71",{"_index":1403,"title":{},"body":{"classes/MsisdnDto.html":{}}}],["msisdns/response.dto.ts:74",{"_index":1404,"title":{},"body":{"classes/MsisdnDto.html":{}}}],["msisdns/response.dto.ts:80",{"_index":1402,"title":{},"body":{"classes/MsisdnDto.html":{}}}],["msisdns/response.dto.ts:83",{"_index":1405,"title":{},"body":{"classes/MsisdnDto.html":{}}}],["msisdns/response.dto.ts:86",{"_index":1401,"title":{},"body":{"classes/MsisdnDto.html":{}}}],["msisdns/response.dto.ts:89",{"_index":1400,"title":{},"body":{"classes/MsisdnDto.html":{}}}],["msisdns/response.interface.ts",{"_index":908,"title":{},"body":{"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts",{"_index":1407,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:100",{"_index":1410,"title":{},"body":{"classes/MsisdnFilterDTO.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:107",{"_index":1412,"title":{},"body":{"classes/MsisdnFilterDTO.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:32",{"_index":1766,"title":{},"body":{"classes/SearchUnlinkedMsisdnsQueryDto.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:44",{"_index":1767,"title":{},"body":{"classes/SearchUnlinkedMsisdnsQueryDto.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:56",{"_index":1762,"title":{},"body":{"classes/SearchUnlinkedMsisdnsQueryDto.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:69",{"_index":1841,"title":{},"body":{"classes/SortInputDTO.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:75",{"_index":1838,"title":{},"body":{"classes/SortInputDTO.html":{}}}],["msisdns/src/lib/dto/payload.dto.ts:90",{"_index":1415,"title":{},"body":{"classes/MsisdnFilterDTO.html":{}}}],["msisdns/src/lib/search",{"_index":1758,"title":{},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["msisdns?msisdn=${escapepercent(msisdn",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msisdnstatus",{"_index":1413,"title":{},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{},"miscellaneous/enumerations.html":{}}}],["mustconditions",{"_index":1221,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["mustconditions.push",{"_index":1223,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["name",{"_index":19,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IGenderClient.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"entities/Journal.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.interface",{"_index":941,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["nameclientsearchdto",{"_index":404,"title":{"classes/NameClientSearchDTO.html":{}},"body":{"classes/ClientDataDTO.html":{},"classes/NameClientSearchDTO.html":{}}}],["namestr",{"_index":990,"title":{},"body":{"interfaces/IContractClient.html":{}}}],["nestinterceptor",{"_index":186,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["nestjs",{"_index":827,"title":{},"body":{"classes/ErrorFilter.html":{},"classes/PaginationDTO.html":{},"modules/PromModule.html":{},"modules/RabbitModule.html":{},"dependencies.html":{}}}],["nestjs/apollo",{"_index":642,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":88,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"dependencies.html":{}}}],["nestjs/class",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BrokerMessage.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/ErrorFilter.html":{},"modules/GqlModule.html":{},"interfaces/IRequestParams.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"injectables/LogsAndJournalsService.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"controllers/UptimeController.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":91,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":657,"title":{},"body":{"modules/CoreModule.html":{},"modules/GqlModule.html":{},"dependencies.html":{}}}],["nestjs/elasticsearch",{"_index":1156,"title":{},"body":{"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":311,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":318,"title":{},"body":{"controllers/BrokerMessage.html":{},"controllers/DLMessagePattern.html":{},"controllers/JournalizationController.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":1154,"title":{},"body":{"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"modules/JournalizationModule.html":{},"dependencies.html":{}}}],["nestloggerservice",{"_index":233,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["never",{"_index":966,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["new",{"_index":52,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/AppLoggerLoki.html":{},"controllers/BrokerMessage.html":{},"classes/ClientResolver.html":{},"modules/CoreModule.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"modules/RabbitModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":182,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["next.handle",{"_index":195,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["nn",{"_index":382,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"miscellaneous/typealiases.html":{}}}],["no_disconnect",{"_index":1971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["noack",{"_index":1526,"title":{},"body":{"modules/RabbitModule.html":{}}}],["node",{"_index":251,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"modules/JournalizatingModule.html":{}}}],["node_env",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs.errnoexception).code",{"_index":175,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["normalizeclient",{"_index":512,"title":{},"body":{"injectables/ClientService.html":{},"injectables/SearchClientsService.html":{}}}],["normalizeclient(clients",{"_index":1661,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["normalizeclient(payload",{"_index":537,"title":{},"body":{"injectables/ClientService.html":{}}}],["normalizeddata",{"_index":1778,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["normalizedmsisdns",{"_index":1786,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["normalizedmsisdns(payload",{"_index":1796,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["not_sent",{"_index":527,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["notactivatedesia",{"_index":2016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification_email_new_user",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["now",{"_index":1121,"title":{},"body":{"entities/Journal.html":{},"injectables/JournalizatingService.html":{}}}],["null",{"_index":142,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/AppLoggerLoki.html":{},"classes/CategoryDto.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"interfaces/IBalanceClient.html":{},"interfaces/ICategory.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"entities/Journal.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"injectables/KeycloakService.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnDto.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":341,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/variables.html":{}}}],["numa",{"_index":1824,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["numb",{"_index":1826,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["number",{"_index":106,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"modules/KeycloakModule.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/PaginationDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"classes/RegionDto.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(client.subscribers[0].additionalphonenumber",{"_index":1691,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["number(client.subscribers[0].equipment.iccid",{"_index":1694,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["number(client.subscribers[0].msisdn",{"_index":1685,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["nx",{"_index":2093,"title":{},"body":{"index.html":{}}}],["o",{"_index":2057,"title":{},"body":{"index.html":{}}}],["object",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["object.assign(await",{"_index":1276,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["objecttype",{"_index":309,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/NameClientSearchDTO.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["observable",{"_index":185,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["occupied",{"_index":2005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["onconnectionerror",{"_index":270,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["opensearch",{"_index":238,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"dependencies.html":{}}}],["optional",{"_index":21,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IError.html":{},"interfaces/IJournal.html":{},"interfaces/IMsisdn.html":{},"interfaces/ISearchJournal.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/functions.html":{}}}],["optionalproperties",{"_index":922,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["optionalproperty.interface",{"_index":942,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["optionalpropertyname",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":1521,"title":{},"body":{"modules/RabbitModule.html":{}}}],["orgname",{"_index":967,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["origin",{"_index":665,"title":{},"body":{"modules/CoreModule.html":{}}}],["other/api",{"_index":150,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["other/clients.dto",{"_index":1643,"title":{},"body":{"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{}}}],["other/searchareas.dto",{"_index":1593,"title":{},"body":{"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{}}}],["other/static.interface",{"_index":148,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["override",{"_index":365,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["overview",{"_index":2102,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1493,"title":{},"body":{"injectables/RabbitMQService.html":{},"index.html":{}}}],["p2slzs4okqixrgkq83tbjj18tn4vymhy_p50lvldvtb6aa",{"_index":2201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":1874,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1444,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["paginatedresponsetype",{"_index":331,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/functions.html":{}}}],["paginatedresponsetype(classref",{"_index":2043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paginatedresponsetype(clientdatadto",{"_index":468,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{}}}],["paginatedresponsetypeclass",{"_index":2046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagination",{"_index":1355,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["pagination.page",{"_index":1375,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["pagination.perpage",{"_index":1376,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["paginationdto",{"_index":1352,"title":{"classes/PaginationDTO.html":{}},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/PaginationDTO.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["paginationpage",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginationperpage",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":114,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/KeycloakModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["param.id",{"_index":568,"title":{},"body":{"injectables/ClientService.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnDto.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1059,"title":{},"body":{"interfaces/IRelationClient.html":{}}}],["parseint((a.passport.serialnumber",{"_index":1712,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["parseint((b.passport.serialnumber",{"_index":1714,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["parseint(valuea",{"_index":1825,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["parseint(valueb",{"_index":1827,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["pass",{"_index":615,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["passport",{"_index":379,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["passport.dto",{"_index":400,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["passport.serialnumber",{"_index":451,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{}}}],["passport.slice(0",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport.slice(4",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passportclientsearchdto",{"_index":383,"title":{"classes/PassportClientSearchDTO.html":{}},"body":{"classes/ClientDataDTO.html":{},"classes/PassportClientSearchDTO.html":{}}}],["passportrequestparam",{"_index":566,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportrequestparam.value",{"_index":573,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportresultparam",{"_index":571,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportresultparam?.value",{"_index":581,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationdateparam",{"_index":569,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationdateparam?.value",{"_index":580,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus",{"_index":526,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["passportverificationstatus.awaiting_verification",{"_index":574,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus.failed_to_send",{"_index":578,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus.info_not_found",{"_index":582,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus.invalid",{"_index":583,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus.not_sent",{"_index":565,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus.request_created",{"_index":577,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus.under_review",{"_index":579,"title":{},"body":{"injectables/ClientService.html":{}}}],["passportverificationstatus.valid",{"_index":584,"title":{},"body":{"injectables/ClientService.html":{}}}],["password",{"_index":258,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"modules/CoreModule.html":{}}}],["path",{"_index":845,"title":{},"body":{"classes/ErrorFilter.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":140,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["payload.access_token",{"_index":173,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["payload.admin",{"_index":1225,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["payload.clientname",{"_index":544,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.contract.inn",{"_index":546,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.dataid",{"_index":1230,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["payload.documents",{"_index":548,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.email",{"_index":550,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.equipment.iccid",{"_index":557,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.equipment.type",{"_index":559,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.find",{"_index":570,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.find((param",{"_index":567,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.fromdate",{"_index":1202,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["payload.input",{"_index":1073,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["payload.input.tostring",{"_index":1547,"title":{},"body":{"injectables/SearchApimeService.html":{}}}],["payload.input.tostring().length",{"_index":1676,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["payload.juridicaltype.name",{"_index":547,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.service",{"_index":1222,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["payload.state",{"_index":554,"title":{},"body":{"injectables/ClientService.html":{}}}],["payload.title",{"_index":1229,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["payload.todate",{"_index":1207,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["payload.tokeninput.access_token",{"_index":1069,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["payload.tokeninput.traceid?.traceid",{"_index":1068,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["payload.traceid?.traceid",{"_index":174,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["payment_organizations",{"_index":1970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymenttype",{"_index":923,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["paymenttype.interface",{"_index":943,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["perpage",{"_index":1445,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["persistedqueries",{"_index":666,"title":{},"body":{"modules/CoreModule.html":{}}}],["pg",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["pg_db",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg_log",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg_pass",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg_port",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg_user",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":56,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"interfaces/IContactClient.html":{},"miscellaneous/variables.html":{}}}],["phone_history",{"_index":1054,"title":{},"body":{"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{}}}],["pingtimeout",{"_index":1164,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["platinum_1",{"_index":1980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["platinum_2",{"_index":1983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["platinum_3",{"_index":1989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["platinum_4",{"_index":1990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playground",{"_index":661,"title":{},"body":{"modules/CoreModule.html":{}}}],["playground_gql",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugin",{"_index":1470,"title":{},"body":{"modules/PromModule.html":{}}}],["plugins",{"_index":669,"title":{},"body":{"modules/CoreModule.html":{}}}],["ponomarevdaniil",{"_index":2118,"title":{},"body":{"properties.html":{}}}],["port",{"_index":596,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{}}}],["port_gql",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":879,"title":{},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"injectables/SearchApimeService-1.html":{}}}],["postgres",{"_index":597,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["postgresql",{"_index":604,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["postsearchbody",{"_index":1460,"title":{"interfaces/PostSearchBody.html":{}},"body":{"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{}}}],["postsearchresult",{"_index":1463,"title":{"interfaces/PostSearchResult.html":{}},"body":{"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{}}}],["prefix",{"_index":1283,"title":{},"body":{"controllers/KeycloakController.html":{},"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/address/citytype",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/address/country",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/address/districttype",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/address/regiontype",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/address/streettype",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/client/addresstype",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/client/billingdeliverytype",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/client/clienttype",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/client/documenttype",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_dictionary}/client/juridicaltype",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search}/clients/account",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search}/clients/additional",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search}/clients/contract",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search}/clients/document",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search}/clients/equipment",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search}/clients/msisdn",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1_search}/clients/name",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix.api_v1}/client/${id",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prepared",{"_index":1974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prestige",{"_index":1978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["primarygeneratedcolumn",{"_index":1125,"title":{},"body":{"entities/Journal.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1117,"title":{},"body":{"entities/Journal.html":{}}}],["private",{"_index":42,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeTokenInterceptor.html":{},"injectables/AppLoggerLoki.html":{},"controllers/BrokerMessage.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["privateeenterprise",{"_index":1958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process.env['loki_host",{"_index":264,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["process.env['opensearch_host",{"_index":252,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["process.env['opensearch_password",{"_index":259,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["process.env['opensearch_username",{"_index":256,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["process.uptime",{"_index":700,"title":{},"body":{"classes/CoreResolver.html":{},"controllers/UptimeController.html":{}}}],["processes",{"_index":1668,"title":{},"body":{"injectables/SearchClientsService.html":{},"miscellaneous/enumerations.html":{}}}],["processingstatusparam",{"_index":572,"title":{},"body":{"injectables/ClientService.html":{}}}],["processingstatusparam?.value",{"_index":575,"title":{},"body":{"injectables/ClientService.html":{}}}],["production",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/webclients",{"_index":2115,"title":{},"body":{"properties.html":{}}}],["prom",{"_index":1474,"title":{},"body":{"modules/PromModule.html":{},"dependencies.html":{}}}],["prombundle",{"_index":2218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promclient",{"_index":2217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promclient.counter",{"_index":2212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prometheus",{"_index":1465,"title":{},"body":{"modules/PromModule.html":{},"dependencies.html":{}}}],["prometheusmodule",{"_index":1466,"title":{},"body":{"modules/PromModule.html":{}}}],["prometheusmodule.register",{"_index":1475,"title":{},"body":{"modules/PromModule.html":{}}}],["promise",{"_index":27,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1806,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["prommodule",{"_index":653,"title":{"modules/PromModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/PromModule.html":{},"modules.html":{}}}],["properties",{"_index":101,"title":{"properties.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/AppLoggerLoki.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"classes/RegionDto.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"properties.html":{}}}],["property",{"_index":102,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/KeycloakModule.html":{}}}],["property.type.ts",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["protocol/openid",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":692,"title":{},"body":{"modules/CoreModule.html":{},"modules/GqlModule.html":{},"modules/PromModule.html":{}}}],["providers",{"_index":76,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/PromModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["pull",{"_index":2085,"title":{},"body":{"index.html":{}}}],["query",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ClientResolver.html":{},"classes/CoreResolver.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/JournalizatingService.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["query(undefined",{"_index":489,"title":{},"body":{"classes/ClientResolver.html":{},"classes/CoreResolver.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["queue",{"_index":1524,"title":{},"body":{"modules/RabbitModule.html":{}}}],["queueoptions",{"_index":1527,"title":{},"body":{"modules/RabbitModule.html":{}}}],["queues",{"_index":607,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["r",{"_index":1495,"title":{},"body":{"injectables/RabbitMQService.html":{},"index.html":{}}}],["rabbit.service",{"_index":1514,"title":{},"body":{"modules/RabbitModule.html":{}}}],["rabbitmodule",{"_index":476,"title":{"modules/RabbitModule.html":{}},"body":{"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"modules.html":{},"overview.html":{}}}],["rabbitmq",{"_index":691,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["rabbitmqservice",{"_index":514,"title":{"injectables/RabbitMQService.html":{}},"body":{"injectables/ClientService.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"overview.html":{}}}],["rabbitservice",{"_index":518,"title":{},"body":{"injectables/ClientService.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["range",{"_index":1226,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["readonly",{"_index":43,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["real",{"_index":1550,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["realm",{"_index":623,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["record",{"_index":1003,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["redis",{"_index":598,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["redis_host",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_pass",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_port",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rediscache",{"_index":643,"title":{},"body":{"modules/CoreModule.html":{}}}],["redisconfig",{"_index":676,"title":{},"body":{"modules/CoreModule.html":{}}}],["redisconfig.host",{"_index":684,"title":{},"body":{"modules/CoreModule.html":{}}}],["redisconfig.pass",{"_index":686,"title":{},"body":{"modules/CoreModule.html":{}}}],["redisconfig.port",{"_index":685,"title":{},"body":{"modules/CoreModule.html":{}}}],["reflect",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":345,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"interfaces/ICategory.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/enumerations.html":{}}}],["regiondto",{"_index":338,"title":{"classes/RegionDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["regionid",{"_index":1097,"title":{},"body":{"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"classes/MsisdnFilterDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{},"miscellaneous/variables.html":{}}}],["regionid.length",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regionid=${encodeuricomponent(id",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regiontype",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regiontypes",{"_index":1056,"title":{},"body":{"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{}}}],["register",{"_index":1473,"title":{},"body":{"modules/PromModule.html":{}}}],["registred",{"_index":1005,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["registreddate",{"_index":1247,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["regular",{"_index":1976,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["regular_gn",{"_index":1994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejectunauthorized",{"_index":125,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/RabbitModule.html":{}}}],["relation",{"_index":924,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["relation.interface",{"_index":944,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["remarks",{"_index":1505,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["replace(/\\s/g",{"_index":1713,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["replacetimestamp",{"_index":267,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["repository",{"_index":1174,"title":{},"body":{"injectables/JournalizatingService.html":{},"properties.html":{}}}],["req",{"_index":49,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"guards/KeycloakTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["req.url",{"_index":1330,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["req.user",{"_index":50,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["req.user.phone",{"_index":57,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["request",{"_index":191,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{},"classes/ErrorFilter.html":{},"injectables/SearchApimeService-1.html":{}}}],["request.headers['authorization",{"_index":193,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["request.method",{"_index":847,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["request.url",{"_index":846,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["request_created",{"_index":529,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["requesthandler",{"_index":1066,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["requesthandler(payload",{"_index":1563,"title":{},"body":{"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["requests",{"_index":2215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requesttimeout",{"_index":1162,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["reserve",{"_index":1979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reserved",{"_index":2003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reserved_for_sim",{"_index":2007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}],["resolver",{"_index":494,"title":{},"body":{"classes/ClientResolver.html":{},"classes/CoreResolver.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/SearchAreasResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["response",{"_index":153,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ErrorFilter.html":{},"interfaces/IRequestParams.html":{},"injectables/JournalizatingService.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["response.body.hits?.hits",{"_index":1243,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["response.data",{"_index":161,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["response.data.msisdns",{"_index":1561,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["response.data.msisdns.length",{"_index":1560,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["response.status(status).json",{"_index":842,"title":{},"body":{"classes/ErrorFilter.html":{}}}],["result",{"_index":761,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{}}}],["results",{"_index":67,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":61,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"interfaces/IRequestParams.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"controllers/UptimeController.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/ErrorFilter.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"controllers/UptimeController.html":{},"miscellaneous/functions.html":{}}}],["rmq",{"_index":269,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["rmq_queue_data_loader",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rmq_queue_gql",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rmq_queue_journalization",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rmq_url",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rmq_vhost",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roaming_partner",{"_index":1964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":1034,"title":{},"body":{"interfaces/IEnum.html":{}}}],["run",{"_index":2087,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":187,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{},"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{},"dependencies.html":{}}}],["s",{"_index":2062,"title":{},"body":{"index.html":{}}}],["sanitizedinput",{"_index":1599,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["sanitizedinput.length",{"_index":1601,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["schema.gql",{"_index":688,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["search",{"_index":1591,"title":{},"body":{"classes/SearchAreasResolver.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["search/search",{"_index":94,"title":{},"body":{"modules/ApimeIntegrationModule.html":{}}}],["search_client_account_number",{"_index":721,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_by_account_number",{"_index":2204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search_client_by_contract_number",{"_index":2205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search_client_by_dgn",{"_index":2206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search_client_by_fio",{"_index":733,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_by_icc",{"_index":2207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search_client_by_msisdn",{"_index":2208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search_client_by_passport",{"_index":2209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search_client_by_processes",{"_index":1671,"title":{},"body":{"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_by_services",{"_index":1672,"title":{},"body":{"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_by_subscriber_number",{"_index":2210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search_client_by_tariffs",{"_index":1673,"title":{},"body":{"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_by_title",{"_index":742,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_contract_number",{"_index":724,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_dgn",{"_index":727,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_icc",{"_index":745,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_msisdn",{"_index":730,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_passport",{"_index":736,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_client_subscriber_number",{"_index":739,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["search_unlinked_msisdns",{"_index":749,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"miscellaneous/variables.html":{}}}],["searchaddresscitytype",{"_index":1089,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchaddresscitytype(payload",{"_index":1724,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchaddresscountry",{"_index":1083,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchaddresscountry(payload",{"_index":1726,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchaddressdistricttype",{"_index":1087,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchaddressdistricttype(payload",{"_index":1728,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchaddressregiontype",{"_index":1085,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchaddressregiontype(payload",{"_index":1730,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchaddressstreettype",{"_index":1091,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchaddressstreettype(payload",{"_index":1732,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchapimeservice",{"_index":81,"title":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}},"body":{"modules/ApimeIntegrationModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"overview.html":{}}}],["searchareaenum",{"_index":448,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["searchareaenum.account_number",{"_index":1615,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.contract_number",{"_index":1614,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.dgn",{"_index":1618,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.fio",{"_index":1607,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.icc",{"_index":1619,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.msisdn",{"_index":1616,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.passport",{"_index":1613,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.processes",{"_index":1609,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.services",{"_index":1610,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.subscriber_number",{"_index":1617,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.tariffs",{"_index":1611,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searchareaenum.title",{"_index":1608,"title":{},"body":{"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/variables.html":{}}}],["searcharealabels",{"_index":1598,"title":{},"body":{"injectables/SearchAreasService.html":{},"miscellaneous/variables.html":{}}}],["searcharealabels[area",{"_index":1623,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["searchareasdto",{"_index":859,"title":{"classes/SearchAreasDTO.html":{}},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{}}}],["searchareasresolver",{"_index":1581,"title":{"classes/SearchAreasResolver.html":{}},"body":{"classes/SearchAreasResolver.html":{},"modules/SearchClientsModule.html":{}}}],["searchareasservice",{"_index":1586,"title":{"injectables/SearchAreasService.html":{}},"body":{"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"overview.html":{}}}],["searchareawithlabeldto",{"_index":858,"title":{"classes/SearchAreaWithLabelDTO.html":{}},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{}}}],["searchclientaddresstype",{"_index":1078,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchclientaddresstype(payload",{"_index":1734,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchclientbillingdeliverytype",{"_index":1081,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchclientbillingdeliverytype(payload",{"_index":1736,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchclientbyaccount",{"_index":704,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbyaccount(payload",{"_index":719,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbycontract",{"_index":705,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbycontract(payload",{"_index":723,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbydgn",{"_index":706,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbydgn(payload",{"_index":726,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbyfio",{"_index":1535,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbyfio(payload",{"_index":1540,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbymsisdn",{"_index":707,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbymsisdn(payload",{"_index":729,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbyname",{"_index":708,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["searchclientbyname(payload",{"_index":732,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["searchclientbypassport",{"_index":709,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbypassport(payload",{"_index":735,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbysubscribernumber",{"_index":710,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbysubscribernumber(payload",{"_index":738,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientbytitle",{"_index":711,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["searchclientbytitle(payload",{"_index":741,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["searchclientdocumenttype",{"_index":1076,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchclientdocumenttype(payload",{"_index":1738,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchclienticc",{"_index":712,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclienticc(payload",{"_index":744,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["searchclientjuridicaltype",{"_index":1070,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchclientjuridicaltype(payload",{"_index":1740,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchclientsbyarea",{"_index":1655,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["searchclientsbyarea(payload",{"_index":1665,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["searchclientsmodule",{"_index":866,"title":{"modules/SearchClientsModule.html":{}},"body":{"modules/GqlModule.html":{},"modules/SearchClientsModule.html":{},"modules.html":{},"overview.html":{}}}],["searchclientsresolver",{"_index":1631,"title":{"classes/SearchClientsResolver.html":{}},"body":{"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{}}}],["searchclientsservice",{"_index":1628,"title":{"injectables/SearchClientsService.html":{}},"body":{"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"overview.html":{}}}],["searchclienttype",{"_index":1074,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchclienttype(payload",{"_index":1742,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["searchdictionaryservice",{"_index":1065,"title":{"injectables/SearchDictionaryService.html":{}},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["searchlogs",{"_index":1172,"title":{},"body":{"injectables/JournalizatingService.html":{},"injectables/LogsAndJournalsService.html":{}}}],["searchlogs(payload",{"_index":1185,"title":{},"body":{"injectables/JournalizatingService.html":{},"injectables/LogsAndJournalsService.html":{}}}],["searchmap",{"_index":1667,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["searchservice",{"_index":1485,"title":{"injectables/SearchService.html":{}},"body":{"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchService.html":{},"overview.html":{}}}],["searchunlinkedmsisdns",{"_index":713,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["searchunlinkedmsisdns(context",{"_index":1771,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["searchunlinkedmsisdns(payload",{"_index":747,"title":{},"body":{"controllers/DLMessagePattern.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["searchunlinkedmsisdnsdto",{"_index":363,"title":{"classes/SearchUnlinkedMsisdnsDTO.html":{}},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["searchunlinkedmsisdnsinput",{"_index":1094,"title":{"interfaces/SearchUnlinkedMsisdnsInput.html":{}},"body":{"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"classes/MsisdnFilterDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInputDTO.html":{}}}],["searchunlinkedmsisdnsmodule",{"_index":867,"title":{"modules/SearchUnlinkedMsisdnsModule.html":{}},"body":{"modules/GqlModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"modules.html":{},"overview.html":{}}}],["searchunlinkedmsisdnsquerydto",{"_index":1422,"title":{"classes/SearchUnlinkedMsisdnsQueryDto.html":{}},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SortInputDTO.html":{}}}],["searchunlinkedmsisdnsresolver",{"_index":1756,"title":{"classes/SearchUnlinkedMsisdnsResolver.html":{}},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"overview.html":{}}}],["searchunlinkedmsisdnsresponsedto",{"_index":351,"title":{"classes/SearchUnlinkedMsisdnsResponseDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["searchunlinkedmsisdnsservice",{"_index":1757,"title":{"injectables/SearchUnlinkedMsisdnsService.html":{}},"body":{"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"overview.html":{}}}],["searchсlientservice/rabbit.search",{"_index":1500,"title":{},"body":{"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{}}}],["segment",{"_index":380,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{}}}],["segmenttype",{"_index":952,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/typealiases.html":{}}}],["self_activation",{"_index":1997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["send",{"_index":1749,"title":{},"body":{"injectables/SearchService.html":{}}}],["sendmessage",{"_index":1496,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["sendmessage(cmd",{"_index":1747,"title":{},"body":{"injectables/SearchService.html":{}}}],["sendmessagesearch",{"_index":1480,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["sendmessagesearch(cmd",{"_index":1492,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["sendtojournalization",{"_index":1481,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["sendtojournalization(payload",{"_index":1497,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["serialnumber",{"_index":980,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/PassportClientSearchDTO.html":{},"injectables/SearchClientsService.html":{}}}],["series",{"_index":803,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":2094,"title":{},"body":{"index.html":{}}}],["server",{"_index":645,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["service",{"_index":785,"title":{},"body":{"injectables/DLService.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"injectables/RabbitMQService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["servicename",{"_index":887,"title":{},"body":{"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["services",{"_index":2020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["setup.ts",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shouldconditions",{"_index":1231,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["shouldconditions.push",{"_index":1232,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["signedat",{"_index":991,"title":{},"body":{"interfaces/IContractClient.html":{}}}],["silver",{"_index":1985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["silver_1",{"_index":1995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["silver_2",{"_index":1996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["silver_gn",{"_index":1991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sim",{"_index":556,"title":{},"body":{"injectables/ClientService.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":1240,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["slicearray",{"_index":1374,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["slicearray.arrayslice",{"_index":1377,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["slicearray.total",{"_index":1378,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["sn",{"_index":329,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/MsisdnDto.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/typealiases.html":{}}}],["sniffonstart",{"_index":1165,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["socketoptions",{"_index":1529,"title":{},"body":{"modules/RabbitModule.html":{}}}],["sort",{"_index":1640,"title":{},"body":{"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["sort(data",{"_index":1800,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["sort.direction",{"_index":1803,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["sort.field",{"_index":1802,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["sort?.direction",{"_index":1816,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["sort?.field",{"_index":1815,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["sortclients",{"_index":1656,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["sortclients(clients",{"_index":1669,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["sorteddata",{"_index":1782,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["sortinput",{"_index":449,"title":{"classes/SortInput.html":{}},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{}}}],["sortinputdto",{"_index":1430,"title":{"classes/SortInputDTO.html":{}},"body":{"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{}}}],["sortorder",{"_index":1393,"title":{},"body":{"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["sortschema",{"_index":671,"title":{},"body":{"modules/CoreModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BalanceClientSearchDTO.html":{},"controllers/BrokerMessage.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"controllers/KeycloakController.html":{},"modules/KeycloakIntegrationModule.html":{},"injectables/KeycloakIntegrationService.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"modules/PromModule.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"controllers/UptimeController.html":{}}}],["src",{"_index":2066,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":689,"title":{},"body":{"modules/CoreModule.html":{},"modules/RabbitModule.html":{}}}],["start",{"_index":2049,"title":{},"body":{"index.html":{}}}],["started",{"_index":2048,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startofday",{"_index":1214,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["startofday.sethours(0",{"_index":1216,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["startofday.toisostring",{"_index":1219,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["stat_id",{"_index":1100,"title":{},"body":{"interfaces/IStateClient.html":{}}}],["state",{"_index":343,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"injectables/ClientService.html":{},"classes/EquipmentClientSearchDTO.html":{},"interfaces/ICategory.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["state.interface",{"_index":945,"title":{},"body":{"interfaces/IClientApiResult.html":{},"interfaces/ISubscriberClient.html":{}}}],["stateclientenum",{"_index":424,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"injectables/SearchClientsService.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["statedto",{"_index":333,"title":{"classes/StateDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["statesubscriber",{"_index":1955,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["statesubscriberargs",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statetype",{"_index":954,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStateClient.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"miscellaneous/typealiases.html":{}}}],["status",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"classes/CategoryDto.html":{},"classes/ErrorFilter.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":843,"title":{},"body":{"classes/ErrorFilter.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["store",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["streettype",{"_index":1104,"title":{},"body":{"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":103,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(date.getdate()).padstart(2",{"_index":2188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(date.getmonth",{"_index":2190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["structured",{"_index":959,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/NameClientSearchDTO.html":{}}}],["structuredclientname.dto",{"_index":1440,"title":{},"body":{"classes/NameClientSearchDTO.html":{}}}],["structurednameclientsearchdto",{"_index":1437,"title":{"classes/StructuredNameClientSearchDTO.html":{}},"body":{"classes/NameClientSearchDTO.html":{},"classes/StructuredNameClientSearchDTO.html":{}}}],["subscriber",{"_index":978,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["subscriber.interface",{"_index":946,"title":{},"body":{"interfaces/IClientApiResult.html":{}}}],["subscriber_number",{"_index":2022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subscriberclientsearchdto",{"_index":407,"title":{"classes/SubscriberClientSearchDTO.html":{}},"body":{"classes/ClientDataDTO.html":{},"classes/SubscriberClientSearchDTO.html":{}}}],["subscriberinformation",{"_index":553,"title":{},"body":{"injectables/ClientService.html":{}}}],["subscribers",{"_index":408,"title":{},"body":{"classes/ClientDataDTO.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["subscriptions",{"_index":681,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["support",{"_index":2097,"title":{},"body":{"modules.html":{}}}],["suspended",{"_index":428,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/SortInput.html":{},"miscellaneous/enumerations.html":{}}}],["sverdlovsk",{"_index":2008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":2098,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":558,"title":{},"body":{"injectables/ClientService.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["switchmap((token",{"_index":189,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["sync",{"_index":618,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["synonymsgroup",{"_index":541,"title":{},"body":{"injectables/ClientService.html":{}}}],["t",{"_index":1038,"title":{},"body":{"interfaces/IEnum.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tariffs",{"_index":2021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tbl.target",{"_index":1278,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["technological",{"_index":1982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["technological_asr",{"_index":1993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["template",{"_index":1504,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["template_client",{"_index":1966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["term",{"_index":1235,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["test",{"_index":1962,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["test').required",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test(sanitizedinput",{"_index":1604,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["test_client",{"_index":1961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text",{"_index":1002,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"classes/JournalsDTO.html":{},"injectables/LogsAndJournalsService.html":{},"miscellaneous/variables.html":{}}}],["this.account",{"_index":415,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.additionalphone",{"_index":413,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.additionalphonenumber",{"_index":1863,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["this.apimeintegrationservice.getapimetoken().pipe",{"_index":188,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["this.apimeintegrationservice.getapimetoken(phone",{"_index":60,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["this.apimeintegrationservice.getclientdata",{"_index":786,"title":{},"body":{"injectables/DLService.html":{}}}],["this.apimeintegrationservice.healthcheck",{"_index":64,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["this.balance",{"_index":411,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.birthdate",{"_index":410,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.calculateesiastatus(payload.optionalproperties",{"_index":552,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.category",{"_index":349,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.categoryname",{"_index":362,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.changedat",{"_index":337,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.clientservice.getclient(tokeninput",{"_index":505,"title":{},"body":{"classes/ClientResolver.html":{}}}],["this.clientservice.normalizeclient(userdata",{"_index":509,"title":{},"body":{"classes/ClientResolver.html":{}}}],["this.comment",{"_index":347,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.configservice.get('keycloak",{"_index":1310,"title":{},"body":{"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{}}}],["this.contractnumber",{"_index":416,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.createindexifnotexists",{"_index":1197,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.createlogdata(data",{"_index":1196,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.date",{"_index":1459,"title":{},"body":{"classes/PassportClientSearchDTO.html":{}}}],["this.datestatus",{"_index":361,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.direction",{"_index":458,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["this.dlservice.getclientdata(tokendata",{"_index":762,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.equipment",{"_index":1862,"title":{},"body":{"classes/SubscriberClientSearchDTO.html":{}}}],["this.esservice.index",{"_index":1199,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.esservice.indices.create",{"_index":1192,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.esservice.indices.exists",{"_index":1190,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.esservice.search",{"_index":1239,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.field",{"_index":457,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{}}}],["this.fio",{"_index":409,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.firstname",{"_index":1851,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["this.httpservice.axiosref.get",{"_index":154,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["this.httpservice.axiosref.post",{"_index":1311,"title":{},"body":{"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{}}}],["this.httpservice.axiosref.post(url",{"_index":1067,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["this.iccid",{"_index":414,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/EquipmentClientSearchDTO.html":{}}}],["this.id",{"_index":335,"title":{},"body":{"classes/CategoryDto.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.imsi",{"_index":824,"title":{},"body":{"classes/EquipmentClientSearchDTO.html":{}}}],["this.input",{"_index":861,"title":{},"body":{"classes/GetSearchAreasInputDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{}}}],["this.issuedate",{"_index":812,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["this.journalizatingservice.createlog(data",{"_index":1266,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["this.journalizatingservice.searchlogs(payload",{"_index":1267,"title":{},"body":{"controllers/JournalizationController.html":{}}}],["this.journalizationclient.send",{"_index":1507,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["this.journals",{"_index":1144,"title":{},"body":{"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{}}}],["this.juridicaltype",{"_index":418,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.keycloakconfig",{"_index":1309,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloakservice.introspecttoken(access_token",{"_index":1335,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["this.lastname",{"_index":1853,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["this.logger",{"_index":277,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.logger.debug(message",{"_index":284,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.logger.error(message",{"_index":281,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.logger.info(message",{"_index":280,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.logger.warn(message",{"_index":282,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.loggerservice.logging(apimeintegrationservice",{"_index":163,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["this.logsadminrepo.find",{"_index":1201,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.logsadminrepo.save(payload",{"_index":1198,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["this.logsadminservice.createlog",{"_index":540,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.logsadminservice.searchlogs(datapayload",{"_index":1365,"title":{},"body":{"classes/LogsAndJournalsResolver.html":{}}}],["this.lokilogger",{"_index":239,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.lokilogger.error",{"_index":274,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.lokilogger.info(message",{"_index":273,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.lokilogger.warn(message",{"_index":275,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["this.middlename",{"_index":1852,"title":{},"body":{"classes/StructuredNameClientSearchDTO.html":{}}}],["this.monetary",{"_index":314,"title":{},"body":{"classes/BalanceClientSearchDTO.html":{}}}],["this.msisdn",{"_index":346,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.msisdns",{"_index":354,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.name",{"_index":336,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.number",{"_index":811,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["this.page",{"_index":1452,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["this.passport",{"_index":412,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.perpage",{"_index":1453,"title":{},"body":{"classes/PaginationDTO.html":{}}}],["this.rabbitmqservice.emittojournalization(create_log",{"_index":1396,"title":{},"body":{"injectables/LogsAndJournalsService.html":{}}}],["this.rabbitmqservice.sendtojournalization(payload",{"_index":1394,"title":{},"body":{"injectables/LogsAndJournalsService.html":{}}}],["this.rabbitservice.getclient(payload",{"_index":539,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.rabbitservice.sendmessagesearch",{"_index":1675,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["this.rabbitservice.sendmessagesearch(search_unlinked_msisdns",{"_index":1805,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["this.rabbitservice.sendmessagesearch(searchmap[area",{"_index":1677,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["this.region",{"_index":350,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.requesthandler",{"_index":1071,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["this.searchapimeservice.searchclientbyaccount(payload",{"_index":773,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchclientbycontract",{"_index":775,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchclientbydgn(payload",{"_index":777,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchclientbyfio(payload",{"_index":763,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchclientbymsisdn(payload",{"_index":769,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchclientbypassport",{"_index":771,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchclientbysubscribernumber",{"_index":767,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchclienticc(payload",{"_index":779,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchapimeservice.searchunlinkedmsisdns(payload",{"_index":780,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["this.searchareasservice.getsearchareas(input",{"_index":1594,"title":{},"body":{"classes/SearchAreasResolver.html":{}}}],["this.searchclientsservice.filterclients",{"_index":1651,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["this.searchclientsservice.normalizeclient(clientssearched.clients",{"_index":1650,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["this.searchclientsservice.searchclientsbyarea(payload",{"_index":1647,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["this.searchclientsservice.sortclients",{"_index":1652,"title":{},"body":{"classes/SearchClientsResolver.html":{}}}],["this.searchservice.sendmessage",{"_index":1506,"title":{},"body":{"injectables/RabbitMQService.html":{}}}],["this.searchunlinkedmsisdnsservice.filter(normalizeddata",{"_index":1781,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["this.searchunlinkedmsisdnsservice.normalizedmsisdns(datasearch",{"_index":1779,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["this.searchunlinkedmsisdnsservice.searchunlinkedmsisdns(payload",{"_index":1775,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["this.searchunlinkedmsisdnsservice.sort(filtereddatasearch",{"_index":1783,"title":{},"body":{"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["this.segment",{"_index":417,"title":{},"body":{"classes/ClientDataDTO.html":{}}}],["this.serialnumber",{"_index":1458,"title":{},"body":{"classes/PassportClientSearchDTO.html":{}}}],["this.series",{"_index":810,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{}}}],["this.state",{"_index":348,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.status",{"_index":360,"title":{},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["this.structured",{"_index":1441,"title":{},"body":{"classes/NameClientSearchDTO.html":{}}}],["this.total",{"_index":1145,"title":{},"body":{"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{}}}],["this.type",{"_index":809,"title":{},"body":{"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{}}}],["this.unstructured",{"_index":1442,"title":{},"body":{"classes/NameClientSearchDTO.html":{}}}],["this.webclientsclient.send",{"_index":1503,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["throw",{"_index":51,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"classes/ClientResolver.html":{},"modules/CoreModule.html":{},"modules/JournalizatingModule.html":{},"modules/KeycloakModule.html":{},"guards/KeycloakTokenGuard.html":{},"modules/RabbitModule.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["throws",{"_index":115,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["tilida",{"_index":1968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["timeout",{"_index":107,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/KeycloakModule.html":{}}}],["timestamp",{"_index":848,"title":{},"body":{"classes/ErrorFilter.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{}}}],["timestamptz",{"_index":1120,"title":{},"body":{"entities/Journal.html":{}}}],["title",{"_index":1013,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"injectables/JournalizatingService.html":{},"classes/LogsAndJournalsResolver.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/enumerations.html":{}}}],["todate",{"_index":1012,"title":{},"body":{"interfaces/ICreateJournal.html":{},"interfaces/IJournal.html":{},"interfaces/ISearchJournal.html":{},"classes/LogsAndJournalsResolver.html":{}}}],["todateobj",{"_index":1208,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["todateobj.sethours(23",{"_index":1210,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["todateobj.toisostring",{"_index":1213,"title":{},"body":{"injectables/JournalizatingService.html":{}}}],["todo",{"_index":690,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"classes/MsisdnFilterDTO.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"miscellaneous/variables.html":{}}}],["todo'})@isoptional()@isarray()@arraynotempty({message",{"_index":1763,"title":{},"body":{"classes/SearchUnlinkedMsisdnsQueryDto.html":{}}}],["token",{"_index":190,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["token.access_token",{"_index":194,"title":{},"body":{"injectables/ApimeTokenInterceptor.html":{}}}],["token.replace('bearer",{"_index":1334,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["tokendata",{"_index":718,"title":{},"body":{"controllers/DLMessagePattern.html":{},"guards/KeycloakTokenGuard.html":{}}}],["tokendata.active",{"_index":1336,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["tokenguard.guard",{"_index":1297,"title":{},"body":{"modules/KeycloakModule.html":{}}}],["tokeninput",{"_index":500,"title":{},"body":{"classes/ClientResolver.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/SearchClientsResolver.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["tood",{"_index":765,"title":{},"body":{"controllers/DLMessagePattern.html":{}}}],["tostring",{"_index":1314,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["total",{"_index":367,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/JournalDTO.html":{},"classes/JournalsDTO.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/MsisdnDto.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"classes/RegionDto.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/SortInput.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["trace",{"_index":220,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["trace_id",{"_index":157,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["traceid",{"_index":503,"title":{},"body":{"classes/ClientResolver.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/ITraceId.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["tracing",{"_index":1472,"title":{},"body":{"modules/PromModule.html":{},"dependencies.html":{}}}],["tracing_plugin_key",{"_index":654,"title":{},"body":{"modules/CoreModule.html":{},"modules/PromModule.html":{},"miscellaneous/variables.html":{}}}],["tracingplugin",{"_index":674,"title":{},"body":{"modules/CoreModule.html":{}}}],["transformer",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":683,"title":{},"body":{"modules/CoreModule.html":{},"modules/RabbitModule.html":{}}}],["transport.rmq",{"_index":1520,"title":{},"body":{"modules/RabbitModule.html":{}}}],["transports",{"_index":241,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["trash",{"_index":2002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["true",{"_index":62,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/AppLoggerLoki.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"interfaces/HttpError.html":{},"interfaces/IError.html":{},"interfaces/ILogger.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"modules/JournalizationModule.html":{},"classes/JournalsDTO.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/PassportClientSearchDTO.html":{},"modules/RabbitModule.html":{},"classes/RegionDto.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":152,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/KeycloakService.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["ts",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["tsconfig.compodoc.json",{"_index":2064,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":667,"title":{},"body":{"modules/CoreModule.html":{}}}],["type",{"_index":20,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"injectables/ApimeTokenInterceptor.html":{},"controllers/AppController.html":{},"injectables/AppLoggerLoki.html":{},"injectables/AppService.html":{},"classes/BalanceClientSearchDTO.html":{},"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"classes/ClientFilterInput.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"classes/DocumentClientSearchDTO.html":{},"classes/EquipmentClientSearchDTO.html":{},"classes/ErrorFilter.html":{},"classes/GetSearchAreasInputDTO.html":{},"interfaces/HttpError.html":{},"interfaces/IAccessTokenInput.html":{},"interfaces/IAddressType.html":{},"interfaces/IAddressTypesResponse.html":{},"interfaces/IApiMeHealth.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IBillingDeliveryType.html":{},"interfaces/IBillingDeliveryTypesResponse.html":{},"interfaces/ICategory.html":{},"interfaces/ICityType.html":{},"interfaces/ICityTypesResponse.html":{},"interfaces/IClientApiResult.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IClientType.html":{},"interfaces/IClientTypesResponse.html":{},"interfaces/IContactClient.html":{},"interfaces/IContractClient.html":{},"interfaces/ICountryType.html":{},"interfaces/ICountryTypesResponse.html":{},"interfaces/ICreateJournal.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClient.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IDocumentType.html":{},"interfaces/IDocumentTypeClient.html":{},"interfaces/IDocumentTypesResponse.html":{},"interfaces/IEnum.html":{},"interfaces/IEquipmentClient.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/IError.html":{},"interfaces/IGenderClient.html":{},"interfaces/IGqlError.html":{},"interfaces/IJournal.html":{},"interfaces/IJuridicalType.html":{},"interfaces/IJuridicalTypesResponse.html":{},"interfaces/ILogger.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IMsisdn.html":{},"interfaces/INameClient.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IPaymentTypeClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegion.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/IRelationClient.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/ISearchJournal.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClient.html":{},"interfaces/ISubscriberClientSearch.html":{},"interfaces/ITraceId.html":{},"interfaces/IValidationError.html":{},"interfaces/IValidationVariables.html":{},"entities/Journal.html":{},"classes/JournalDTO.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"classes/JournalsDTO.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MonetaryClientSearchDTO.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/NameClientSearchDTO.html":{},"classes/PaginationDTO.html":{},"classes/PassportClientSearchDTO.html":{},"interfaces/PostSearchBody.html":{},"interfaces/PostSearchResult.html":{},"injectables/RabbitMQService.html":{},"classes/RegionDto.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchAreasResolver.html":{},"injectables/SearchAreasService.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"injectables/SearchService.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/StructuredNameClientSearchDTO.html":{},"classes/SubscriberClientSearchDTO.html":{},"classes/UnlinkedMsisdnsDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":2122,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2119,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeid",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":1715,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["typeorm",{"_index":1129,"title":{},"body":{"entities/Journal.html":{},"injectables/JournalizatingService.html":{},"modules/JournalizationModule.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":1153,"title":{},"body":{"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{}}}],["typeormmodule.forfeature([journal",{"_index":1166,"title":{},"body":{"modules/JournalizatingModule.html":{}}}],["typeormmodule.forrootasync",{"_index":1275,"title":{},"body":{"modules/JournalizationModule.html":{}}}],["types",{"_index":330,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ClientDataDTO.html":{},"interfaces/IBalanceClient.html":{},"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDistrictType.html":{},"interfaces/IDistrictTypesResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IOptionalPropertyClient.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRegionType.html":{},"interfaces/IRegionTypesResponse.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStateClient.html":{},"interfaces/IStreetType.html":{},"interfaces/IStreetTypesResponse.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/MsisdnDto.html":{},"classes/PassportClientSearchDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["types/cache",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["types/client/juridical.type",{"_index":955,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["types/client/segment.type",{"_index":956,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{}}}],["tyumen",{"_index":2012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tz",{"_index":599,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1029,"title":{},"body":{"interfaces/IEnum.html":{}}}],["unauthorizedexception",{"_index":1324,"title":{},"body":{"guards/KeycloakTokenGuard.html":{}}}],["unauthorizedexception(httpexceptionmessagesgraphql.errorauthapime",{"_index":53,"title":{},"body":{"guards/ApimeConnectionGuard.html":{}}}],["unavailable",{"_index":1998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":1722,"title":{},"body":{"injectables/SearchDictionaryService.html":{}}}],["under_review",{"_index":531,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":1258,"title":{},"body":{"controllers/JournalizationController.html":{},"injectables/RabbitMQService.html":{}}}],["unlinked",{"_index":321,"title":{},"body":{"classes/CategoryDto.html":{},"modules/GqlModule.html":{},"interfaces/ICategory.html":{},"interfaces/IMsisdn.html":{},"interfaces/IRegion.html":{},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{},"interfaces/IState.html":{},"classes/MsisdnDto.html":{},"classes/MsisdnFilterDTO.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"interfaces/SearchUnlinkedMsisdnsInput.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInputDTO.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{},"miscellaneous/variables.html":{}}}],["unlinked.enum.ts",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unlinkedmsisdnsdto",{"_index":355,"title":{"classes/UnlinkedMsisdnsDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/MsisdnDto.html":{},"classes/RegionDto.html":{},"classes/SearchUnlinkedMsisdnsDTO.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"classes/SearchUnlinkedMsisdnsResponseDto.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/StateDto.html":{},"classes/UnlinkedMsisdnsDto.html":{}}}],["unstructured",{"_index":962,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/IRequestParams.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"classes/NameClientSearchDTO.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["up",{"_index":2081,"title":{},"body":{"index.html":{}}}],["upload",{"_index":638,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["uploads",{"_index":659,"title":{},"body":{"modules/CoreModule.html":{}}}],["uptime",{"_index":696,"title":{},"body":{"classes/CoreResolver.html":{},"controllers/UptimeController.html":{}}}],["uptime(@context",{"_index":699,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uptime(context",{"_index":697,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uptime.controller",{"_index":651,"title":{},"body":{"modules/CoreModule.html":{}}}],["uptimecontroller",{"_index":630,"title":{"controllers/UptimeController.html":{}},"body":{"modules/CoreModule.html":{},"controllers/UptimeController.html":{}}}],["uri",{"_index":619,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["url",{"_index":105,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"classes/ErrorFilter.html":{},"interfaces/IRequestParams.html":{},"modules/KeycloakModule.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{}}}],["urlencoded",{"_index":1318,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["urls",{"_index":1522,"title":{},"body":{"modules/RabbitModule.html":{}}}],["urlsearchparams",{"_index":1313,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["useclass",{"_index":693,"title":{},"body":{"modules/CoreModule.html":{},"modules/GqlModule.html":{}}}],["usefactory",{"_index":113,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/CoreModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"modules/RabbitModule.html":{}}}],["useguards",{"_index":495,"title":{},"body":{"classes/ClientResolver.html":{}}}],["useguards(keycloaktokenguard",{"_index":498,"title":{},"body":{"classes/ClientResolver.html":{}}}],["user",{"_index":614,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{},"interfaces/IEnum.html":{}}}],["userdata",{"_index":504,"title":{},"body":{"classes/ClientResolver.html":{}}}],["username",{"_index":255,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["userrole",{"_index":1030,"title":{},"body":{"interfaces/IEnum.html":{}}}],["userrole.admin",{"_index":1035,"title":{},"body":{"interfaces/IEnum.html":{}}}],["userrole.guest",{"_index":1037,"title":{},"body":{"interfaces/IEnum.html":{}}}],["userrole.user",{"_index":1036,"title":{},"body":{"interfaces/IEnum.html":{}}}],["usertype",{"_index":2126,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["usertypearg",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usevalue",{"_index":1476,"title":{},"body":{"modules/PromModule.html":{}}}],["uuid",{"_index":146,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["uuidv4",{"_index":145,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"dependencies.html":{}}}],["v1",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/search",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/search/dictionary",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v4",{"_index":144,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"classes/ClientResolver.html":{},"classes/SearchClientsResolver.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{}}}],["vala",{"_index":1707,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["vala.localecompare(valb",{"_index":1716,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["valb",{"_index":1710,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["valb.localecompare(vala",{"_index":1717,"title":{},"body":{"injectables/SearchClientsService.html":{}}}],["valid",{"_index":534,"title":{},"body":{"injectables/ClientService.html":{},"miscellaneous/enumerations.html":{}}}],["validationschema",{"_index":795,"title":{},"body":{"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizationModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":447,"title":{},"body":{"classes/ClientFilterInput.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"classes/GetSearchAreasInputDTO.html":{},"classes/MsisdnFilterDTO.html":{},"classes/PaginationDTO.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"dependencies.html":{}}}],["value",{"_index":231,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"injectables/DLService.html":{},"interfaces/IEnum.html":{},"interfaces/IMonetaryClient.html":{},"interfaces/IOptionalPropertyClient.html":{},"classes/MonetaryClientSearchDTO.html":{},"injectables/SearchClientsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuea",{"_index":1818,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["valuea.localecompare(valueb",{"_index":1828,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["valueb",{"_index":1819,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["valueb.localecompare(valuea",{"_index":1829,"title":{},"body":{"injectables/SearchUnlinkedMsisdnsService.html":{}}}],["variables",{"_index":2132,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdaccio",{"_index":2088,"title":{},"body":{"index.html":{}}}],["verdaccio/verdaccio",{"_index":2090,"title":{},"body":{"index.html":{}}}],["verdaccio/verdaccio:4",{"_index":2086,"title":{},"body":{"index.html":{}}}],["version",{"_index":2108,"title":{},"body":{"properties.html":{}}}],["vhost",{"_index":606,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/ConfigurationApiMe.html":{},"interfaces/ConfigurationBroker.html":{},"interfaces/ConfigurationBrokerQueue.html":{},"interfaces/ConfigurationKafka.html":{},"interfaces/ConfigurationKeycloak.html":{},"interfaces/ConfigurationPostgres.html":{},"interfaces/ConfigurationRedis.html":{}}}],["vip",{"_index":953,"title":{},"body":{"interfaces/IClientSearch.html":{},"interfaces/IClientSearchResult.html":{},"interfaces/IDataClientSearchResponse.html":{},"interfaces/IDocumentClientSearch.html":{},"interfaces/IEquipmentClientSearch.html":{},"interfaces/INameClientSearch.html":{},"interfaces/IQueryStructured.html":{},"interfaces/IQueryUnStructured.html":{},"interfaces/ISearchClientPayload.html":{},"interfaces/IStructuredClientName.html":{},"interfaces/IStructuredNameClientSearch.html":{},"interfaces/ISubscriberClientSearch.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["void",{"_index":636,"title":{},"body":{"modules/CoreModule.html":{}}}],["warn",{"_index":165,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"injectables/AppLoggerLoki.html":{}}}],["warn(message",{"_index":227,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["watch",{"_index":2065,"title":{},"body":{"index.html":{}}}],["wcb",{"_index":2074,"title":{},"body":{"index.html":{}}}],["web",{"_index":36,"title":{},"body":{"guards/ApimeConnectionGuard.html":{},"modules/ApimeIntegrationModule.html":{},"injectables/ApimeIntegrationService.html":{},"classes/ClientFilterInput.html":{},"modules/ClientModule.html":{},"classes/ClientResolver.html":{},"injectables/ClientService.html":{},"classes/ClientsSearchInputDTO.html":{},"classes/ClientsSearchedDTO.html":{},"modules/CoreModule.html":{},"controllers/DLMessagePattern.html":{},"injectables/DLService.html":{},"modules/DlModule.html":{},"classes/GetSearchAreasInputDTO.html":{},"modules/GqlModule.html":{},"interfaces/IRequestParams.html":{},"modules/JournalizatingModule.html":{},"injectables/JournalizatingService.html":{},"controllers/JournalizationController.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakModule.html":{},"injectables/KeycloakService.html":{},"guards/KeycloakTokenGuard.html":{},"modules/LogsAndJournalsModule.html":{},"classes/LogsAndJournalsResolver.html":{},"injectables/LogsAndJournalsService.html":{},"classes/MsisdnFilterDTO.html":{},"injectables/RabbitMQService.html":{},"modules/RabbitModule.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"classes/SearchAreaWithLabelDTO.html":{},"classes/SearchAreasDTO.html":{},"injectables/SearchAreasService.html":{},"modules/SearchClientsModule.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"injectables/SearchDictionaryService.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"classes/SearchUnlinkedMsisdnsQueryDto.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SortInput.html":{},"classes/SortInputDTO.html":{},"properties.html":{}}}],["web_clients",{"_index":1516,"title":{},"body":{"modules/RabbitModule.html":{}}}],["webclientsapimethods",{"_index":149,"title":{},"body":{"injectables/ApimeIntegrationService.html":{},"interfaces/IRequestParams.html":{},"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{},"injectables/SearchDictionaryService.html":{},"miscellaneous/variables.html":{}}}],["webclientsapimethods.client.getclientbyid(clientid",{"_index":170,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["webclientsapimethods.dictionary.address.citytype",{"_index":1090,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.address.country",{"_index":1084,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.address.districttype",{"_index":1088,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.address.regiontype",{"_index":1086,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.address.streettype",{"_index":1092,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.client.addresstype",{"_index":1079,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.client.billingdeliverytype",{"_index":1082,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.client.clienttype",{"_index":1075,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.client.documenttype",{"_index":1077,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.dictionary.client.juridicaltype",{"_index":1072,"title":{},"body":{"interfaces/IRequestParams.html":{},"injectables/SearchDictionaryService.html":{}}}],["webclientsapimethods.health.apime_check",{"_index":155,"title":{},"body":{"injectables/ApimeIntegrationService.html":{}}}],["webclientsapimethods.search.clients.additionalphonenumber",{"_index":1557,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsapimethods.search.clients.byaccount",{"_index":1555,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsapimethods.search.clients.bycontract",{"_index":1556,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsapimethods.search.clients.bydocument",{"_index":1554,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsapimethods.search.clients.byequipment",{"_index":1558,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsapimethods.search.clients.bymsisdn",{"_index":1553,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsapimethods.search.clients.byname",{"_index":1548,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsapimethods.search.freemsisdns(payload",{"_index":1559,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["webclientsclient",{"_index":1487,"title":{},"body":{"injectables/RabbitMQService.html":{},"injectables/SearchService.html":{}}}],["willsoto/nestjs",{"_index":1467,"title":{},"body":{"modules/PromModule.html":{},"dependencies.html":{}}}],["winston",{"_index":234,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":240,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["winston.format.colorize",{"_index":245,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["winston.format.combine",{"_index":244,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["winston.format.json",{"_index":248,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["winston.format.simple",{"_index":246,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["winston.format.timestamp",{"_index":247,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["winston.logger",{"_index":229,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["winston.transports.console",{"_index":242,"title":{},"body":{"injectables/AppLoggerLoki.html":{}}}],["ws",{"_index":682,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["www",{"_index":1316,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["x",{"_index":1549,"title":{},"body":{"injectables/SearchApimeService.html":{},"injectables/SearchApimeService-1.html":{}}}],["yanao",{"_index":2011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yarn",{"_index":2059,"title":{},"body":{"index.html":{}}}],["year",{"_index":2192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":226,"title":{},"body":{"injectables/AppLoggerLoki.html":{},"classes/LogsAndJournalsResolver.html":{},"classes/SearchClientsResolver.html":{},"injectables/SearchClientsService.html":{},"classes/SearchUnlinkedMsisdnsResolver.html":{},"injectables/SearchUnlinkedMsisdnsService.html":{},"classes/SubscriberClientSearchDTO.html":{}}}],["yyyy",{"_index":388,"title":{},"body":{"classes/ClientDataDTO.html":{},"classes/PassportClientSearchDTO.html":{}}}],["z",{"_index":1603,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["za",{"_index":1602,"title":{},"body":{"injectables/SearchAreasService.html":{}}}],["zd9sc_s9exaa1tlrzfjkbjsklgjb5jw00wwvyvxjorauxrj4qxts5kw_kicll0xijp6x1e",{"_index":2200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/ApimeIntegrationModule.html":{},"modules/AuthModule.html":{},"modules/ClientModule.html":{},"modules/CoreModule.html":{},"modules/DlModule.html":{},"modules/GqlModule.html":{},"modules/JournalizatingModule.html":{},"modules/JournalizationModule.html":{},"modules/KeycloakIntegrationModule.html":{},"modules/KeycloakModule.html":{},"modules/LogsAndJournalsModule.html":{},"modules/RabbitModule.html":{},"modules/SearchClientsModule.html":{},"modules/SearchUnlinkedMsisdnsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/ApimeConnectionGuard.html":{"url":"guards/ApimeConnectionGuard.html","title":"guard - ApimeConnectionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ApimeConnectionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/apime-integration/src/lib/ApiMeConnectionGuard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apimeIntegrationService: ApimeIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in libs/apime-integration/src/lib/ApiMeConnectionGuard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apimeIntegrationService\n                                                  \n                                                        \n                                                                        ApimeIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/ApiMeConnectionGuard.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { ApimeIntegrationService } from './apime-integration.service';\nimport { EXCEPTIONMSGQL } from '@web-clients-backend/shared';\n\n@Injectable()\nexport class ApimeConnectionGuard implements CanActivate {\n  constructor(\n    private readonly apimeIntegrationService: ApimeIntegrationService\n  ) {}\n\n  // async canActivate(context: ExecutionContext): Promise {\n  //   const graphqlContext = context.getArgs()[2]; // Получаем третий элемент из массива args, который представляет собой контекст GraphQL\n  //   const { req } = graphqlContext;\n\n  //   if (!req || !req.user) {\n  //     throw new UnauthorizedException(HttpExceptionMessagesGraphQL.errorAuthApiMe);\n  //     // throw new HttpException(HttpExceptionMessagesGraphQL.errorAuthApiMe, HttpStatus.UNAUTHORIZED);\n  //   }\n  //   const phone = req.user.phone;\n  //   const apiResponse = await this.apimeIntegrationService.getApimeToken(phone);\n\n  //   if (apiResponse) {\n  //     return true;\n  //   }\n  //   throw new UnauthorizedException(HttpExceptionMessagesGraphQL.errorAuthApiMe);\n  // }\n\n  async canActivate(context: ExecutionContext): Promise {\n    const apiHealth = await this.apimeIntegrationService.healthCheck();\n    if (!apiHealth) {\n      throw new HttpException(\n        EXCEPTIONMSGQL.apime.errorHealthApiMe,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApimeIntegrationModule.html":{"url":"modules/ApimeIntegrationModule.html","title":"module - ApimeIntegrationModule","body":"\n                   \n\n\n\n\n    Modules\n    ApimeIntegrationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApimeIntegrationModule\n\n\n\ncluster_ApimeIntegrationModule_providers\n\n\n\ncluster_ApimeIntegrationModule_exports\n\n\n\n\nApimeConnectionGuard \n\nApimeConnectionGuard \n\n\n\nApimeIntegrationService \n\nApimeIntegrationService \n\n\n\nSearchApimeService \n\nSearchApimeService \n\n\n\nApimeIntegrationModule\n\nApimeIntegrationModule\n\nApimeConnectionGuard  -->\n\nApimeIntegrationModule->ApimeConnectionGuard \n\n\n\nApimeIntegrationService  -->\n\nApimeIntegrationModule->ApimeIntegrationService \n\n\n\nSearchApimeService  -->\n\nApimeIntegrationModule->SearchApimeService \n\n\n\n\n\nApimeIntegrationService\n\nApimeIntegrationService\n\nApimeIntegrationModule -->\n\nApimeIntegrationService->ApimeIntegrationModule\n\n\n\n\n\nSearchApimeService\n\nSearchApimeService\n\nApimeIntegrationModule -->\n\nSearchApimeService->ApimeIntegrationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/apime-integration/src/lib/apime-integration.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApimeIntegrationService\n                        \n                        \n                            SearchApimeService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApimeConnectionGuard\n                        \n                        \n                            ApimeIntegrationService\n                        \n                        \n                            SearchApimeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport * as https from 'https';\nimport { ApimeIntegrationService } from './apime-integration.service';\nimport { ApimeConnectionGuard } from './ApiMeConnectionGuard';\nimport { ConfigurationApiMe } from '@web-clients-backend/shared';\nimport { SearchApimeService } from './search/search-apime.service';\n\n/**\n * @module ApimeIntegrationModule\n * @description Модуль для интеграции с API Me, включая настройку HTTP клиента.\n */\n@Module({\n  imports: [\n    /**\n     * @import HttpModule\n     * @description Модуль для работы с HTTP-запросами.\n     * @type {HttpModule}\n     * @returns {HttpModuleOptions} Настройки для HTTP-клиента.\n     * @properties\n     *   @property {string} baseURL - Базовый URL для API Me.\n     *   @property {number} timeout - Таймаут запросов в миллисекундах.\n     *   @property {number} maxRedirects - Максимальное количество перенаправлений.\n     *   @property {https.Agent} httpsAgent - Настройки HTTPS агента.\n     */\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      /**\n       * @method useFactory\n       * @description Фабричный метод для асинхронной настройки HTTP-модуля.\n       * @param {ConfigService} configService - Сервис для получения конфигураций.\n       * @returns {Promise} Объект настроек для HTTP-клиента.\n       * @throws {Error} Если конфигурация API Me отсутствует.\n       */\n      useFactory: async (configService: ConfigService) => {\n        const apiMeConfig = configService.get('apime');\n\n        if (!apiMeConfig) {\n          throw new Error('ApiMe configuration is missing');\n        }\n        return {\n          baseURL: apiMeConfig.uri,\n          timeout: 100000,\n          maxRedirects: 300,\n          httpsAgent: new https.Agent({\n            rejectUnauthorized: false,\n          }),\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    ApimeIntegrationService,\n    ApimeConnectionGuard,\n    SearchApimeService,\n  ],\n  exports: [ApimeIntegrationService, ApimeConnectionGuard, SearchApimeService],\n})\nexport class ApimeIntegrationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApimeIntegrationService.html":{"url":"injectables/ApimeIntegrationService.html","title":"injectable - ApimeIntegrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApimeIntegrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/apime-integration/src/lib/apime-integration.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getClientData\n                            \n                            \n                                    Async\n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in libs/apime-integration/src/lib/apime-integration.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getClientData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClientData(payload: IAccessTokenInput, clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/apime-integration.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Получает данные клиента по id абонента.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IAccessTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Входные данные с токеном доступа (IAccessTokenInput).\n\n                                            \n                                        \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Данные клиента (IClientApiResult) или null в случае ошибки или отсутствия данных.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/apime-integration.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Проверяет состояние apime сервиса.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                true, если состояние apime сервиса успешное, иначе false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport {\n  IAccessTokenInput,\n  IClientApiResult,\n} from '@web-clients-backend/shared';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IApiMeHealth } from './other/static.interface';\nimport { webClientsApiMethods } from './other/api-methods';\n\n@Injectable()\nexport class ApimeIntegrationService {\n  constructor(private readonly httpService: HttpService) {}\n\n  /**\n   * Проверяет состояние apime сервиса.\n   * @returns `true`, если состояние apime сервиса успешное, иначе `false`.\n   */\n  async healthCheck(): Promise {\n    try {\n      const response = await this.httpService.axiosRef.get(\n        webClientsApiMethods.health.apime_check,\n        {\n          headers: {\n            TRACE_ID: uuidv4(),\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data: IApiMeHealth = response.data;\n\n      // if (!data.ApimeCorePkg) {\n      //   this.loggerService.logging(ApimeIntegrationService, `Проверяем коннект к apime - bad`, 'warn');\n      //   return false;\n      // }\n      // this.loggerService.logging(ApimeIntegrationService, `Проверяем коннект к apime - good`, 'debug');\n      return true;\n    } catch (error) {\n      // console.log(error);\n\n      // this.loggerService.logging(ApimeIntegrationService, `Проверяем коннект к apime - bad catch`, 'warn');\n\n      return false;\n    }\n  }\n\n  /**\n   * Получает данные клиента по id абонента.\n   * @param payload Входные данные с токеном доступа (`IAccessTokenInput`).\n   * @returns Данные клиента (`IClientApiResult`) или `null` в случае ошибки или отсутствия данных.\n   */\n  async getClientData(\n    payload: IAccessTokenInput,\n    clientId: string\n  ): Promise {\n    try {\n      const response = await this.httpService.axiosRef.get(\n        webClientsApiMethods.client.getClientById(clientId),\n        {\n          headers: {\n            Authorization: `Bearer ${payload.access_token}`,\n            TRACE_ID: payload.traceId?.traceID,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApimeTokenInterceptor.html":{"url":"injectables/ApimeTokenInterceptor.html","title":"injectable - ApimeTokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApimeTokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/apime-integration/src/lib/apimeTokenInterceptor.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Этот интерсептор добавляет токен авторизации в заголовки запроса, если токен доступен.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apimeIntegrationService: ApimeIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in libs/apime-integration/src/lib/apimeTokenInterceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apimeIntegrationService\n                                                  \n                                                        \n                                                                        ApimeIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nСервис для интеграции с API Me, используемый для получения токена.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/apimeTokenInterceptor.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nКонтекст выполнения, содержащий информацию о текущем запросе.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбработчик вызова, который будет вызван после перехвата.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Возвращает наблюдаемый объект, который будет использоваться для обработки запроса.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { ApimeIntegrationService } from './apime-integration.service';\n\n/**\n * @class ApimeTokenInterceptor\n * @description Интерсептор для управления токеном API Me.\n * Этот интерсептор добавляет токен авторизации в заголовки запроса, если токен доступен.\n */\n@Injectable()\nexport class ApimeTokenInterceptor implements NestInterceptor {\n  /**\n   * @constructor\n   * @param {ApimeIntegrationService} apimeIntegrationService - Сервис для интеграции с API Me, используемый для получения токена.\n   */\n  constructor(\n    private readonly apimeIntegrationService: ApimeIntegrationService\n  ) {}\n\n  /**\n   * @method intercept\n   * @description Метод, который перехватывает входящие запросы и добавляет токен авторизации, если он доступен.\n   * @param {ExecutionContext} context - Контекст выполнения, содержащий информацию о текущем запросе.\n   * @param {CallHandler} next - Обработчик вызова, который будет вызван после перехвата.\n   * @returns {Observable} Возвращает наблюдаемый объект, который будет использоваться для обработки запроса.\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    // return this.apimeIntegrationService.getApimeToken().pipe(\n    //   switchMap((token) => {\n    //     if (token) {\n    //       // Если токен доступен, добавляем его к запросу\n    //       const request = context.switchToHttp().getRequest();\n    //       request.headers['Authorization'] = `Bearer ${token.access_token}`;\n    //     }\n    //     return next.handle();\n    //   }),\n    // );\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/graphql/src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                            \n                                    \n                                healthCheck2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/graphql/src/app/app.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         object\n\n                        \n                            \n                                Объект с полем status, указывающим состояние сервиса.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck2\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck2(param: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health2')\n                \n            \n\n                    \n                        \n                            Defined in apps/graphql/src/app/app.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Параметр, переданный через строку запроса.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Значение параметра param, полученное через запрос.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * @query\n   * @name healthCheck\n   * @description Проверка состояния сервиса. Возвращает статус \"ok\", если сервис работает корректно.\n   * @returns {Object} Объект с полем `status`, указывающим состояние сервиса.\n   */\n  @Get('health')\n  healthCheck(): object {\n    return { status: 'ok' };\n  }\n\n  /**\n   * @query\n   * @name healthCheck2\n   * @description Проверка состояния с дополнительным параметром. Принимает параметр `param` через запрос и возвращает его значение.\n   * @param {string} param Параметр, переданный через строку запроса.\n   * @returns {string} Значение параметра `param`, полученное через запрос.\n   */\n  @Get('health2')\n  healthCheck2(@Query('param') param: string): string {\n    return param;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLoggerLoki.html":{"url":"injectables/AppLoggerLoki.html","title":"injectable - AppLoggerLoki","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppLoggerLoki\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/logs/src/lib/loggerloki.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Поддерживает логирование сообщений различных уровней: информация, предупреждения и ошибки.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                lokiLogger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                log\n                            \n                            \n                                    Async\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/logs/src/lib/loggerloki.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(message: string, trace: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/logs/src/lib/loggerloki.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение об ошибке.\n\n\n                                            \n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nТрассировка ошибки для более детального анализа.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(message: string, label?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/logs/src/lib/loggerloki.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение для логирования.\n\n\n                                            \n                                        \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Метка для категоризации логов.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(message: string, label?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/logs/src/lib/loggerloki.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСообщение для логирования.\n\n\n                                            \n                                        \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Метка для категоризации логов.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        lokiLogger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     winston.Logger | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in libs/logs/src/lib/loggerloki.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, LoggerService as NestLoggerService } from '@nestjs/common';\nimport * as winston from 'winston';\n// import LokiTransport from 'winston-loki';\n// import { ElasticsearchTransport } from 'winston-opensearch';\n\n/**\n * @description Класс для логирования с использованием Winston и транспорта Loki для отправки логов на сервер Loki.\n * Поддерживает логирование сообщений различных уровней: информация, предупреждения и ошибки.\n * @constructor Инициализирует логгер Winston с транспортами для вывода в консоль и отправки логов в Loki.\n */\n@Injectable()\nexport class AppLoggerLoki implements NestLoggerService {\n  private readonly lokiLogger: winston.Logger | null = null;\n\n  constructor() {\n    this.lokiLogger = winston.createLogger({\n      transports: [\n        new winston.transports.Console({\n          format: winston.format.combine(\n            // winston.format.colorize(),\n            // winston.format.simple()\n            winston.format.timestamp(),\n            winston.format.json() // Формат для отправки логов в OpenSearch\n          ),\n        }),\n        // new ElasticsearchTransport({\n        //   level: 'info',\n        //   clientOpts: {\n        //     node: process.env['OPENSEARCH_HOST'] ?? 'http://localhost:9200',\n        //     auth: {\n        //       username: process.env['OPENSEARCH_USERNAME'] ?? 'admin',\n        //       password: process.env['OPENSEARCH_PASSWORD'] ?? 'admin',\n        //     },\n        //   },\n        //   indexPrefix: 'app-logs',\n        // }),\n        // new LokiTransport({\n        //   host: process.env['LOKI_HOST'] ?? 'http://127.0.0.1:3100',\n        //   json: false,\n        //   replaceTimestamp: true,\n        //   labels: {\n        //     rmq: 'rmq',\n        //     api: 'api',\n        //   },\n        //   onConnectionError: (err) => console.error(err),\n        // }),\n      ],\n    });\n  }\n\n  /**\n   * @description Логирует информационные сообщения. По умолчанию метка `api`, если не передана другая.\n   * @param {string} message - Сообщение для логирования.\n   * @param {string} [label] - (Необязательный) Метка для категоризации логов.\n   */\n  async log(message: string, label?: string) {\n    if (this.lokiLogger) {\n      this.lokiLogger.info(message, { labels: { [label || 'api']: 'api' } });\n    }\n  }\n\n  /**\n   * @description Логирует сообщения об ошибках. Включает сообщение об ошибке и трассировку.\n   * @param {string} message - Сообщение об ошибке.\n   * @param {string} trace - Трассировка ошибки для более детального анализа.\n   */\n  async error(message: string, trace: string) {\n    if (this.lokiLogger) {\n      this.lokiLogger.error({ message, trace });\n    }\n  }\n\n  /**\n   * @description Логирует предупреждающие сообщения. По умолчанию метка `api`, если не передана другая.\n   * @param {string} message - Сообщение для логирования.\n   * @param {string} [label] - (Необязательный) Метка для категоризации логов.\n   */\n  async warn(message: string, label?: string) {\n    if (this.lokiLogger) {\n      this.lokiLogger.warn(message, { labels: { [label || 'api']: 'api' } });\n    }\n  }\n}\n\n// import { Injectable, LoggerService as NestLoggerService } from '@nestjs/common';\n// import * as winston from 'winston';\n// import LokiTransport from 'winston-loki';\n\n// @Injectable()\n// export class AppLoggerLoki implements NestLoggerService {\n//   private readonly logger: winston.Logger;\n\n//   constructor() {\n//     this.logger = winston.createLogger({\n//       level: 'info',\n//       format: winston.format.combine(\n//         winston.format.timestamp(),\n//         winston.format.colorize(),\n//         winston.format.json()\n//       ),\n//       transports: [\n//         new winston.transports.Console({\n//           format: winston.format.combine(\n//             winston.format.colorize(),\n//             winston.format.simple()\n//           ),\n//         }),\n//         new LokiTransport({\n//           host: process.env['LOKI_HOST'] ?? 'http://127.0.0.1:3100',\n//           json: true,\n//           labels: {\n//             app: 'api',\n//           },\n//           onConnectionError: (err) =>\n//             console.error('Loki connection error:', err),\n//         }),\n//       ],\n//     });\n//   }\n\n//   log(message: string, context?: any) {\n//     this.logger.info(message, { context });\n//   }\n\n//   error(message: string, trace?: string, context?: any) {\n//     this.logger.error(message, { trace, context });\n//   }\n\n//   warn(message: string, context?: any) {\n//     this.logger.warn(message, { context });\n//   }\n\n//   debug(message: string, context?: any) {\n//     this.logger.debug(message, { context });\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/graphql/src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/graphql/src/app/app.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                            \n                                Объект с полем message, содержащим приветственное сообщение.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  /**\n   * @query\n   * @name getData\n   * @description Возвращает объект с сообщением. Используется для проверки работы API.\n   * @returns {Object} Объект с полем `message`, содержащим приветственное сообщение.\n   */\n  getData(): { message: string } {\n    return { message: 'Hello BACC' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/auth/src/lib/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Module({\n  controllers: [],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/auth.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BalanceClientSearchDTO.html":{"url":"classes/BalanceClientSearchDTO.html","title":"class - BalanceClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BalanceClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/balance.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                BalanceClientSearchDTO - это объектный тип для представления балансов клиента.\nСодержит список денежных балансов (monetary).\n\n            \n\n\n            \n                Implements\n            \n            \n                            IBalanceClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                monetary\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(monetary: MonetaryClientSearchDTO[])\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/balance.dto.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monetary\n                                                  \n                                                        \n                                                                        MonetaryClientSearchDTO[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        monetary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MonetaryClientSearchDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Список денежных балансов клиента.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/balance.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field } from '@nestjs/graphql';\nimport { MonetaryClientSearchDTO } from './monetary.dto';\nimport { IBalanceClient } from '../../interfaces';\n\n/**\n * `BalanceClientSearchDTO` - это объектный тип для представления балансов клиента.\n * Содержит список денежных балансов (`monetary`).\n */\n@ObjectType({\n  description: 'Объектный тип для представления балансов клиента.',\n})\nexport class BalanceClientSearchDTO implements IBalanceClient {\n  @Field(() => [MonetaryClientSearchDTO], {\n    description: 'Список денежных балансов клиента.',\n  })\n  monetary: MonetaryClientSearchDTO[];\n\n  constructor(monetary: MonetaryClientSearchDTO[]) {\n    this.monetary = monetary;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BrokerMessage.html":{"url":"controllers/BrokerMessage.html","title":"controller - BrokerMessage","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BrokerMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/graphql/src/app/app.broker.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Logger } from '@nestjs/common';\nimport { EventPattern } from '@nestjs/microservices';\n\n@Controller()\nexport class BrokerMessage {\n  constructor() {}\n  private logger = new Logger(BrokerMessage.name);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                CategoryDto - объектный тип для представления категории.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Идентификатор категории'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Название категории'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, Float } from '@nestjs/graphql';\nimport { ISearchUnlinkedMsisdnsResponse } from '../../interfaces';\nimport { SN } from '../../types';\nimport { PaginatedResponseType } from '../helpersGql';\n\n/**\n * `StateDto` - объектный тип для представления состояния объекта.\n */\n@ObjectType({\n  description: 'Объектный тип для представления состояния объекта.',\n})\nexport class StateDto {\n  @Field(() => Int, { description: 'Идентификатор состояния' })\n  id: number;\n\n  @Field(() => String, { description: 'Название состояния' })\n  name: string;\n\n  @Field(() => String, { description: 'Время изменения состояния' })\n  changedAt: string;\n\n  constructor(id: number, name: string, changedAt: string) {\n    this.id = id;\n    this.name = name;\n    this.changedAt = changedAt;\n  }\n}\n\n/**\n * `CategoryDto` - объектный тип для представления категории.\n */\n@ObjectType({ description: 'Объектный тип для представления категории.' })\nexport class CategoryDto {\n  @Field(() => Int, { description: 'Идентификатор категории' })\n  id: number;\n\n  @Field(() => String, { description: 'Название категории' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `RegionDto` - объектный тип для представления региона.\n */\n@ObjectType({ description: 'Объектный тип для представления региона.' })\nexport class RegionDto {\n  @Field(() => Int, { description: 'Идентификатор региона' })\n  id: number;\n\n  @Field(() => String, { description: 'Название региона' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `MsisdnDto` - объектный тип для представления номера телефона (MSISDN).\n */\n@ObjectType({\n  description: 'Объектный тип для представления номера телефона (MSISDN).',\n})\nexport class MsisdnDto {\n  @Field(() => Int, { description: 'Идентификатор номера телефона' })\n  id: number;\n\n  @Field(() => Number, { description: 'Сам номер телефона (MSISDN)' })\n  msisdn: number;\n\n  @Field(() => String, {\n    description: 'Комментарий, связанный с номером',\n    nullable: true,\n  })\n  comment?: string;\n\n  @Field(() => StateDto, { description: 'Состояние номера телефона' })\n  state: StateDto;\n\n  @Field(() => CategoryDto, { description: 'Категория номера телефона' })\n  category: CategoryDto;\n\n  @Field(() => RegionDto, { description: 'Регион номера телефона' })\n  region: RegionDto;\n\n  constructor(\n    id: number,\n    msisdn: number,\n    comment: string,\n    state: StateDto,\n    category: CategoryDto,\n    region: RegionDto\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.comment = comment;\n    this.state = state;\n    this.category = category;\n    this.region = region;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsResponseDto` - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления результата поиска несвязанного номера телефона (MSISDN).',\n})\nexport class SearchUnlinkedMsisdnsResponseDto\n  implements ISearchUnlinkedMsisdnsResponse\n{\n  @Field(() => [MsisdnDto], {\n    nullable: true,\n    description: 'Список несвязанных номеров телефонов (MSISDN)',\n  })\n  msisdns: (MsisdnDto | null)[];\n\n  constructor(msisdns: (MsisdnDto | null)[]) {\n    this.msisdns = msisdns;\n  }\n}\n/**\n * `UnlinkedMsisdnsDto` - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n */\n@ObjectType({\n  description:\n    'DTO для представления информации о несвязанных номерах телефонов (MSISDN).',\n})\nexport class UnlinkedMsisdnsDto {\n  @Field(() => String, { description: 'Текущий статус', nullable: true })\n  status: SN;\n\n  @Field(() => String, {\n    description: 'Дата установки статуса',\n    nullable: true,\n  })\n  dateStatus: SN;\n\n  @Field(() => String, { description: 'MISDN пользователя', nullable: true })\n  msisdn: SN;\n\n  @Field(() => String, { description: 'Регион пользователя', nullable: true })\n  region: SN;\n\n  @Field(() => String, {\n    description: 'Категория пользователя',\n    nullable: true,\n  })\n  categoryName: SN;\n\n  @Field(() => String, { description: 'Комментарий', nullable: true })\n  comment: SN;\n\n  constructor(\n    status: SN,\n    dateStatus: SN,\n    msisdn: SN,\n    region: SN,\n    categoryName: SN,\n    comment: SN\n  ) {\n    this.status = status;\n    this.dateStatus = dateStatus;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.categoryName = categoryName;\n    this.comment = comment;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsDTO` - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n */\n@ObjectType({ description: 'Список найденных номеров' })\nexport class SearchUnlinkedMsisdnsDTO extends PaginatedResponseType(\n  UnlinkedMsisdnsDto\n) {\n  @Field(() => [UnlinkedMsisdnsDto], { description: 'Список номеров' })\n  override items: UnlinkedMsisdnsDto[];\n\n  @Field(() => Float, { description: 'Количество свободных номеров' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientDataDTO.html":{"url":"classes/ClientDataDTO.html","title":"class - ClientDataDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientDataDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/client.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                ClientDataDTO - объектный тип для представления данных клиента.\nСодержит всю информацию о клиенте, включая персональные данные, контакты, баланс, паспортные данные и другие.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IClientSearch\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                account\n                            \n                            \n                                    \n                                additionalPhone\n                            \n                            \n                                    \n                                balance\n                            \n                            \n                                    \n                                birthDate\n                            \n                            \n                                    \n                                contractNumber\n                            \n                            \n                                    \n                                fio\n                            \n                            \n                                    \n                                iccId\n                            \n                            \n                                    \n                                juridicalType\n                            \n                            \n                                    \n                                msisdn\n                            \n                            \n                                    \n                                passport\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                segment\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fio: SN, msisdn: NN, birthDate: string, balance: NN, passport: PassportClientSearchDTO, additionalPhone: NN, region: SN, iccId: NN, account: number, juridicalType: string, contractNumber: string, segment: string, state: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:125\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fio\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msisdn\n                                                  \n                                                        \n                                                                        NN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        birthDate\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        balance\n                                                  \n                                                        \n                                                                        NN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passport\n                                                  \n                                                        \n                                                                        PassportClientSearchDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        additionalPhone\n                                                  \n                                                        \n                                                                        NN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        region\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iccId\n                                                  \n                                                        \n                                                                        NN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        account\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        juridicalType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contractNumber\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Лицевой счет клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        additionalPhone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Дополнительный номер телефона клиента (если есть)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Баланс клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Дата рождения клиента в формате YYYY-MM-DD'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contractNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Номер договора клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Полное имя клиента (ФИО)', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        iccId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'ICCID сим-карты клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        juridicalType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Юридический тип клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        msisdn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Номер телефона клиента (MSISDN)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        passport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PassportClientSearchDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Данные паспорта клиента', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Регион проживания клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        segment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Сегмент клиента (например, Корпоративный, Индивидуальный)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Статус клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/client.dto.ts:120\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Float } from '@nestjs/graphql';\nimport { IClientSearch } from '../../interfaces';\nimport { PassportClientSearchDTO } from './passport.dto';\n\nimport { NN, SN } from '../../types';\n\n// @ObjectType()\n// export class ClientApiMeDTO implements IClientSearchResult {\n//   @Field(() => Int, { description: 'Идентификатор клиента' })\n//   id: number;\n\n//   @Field(() => BalanceClientSearchDTO, { description: 'Баланс клиента' })\n//   balance: BalanceClientSearchDTO;\n\n//   @Field(() => String, {\n//     description: 'Тип клиента (например, Корпоративный или Кредит)',\n//   })\n//   clientType: string;\n\n//   @Field(() => String, {\n//     description: 'Тип юридического лица (например, Физическое лицо)',\n//   })\n//   juridicalType: string;\n\n//   @Field(() => NameClientSearchDTO, {\n//     description: 'Имя клиента (структурированное и неструктурированное)',\n//   })\n//   name: NameClientSearchDTO;\n\n//   @Field(() => String, { description: 'Дата рождения клиента' })\n//   birthDate: string;\n\n//   @Field(() => DocumentClientSearchDTO, {\n//     description: 'Документ клиента (например, паспорт)',\n//   })\n//   document: DocumentClientSearchDTO;\n\n//   @Field(() => Int, { description: 'Номер лицевого счета клиента' })\n//   account: number;\n\n//   @Field(() => String, { description: 'Номер договора клиента' })\n//   contractNumber: string;\n\n//   @Field(() => String, {\n//     description: 'Состояние клиента (например, Активен или Блокирован)',\n//   })\n//   state: string;\n\n//   @Field(() => [SubscriberClientSearchDTO], {\n//     description: 'Список абонентов клиента',\n//   })\n//   subscribers: SubscriberClientSearchDTO[];\n// }\n\n/**\n * `ClientDataDTO` - объектный тип для представления данных клиента.\n * Содержит всю информацию о клиенте, включая персональные данные, контакты, баланс, паспортные данные и другие.\n */\n@ObjectType({ description: 'Объектный тип для представления данных клиента.' })\nexport class ClientDataDTO implements IClientSearch {\n  @Field(() => String, {\n    description: 'Полное имя клиента (ФИО)',\n    nullable: true,\n  })\n  fio: SN;\n\n  @Field(() => Number, {\n    nullable: true,\n    description: 'Номер телефона клиента (MSISDN)',\n  })\n  msisdn: NN;\n\n  @Field(() => Float, { nullable: true, description: 'Баланс клиента' })\n  balance: NN;\n\n  @Field(() => String, {\n    nullable: true,\n    description: 'Дата рождения клиента в формате YYYY-MM-DD',\n  })\n  birthDate: string;\n\n  @Field(() => PassportClientSearchDTO, {\n    description: 'Данные паспорта клиента',\n    nullable: true,\n  })\n  passport: PassportClientSearchDTO;\n\n  @Field(() => Number, {\n    nullable: true,\n    description: 'Дополнительный номер телефона клиента (если есть)',\n  })\n  additionalPhone: NN;\n\n  @Field(() => String, {\n    nullable: true,\n    description: 'Регион проживания клиента',\n  })\n  region: SN;\n\n  @Field(() => Number, {\n    nullable: true,\n    description: 'ICCID сим-карты клиента',\n  })\n  iccId: NN;\n\n  @Field(() => Number, { description: 'Лицевой счет клиента' })\n  account: number;\n\n  @Field(() => String, { description: 'Номер договора клиента' })\n  contractNumber: string;\n\n  @Field(() => String, {\n    description: 'Сегмент клиента (например, Корпоративный, Индивидуальный)',\n  })\n  segment: string;\n\n  @Field(() => String, {\n    description: 'Статус клиента',\n  })\n  state: string;\n\n  @Field(() => String, {\n    description: 'Юридический тип клиента',\n  })\n  juridicalType: string;\n\n  constructor(\n    fio: SN,\n    msisdn: NN,\n    birthDate: string,\n    balance: NN,\n    passport: PassportClientSearchDTO,\n    additionalPhone: NN,\n    region: SN,\n    iccId: NN,\n    account: number,\n    juridicalType: string,\n    contractNumber: string,\n    segment: string,\n    state: string\n  ) {\n    this.fio = fio;\n    this.msisdn = msisdn;\n    this.birthDate = birthDate;\n    this.balance = balance;\n    this.passport = passport;\n    this.additionalPhone = additionalPhone;\n    this.region = region;\n    this.iccId = iccId;\n    this.account = account;\n    this.contractNumber = contractNumber;\n    this.segment = segment;\n    this.state = state;\n    this.juridicalType = juridicalType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientFilterInput.html":{"url":"classes/ClientFilterInput.html","title":"class - ClientFilterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientFilterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/other/clients.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                contractState\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                juridicalType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                marketSegment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        contractState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateClientEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(StateClientEnum, {message: 'Неверный тип для contractState'})@Field(undefined, {nullable: true, description: 'Статус договора (например, \"ACTIVE\", \"SUSPENDED - Приостановлен\", \"BLOCKED - Блокирован\", \"CLOSED - Закрыт\")'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        juridicalType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JuridicalTypeClientEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(JuridicalTypeClientEnum, {message: 'Неверный тип для juridicalType'})@Field(undefined, {nullable: true, description: 'Юридический вид клиента (например - \"INDIVIDUAL (Физическое лицо) \", \"ENTREPRENEUR(ИП)\", \"LEGAL_ENTITY(Юридическое лицо)\")'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        marketSegment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MarketSegmentEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(MarketSegmentEnum, {message: 'Неверный тип для рыночного сегмента'})@Field(undefined, {nullable: true, description: 'Рыночный сегмент'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Float, InputType, ObjectType } from '@nestjs/graphql';\nimport { IsEnum, IsIn, IsOptional, IsString } from 'class-validator';\nimport {\n  ClientDataDTO,\n  JuridicalTypeClientEnum,\n  MarketSegmentEnum,\n  PaginatedResponseType,\n  SearchAreaEnum,\n  StateClientEnum,\n} from '@web-clients-backend/shared';\n\n@InputType({ description: 'Поле для сортировки' })\nexport class SortInput {\n  @Field(() => String, { description: 'Поле для сортировки' })\n  @IsString()\n  @IsIn(['fio', 'msisdn', 'passport.serialNumber', 'birthDate'])\n  field: string;\n\n  @Field(() => String, { description: 'Направление сортировки' })\n  @IsString()\n  @IsIn(['asc', 'desc']) // Только 'asc' или 'desc'\n  direction: 'asc' | 'desc';\n\n  constructor(field: string, direction: 'asc' | 'desc') {\n    this.field = field;\n    this.direction = direction;\n  }\n}\n\n@InputType({ description: 'DTO для создания пользователя с имплементацией' })\nexport class ClientFilterInput {\n  @IsOptional()\n  @IsEnum(JuridicalTypeClientEnum, {\n    message: 'Неверный тип для juridicalType',\n  })\n  @Field(() => JuridicalTypeClientEnum, {\n    nullable: true,\n    description:\n      'Юридический вид клиента (например - \"INDIVIDUAL (Физическое лицо) \", \"ENTREPRENEUR(ИП)\", \"LEGAL_ENTITY(Юридическое лицо)\")',\n  })\n  juridicalType?: JuridicalTypeClientEnum;\n\n  @IsOptional()\n  @IsEnum(StateClientEnum, { message: 'Неверный тип для contractState' })\n  @Field(() => StateClientEnum, {\n    nullable: true,\n    description:\n      'Статус договора (например, \"ACTIVE\", \"SUSPENDED - Приостановлен\", \"BLOCKED - Блокирован\", \"CLOSED - Закрыт\")',\n  })\n  contractState?: StateClientEnum;\n\n  @IsOptional()\n  @IsEnum(MarketSegmentEnum, {\n    message: 'Неверный тип для рыночного сегмента',\n  })\n  @Field(() => MarketSegmentEnum, {\n    nullable: true,\n    description: 'Рыночный сегмент',\n  })\n  marketSegment?: MarketSegmentEnum;\n}\n\n@InputType()\nexport class ClientsSearchInputDTO {\n  @Field(() => String, { description: 'Ввод для поиска клиентов' })\n  @IsString()\n  input!: string | number;\n\n  @Field(() => SearchAreaEnum, {\n    description: 'Область поиска (например, ACCOUNT_NUMBER)',\n  })\n  @IsEnum(SearchAreaEnum)\n  area!: SearchAreaEnum;\n}\n\n@ObjectType({ description: 'Список найденных клиентов' })\nexport class ClientsSearchedDTO extends PaginatedResponseType(ClientDataDTO) {\n  @Field(() => [ClientDataDTO], { description: 'Список клиентов' })\n  override items: ClientDataDTO[];\n\n  @Field(() => Float, { description: 'Количество клиентов' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_imports\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_ClientModule_exports\n\n\n\n\nKeycloakModule\n\nKeycloakModule\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nKeycloakModule->ClientModule\n\n\n\n\n\nLogsAndJournalsModule\n\nLogsAndJournalsModule\n\nClientModule -->\n\nLogsAndJournalsModule->ClientModule\n\n\n\n\n\nRabbitModule\n\nRabbitModule\n\nClientModule -->\n\nRabbitModule->ClientModule\n\n\n\n\n\nClientResolver \n\nClientResolver \n\nClientResolver  -->\n\nClientModule->ClientResolver \n\n\n\n\n\nClientService \n\nClientService \n\nClientService  -->\n\nClientModule->ClientService \n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/client/src/lib/client.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            KeycloakModule\n                        \n                        \n                            LogsAndJournalsModule\n                        \n                        \n                            RabbitModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClientResolver\n                        \n                        \n                            ClientService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientService } from './client.service';\nimport { RabbitModule } from '@web-clients-backend/rabbit';\nimport { ClientResolver } from './client.resolver';\nimport { LogsAndJournalsModule } from '@web-clients-backend/logs';\nimport { KeycloakModule } from '@web-clients-backend/keycloak';\n\n@Module({\n  imports: [RabbitModule, LogsAndJournalsModule, KeycloakModule],\n  providers: [ClientService, ClientResolver],\n  exports: [ClientService, ClientResolver],\n})\nexport class ClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientResolver.html":{"url":"classes/ClientResolver.html","title":"class - ClientResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/client/src/lib/client.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getClientData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService)\n                    \n                \n                        \n                            \n                                Defined in libs/client/src/lib/client.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getClientData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClientData(clientId: string, context: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'getClient', description: 'Получение данных клиента', complexity: 2})\n                \n            \n\n                    \n                        \n                            Defined in libs/client/src/lib/client.resolver.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Context, Args } from '@nestjs/graphql';\nimport { HttpException, HttpStatus, UseGuards } from '@nestjs/common';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { ClientService } from './client.service';\nimport {\n  EXCEPTIONMSGQL,\n  generateTokenContext,\n  IAccessTokenInput,\n  IClientApiResult,\n} from '@web-clients-backend/shared';\n// import { KeycloakTokenGuard } from '@web-clients-backend/keycloak';\n\n// @UseGuards(KeycloakTokenGuard)\n@Resolver(() => ClientApiMeDTO)\nexport class ClientResolver {\n  constructor(private readonly clientService: ClientService) {}\n\n  @Query(() => ClientApiMeDTO, {\n    name: 'getClient',\n    description: 'Получение данных клиента',\n    complexity: 2,\n  })\n  async getClientData(\n    @Args('input', { nullable: false }) clientId: string,\n    @Context() context: any\n  ): Promise {\n    const tokenInput: IAccessTokenInput = {\n      access_token: await generateTokenContext(context),\n      traceId: { traceID: uuidv4() },\n    };\n\n    const userData: IClientApiResult | null =\n      await this.clientService.getClient(tokenInput, clientId);\n    if (!userData) {\n      throw new HttpException(EXCEPTIONMSGQL.apime, HttpStatus.NOT_FOUND);\n    }\n\n    const clientData: any = await this.clientService.normalizeClient(userData);\n\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/client/src/lib/client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calculateEsiaStatus\n                            \n                            \n                                    Async\n                                getClient\n                            \n                            \n                                    Async\n                                normalizeClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rabbitService: RabbitMQService, logsAdminService: LogsAndJournalsService)\n                    \n                \n                        \n                            \n                                Defined in libs/client/src/lib/client.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rabbitService\n                                                  \n                                                        \n                                                                        RabbitMQService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logsAdminService\n                                                  \n                                                        \n                                                                        LogsAndJournalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calculateEsiaStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    calculateEsiaStatus(payload: IOptionalPropertyClient[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/client/src/lib/client.service.ts:74\n                        \n                    \n\n\n            \n                \n                        \n   Проверяются дополнительные параметры по id:\n•\t254 — “Запрос на проверку паспорта”.\n•\t255 — “Дата проверки паспорта”.\n•\t256 — “Результат проверки”.\n•\t258 — “Статус обработки”.\n   На основе значений этих параметров определяется статус из PassportVerificationStatus.\n   Логика соблюдает порядок проверки, указанный в таблице:\n•\tЕсли параметр 254 отсутствует или не заполнен, статус — NOT_SENT.\n•\tЕсли 254 = \"да\", статус — AWAITING_VERIFICATION.\n•\tСтатусы обработки (258) меняют статус на REQUEST_CREATED, FAILED_TO_SEND, UNDER_REVIEW, INFO_NOT_FOUND, INVALID, или VALID в зависимости от значений.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IOptionalPropertyClient[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClient(payload: IAccessTokenInput, clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/client/src/lib/client.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IAccessTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        normalizeClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    normalizeClient(payload: IClientApiResult)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/client/src/lib/client.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IClientApiResult\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { LogsAndJournalsService } from '@web-clients-backend/logs';\nimport { RabbitMQService } from '@web-clients-backend/rabbit';\nimport {\n  IAccessTokenInput,\n  IClientApiResult,\n  IOptionalPropertyClient,\n  PassportVerificationStatus,\n} from '@web-clients-backend/shared';\n\n@Injectable()\nexport class ClientService {\n  constructor(\n    private readonly rabbitService: RabbitMQService,\n    private readonly logsAdminService: LogsAndJournalsService\n  ) {}\n\n  async getClient(\n    payload: IAccessTokenInput,\n    clientId: string\n  ): Promise {\n    const clientData = await this.rabbitService.getClient(payload, clientId);\n    if (!clientData) {\n      return null;\n    }\n    this.logsAdminService.createLog(\n      'SynonymsGroup',\n      'admin',\n      `Запросил данные клиента по ID`,\n      clientData\n    );\n\n    console.warn(clientData);\n\n    return clientData;\n  }\n\n  async normalizeClient(payload: IClientApiResult): Promise {\n    const client: any = {\n      fio: payload.clientName,\n      inn: payload.contract.inn,\n      juridicalType: payload.juridicalType.name,\n      document: payload.documents,\n      email: payload.email,\n      esia: this.calculateEsiaStatus(payload.optionalProperties),\n      subscriberInformation: {\n        state: {\n          state: payload.state,\n          describe: payload.state,\n        },\n        sim: payload.equipment.iccId,\n        switch: payload.equipment.type,\n        dateFirstCall: '11.11.2024',\n      },\n    };\n\n    return client;\n  }\n\n  /**\n  1.\tПроверяются дополнительные параметры по id:\n\t•\t254 — “Запрос на проверку паспорта”.\n\t•\t255 — “Дата проверки паспорта”.\n\t•\t256 — “Результат проверки”.\n\t•\t258 — “Статус обработки”.\n\t2.\tНа основе значений этих параметров определяется статус из PassportVerificationStatus.\n\t3.\tЛогика соблюдает порядок проверки, указанный в таблице:\n\t•\tЕсли параметр 254 отсутствует или не заполнен, статус — NOT_SENT.\n\t•\tЕсли 254 = \"да\", статус — AWAITING_VERIFICATION.\n\t•\tСтатусы обработки (258) меняют статус на REQUEST_CREATED, FAILED_TO_SEND, UNDER_REVIEW, INFO_NOT_FOUND, INVALID, или VALID в зависимости от значений.\n   * @param payload \n   * @returns \n   */\n  async calculateEsiaStatus(\n    payload: IOptionalPropertyClient[]\n  ): Promise {\n    let esiaStatus: PassportVerificationStatus =\n      PassportVerificationStatus.NOT_SENT;\n\n    if (payload) {\n      // Проверка параметра 254 (\"Запрос на проверку паспорта\")\n      const passportRequestParam = payload.find((param) => param.id === 254);\n      // Проверка параметра 255 (\"Дата проверки паспорта\")\n      const passportVerificationDateParam = payload.find(\n        (param) => param.id === 255\n      );\n      // Проверка параметра 256 (\"Результат проверки\")\n      const passportResultParam = payload.find((param) => param.id === 256);\n      // Проверка параметра 258 (\"Статус обработки\")\n      const processingStatusParam = payload.find((param) => param.id === 258);\n\n      if (!passportRequestParam || !passportRequestParam.value) {\n        // Если \"Запрос на проверку паспорта\" не заполнен\n        esiaStatus = PassportVerificationStatus.NOT_SENT;\n      } else if (passportRequestParam.value === 'да') {\n        // Если \"Запрос на проверку паспорта\" = \"да\"\n        esiaStatus = PassportVerificationStatus.AWAITING_VERIFICATION;\n      }\n\n      if (processingStatusParam?.value === '0') {\n        // Если статус обработки = \"создана заявка\"\n        esiaStatus = PassportVerificationStatus.REQUEST_CREATED;\n      } else if (processingStatusParam?.value === '1') {\n        // Если статус обработки = \"не удалось отправить\"\n        esiaStatus = PassportVerificationStatus.FAILED_TO_SEND;\n      } else if (processingStatusParam?.value === '2') {\n        // Если статус обработки = \"Обработка СМЭВ\"\n        esiaStatus = PassportVerificationStatus.UNDER_REVIEW;\n      } else if (\n        processingStatusParam?.value === '3' &&\n        passportVerificationDateParam?.value &&\n        passportResultParam?.value === '2'\n      ) {\n        // Если статус обработки = \"завершено\" и результат проверки = \"информация не найдена\"\n        esiaStatus = PassportVerificationStatus.INFO_NOT_FOUND;\n      } else if (\n        processingStatusParam?.value === '3' &&\n        passportVerificationDateParam?.value &&\n        passportResultParam?.value === '1'\n      ) {\n        // Если статус обработки = \"завершено\" и результат проверки = \"Не действителен\"\n        esiaStatus = PassportVerificationStatus.INVALID;\n      } else if (\n        processingStatusParam?.value === '3' &&\n        passportVerificationDateParam?.value &&\n        passportResultParam?.value === '0'\n      ) {\n        // Если статус обработки = \"завершено\" и результат проверки = \"Действителен\"\n        esiaStatus = PassportVerificationStatus.VALID;\n      }\n    }\n\n    return esiaStatus;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientsSearchInputDTO.html":{"url":"classes/ClientsSearchInputDTO.html","title":"class - ClientsSearchInputDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientsSearchInputDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/other/clients.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                area\n                            \n                            \n                                    \n                                    \n                                input\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchAreaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Область поиска (например, ACCOUNT_NUMBER)'})@IsEnum(SearchAreaEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Ввод для поиска клиентов'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Float, InputType, ObjectType } from '@nestjs/graphql';\nimport { IsEnum, IsIn, IsOptional, IsString } from 'class-validator';\nimport {\n  ClientDataDTO,\n  JuridicalTypeClientEnum,\n  MarketSegmentEnum,\n  PaginatedResponseType,\n  SearchAreaEnum,\n  StateClientEnum,\n} from '@web-clients-backend/shared';\n\n@InputType({ description: 'Поле для сортировки' })\nexport class SortInput {\n  @Field(() => String, { description: 'Поле для сортировки' })\n  @IsString()\n  @IsIn(['fio', 'msisdn', 'passport.serialNumber', 'birthDate'])\n  field: string;\n\n  @Field(() => String, { description: 'Направление сортировки' })\n  @IsString()\n  @IsIn(['asc', 'desc']) // Только 'asc' или 'desc'\n  direction: 'asc' | 'desc';\n\n  constructor(field: string, direction: 'asc' | 'desc') {\n    this.field = field;\n    this.direction = direction;\n  }\n}\n\n@InputType({ description: 'DTO для создания пользователя с имплементацией' })\nexport class ClientFilterInput {\n  @IsOptional()\n  @IsEnum(JuridicalTypeClientEnum, {\n    message: 'Неверный тип для juridicalType',\n  })\n  @Field(() => JuridicalTypeClientEnum, {\n    nullable: true,\n    description:\n      'Юридический вид клиента (например - \"INDIVIDUAL (Физическое лицо) \", \"ENTREPRENEUR(ИП)\", \"LEGAL_ENTITY(Юридическое лицо)\")',\n  })\n  juridicalType?: JuridicalTypeClientEnum;\n\n  @IsOptional()\n  @IsEnum(StateClientEnum, { message: 'Неверный тип для contractState' })\n  @Field(() => StateClientEnum, {\n    nullable: true,\n    description:\n      'Статус договора (например, \"ACTIVE\", \"SUSPENDED - Приостановлен\", \"BLOCKED - Блокирован\", \"CLOSED - Закрыт\")',\n  })\n  contractState?: StateClientEnum;\n\n  @IsOptional()\n  @IsEnum(MarketSegmentEnum, {\n    message: 'Неверный тип для рыночного сегмента',\n  })\n  @Field(() => MarketSegmentEnum, {\n    nullable: true,\n    description: 'Рыночный сегмент',\n  })\n  marketSegment?: MarketSegmentEnum;\n}\n\n@InputType()\nexport class ClientsSearchInputDTO {\n  @Field(() => String, { description: 'Ввод для поиска клиентов' })\n  @IsString()\n  input!: string | number;\n\n  @Field(() => SearchAreaEnum, {\n    description: 'Область поиска (например, ACCOUNT_NUMBER)',\n  })\n  @IsEnum(SearchAreaEnum)\n  area!: SearchAreaEnum;\n}\n\n@ObjectType({ description: 'Список найденных клиентов' })\nexport class ClientsSearchedDTO extends PaginatedResponseType(ClientDataDTO) {\n  @Field(() => [ClientDataDTO], { description: 'Список клиентов' })\n  override items: ClientDataDTO[];\n\n  @Field(() => Float, { description: 'Количество клиентов' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientsSearchedDTO.html":{"url":"classes/ClientsSearchedDTO.html","title":"class - ClientsSearchedDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientsSearchedDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/other/clients.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClientDataDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Список клиентов'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Количество клиентов'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:82\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Float, InputType, ObjectType } from '@nestjs/graphql';\nimport { IsEnum, IsIn, IsOptional, IsString } from 'class-validator';\nimport {\n  ClientDataDTO,\n  JuridicalTypeClientEnum,\n  MarketSegmentEnum,\n  PaginatedResponseType,\n  SearchAreaEnum,\n  StateClientEnum,\n} from '@web-clients-backend/shared';\n\n@InputType({ description: 'Поле для сортировки' })\nexport class SortInput {\n  @Field(() => String, { description: 'Поле для сортировки' })\n  @IsString()\n  @IsIn(['fio', 'msisdn', 'passport.serialNumber', 'birthDate'])\n  field: string;\n\n  @Field(() => String, { description: 'Направление сортировки' })\n  @IsString()\n  @IsIn(['asc', 'desc']) // Только 'asc' или 'desc'\n  direction: 'asc' | 'desc';\n\n  constructor(field: string, direction: 'asc' | 'desc') {\n    this.field = field;\n    this.direction = direction;\n  }\n}\n\n@InputType({ description: 'DTO для создания пользователя с имплементацией' })\nexport class ClientFilterInput {\n  @IsOptional()\n  @IsEnum(JuridicalTypeClientEnum, {\n    message: 'Неверный тип для juridicalType',\n  })\n  @Field(() => JuridicalTypeClientEnum, {\n    nullable: true,\n    description:\n      'Юридический вид клиента (например - \"INDIVIDUAL (Физическое лицо) \", \"ENTREPRENEUR(ИП)\", \"LEGAL_ENTITY(Юридическое лицо)\")',\n  })\n  juridicalType?: JuridicalTypeClientEnum;\n\n  @IsOptional()\n  @IsEnum(StateClientEnum, { message: 'Неверный тип для contractState' })\n  @Field(() => StateClientEnum, {\n    nullable: true,\n    description:\n      'Статус договора (например, \"ACTIVE\", \"SUSPENDED - Приостановлен\", \"BLOCKED - Блокирован\", \"CLOSED - Закрыт\")',\n  })\n  contractState?: StateClientEnum;\n\n  @IsOptional()\n  @IsEnum(MarketSegmentEnum, {\n    message: 'Неверный тип для рыночного сегмента',\n  })\n  @Field(() => MarketSegmentEnum, {\n    nullable: true,\n    description: 'Рыночный сегмент',\n  })\n  marketSegment?: MarketSegmentEnum;\n}\n\n@InputType()\nexport class ClientsSearchInputDTO {\n  @Field(() => String, { description: 'Ввод для поиска клиентов' })\n  @IsString()\n  input!: string | number;\n\n  @Field(() => SearchAreaEnum, {\n    description: 'Область поиска (например, ACCOUNT_NUMBER)',\n  })\n  @IsEnum(SearchAreaEnum)\n  area!: SearchAreaEnum;\n}\n\n@ObjectType({ description: 'Список найденных клиентов' })\nexport class ClientsSearchedDTO extends PaginatedResponseType(ClientDataDTO) {\n  @Field(() => [ClientDataDTO], { description: 'Список клиентов' })\n  override items: ClientDataDTO[];\n\n  @Field(() => Float, { description: 'Количество клиентов' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apime\n                                        \n                                \n                                \n                                        \n                                            broker\n                                        \n                                \n                                \n                                        \n                                            elasticsearchNode\n                                        \n                                \n                                \n                                        \n                                            kafka\n                                        \n                                \n                                \n                                        \n                                            lokiHost\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            postgres\n                                        \n                                \n                                \n                                        \n                                            redis\n                                        \n                                \n                                \n                                        \n                                            tz\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apime:         ConfigurationApiMe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigurationApiMe\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Конфигурация API Me.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        broker\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        broker:         ConfigurationBroker\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigurationBroker\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Конфигурация брокера сообщений.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elasticsearchNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elasticsearchNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Адрес узла Elasticsearch.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kafka\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kafka:         ConfigurationKafka\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigurationKafka\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Конфигурация Kafka.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lokiHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lokiHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Адрес узла Loki для логирования.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Порт, на котором будет работать приложение.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postgres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postgres:         ConfigurationPostgres\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigurationPostgres\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Конфигурация PostgreSQL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redis:         ConfigurationRedis\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigurationRedis\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Конфигурация Redis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tz\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tz:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Часовой пояс приложения.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationApiMe.html":{"url":"interfaces/ConfigurationApiMe.html","title":"interface - ConfigurationApiMe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationApiMe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pass\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Пароль для доступа к APIMe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URI APIMe.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationBroker.html":{"url":"interfaces/ConfigurationBroker.html","title":"interface - ConfigurationBroker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationBroker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            queues\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            vhost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        queues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queues:         ConfigurationBrokerQueue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigurationBrokerQueue\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Очереди, используемые в брокере.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL брокера сообщений.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vhost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vhost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Виртуальный хост брокера.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationBrokerQueue.html":{"url":"interfaces/ConfigurationBrokerQueue.html","title":"interface - ConfigurationBrokerQueue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationBrokerQueue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dl\n                                        \n                                \n                                \n                                        \n                                            gq\n                                        \n                                \n                                \n                                        \n                                            jz\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя очереди DL.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gq\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gq:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя очереди GQ.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jz\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jz:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя очереди JZ.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationKafka.html":{"url":"interfaces/ConfigurationKafka.html","title":"interface - ConfigurationKafka","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationKafka\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            clientID\n                                        \n                                \n                                \n                                        \n                                            groupID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Адрес Kafka брокера.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор группы.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationKeycloak.html":{"url":"interfaces/ConfigurationKeycloak.html","title":"interface - ConfigurationKeycloak","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationKeycloak\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            client_id\n                                        \n                                \n                                \n                                        \n                                            client_secret\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            keycloakGuard\n                                        \n                                \n                                \n                                        \n                                            realm\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        client_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        client_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор клиента в Keycloak.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        client_secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        client_secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Секрет клиента в Keycloak.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Адрес хоста Keycloak.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keycloakGuard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keycloakGuard:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг активации защиты с помощью Keycloak.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        realm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        realm:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя Realm-а в Keycloak.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationPostgres.html":{"url":"interfaces/ConfigurationPostgres.html","title":"interface - ConfigurationPostgres","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationPostgres\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            log\n                                        \n                                \n                                \n                                        \n                                            pass\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            sync\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название базы данных.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг для включения/выключения логирования запросов.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Пароль базы данных.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Порт подключения к базе данных.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sync\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sync:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг для синхронизации схемы.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя пользователя базы данных.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationRedis.html":{"url":"interfaces/ConfigurationRedis.html","title":"interface - ConfigurationRedis","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationRedis\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/configuration.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            pass\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Адрес Redis сервера.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Пароль для подключения к Redis.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Порт Redis сервера.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Configuration {\n  /**\n   * Порт, на котором будет работать приложение.\n   */\n  port: number;\n\n  /**\n   * Часовой пояс приложения.\n   */\n  tz: string;\n\n  /**\n   * Адрес узла Elasticsearch.\n   */\n  elasticsearchNode: string;\n\n  /**\n   * Адрес узла Loki для логирования.\n   */\n  lokiHost: string;\n\n  /**\n   * Конфигурация брокера сообщений.\n   */\n  broker: ConfigurationBroker;\n\n  /**\n   * Конфигурация Redis.\n   */\n  redis: ConfigurationRedis;\n\n  /**\n   * Конфигурация Kafka.\n   */\n  kafka: ConfigurationKafka;\n\n  /**\n   * Конфигурация PostgreSQL.\n   */\n  postgres: ConfigurationPostgres;\n\n  /**\n   * Конфигурация API Me.\n   */\n  apime: ConfigurationApiMe;\n}\n\n/**\n * @interface ConfigurationBroker\n * @description Конфигурация брокера сообщений.\n */\nexport interface ConfigurationBroker {\n  /**\n   * URL брокера сообщений.\n   */\n  url: string;\n\n  /**\n   * Виртуальный хост брокера.\n   */\n  vhost: string;\n\n  /**\n   * Очереди, используемые в брокере.\n   */\n  queues: ConfigurationBrokerQueue;\n}\n\n/**\n * @interface ConfigurationBrokerQueue\n * @description Конфигурация очередей брокера сообщений.\n */\nexport interface ConfigurationBrokerQueue {\n  /**\n   * Имя очереди GQ.\n   */\n  gq: string;\n\n  /**\n   * Имя очереди DL.\n   */\n  dl: string;\n\n  /**\n   * Имя очереди JZ.\n   */\n  jz: string;\n}\n\n/**\n * @interface ConfigurationKafka\n * @description Конфигурация Kafka.\n */\nexport interface ConfigurationKafka {\n  /**\n   * Адрес Kafka брокера.\n   */\n  address: string;\n\n  /**\n   * Идентификатор клиента.\n   */\n  clientID: string;\n\n  /**\n   * Идентификатор группы.\n   */\n  groupID: string;\n}\n\n/**\n * @interface ConfigurationPostgres\n * @description Конфигурация базы данных PostgreSQL.\n */\nexport interface ConfigurationPostgres {\n  /**\n   * Имя пользователя базы данных.\n   */\n  user: string;\n\n  /**\n   * Пароль базы данных.\n   */\n  pass: string;\n\n  /**\n   * Название базы данных.\n   */\n  database: string;\n\n  /**\n   * Порт подключения к базе данных.\n   */\n  port: string;\n\n  /**\n   * Флаг для включения/выключения логирования запросов.\n   */\n  log: boolean;\n\n  /**\n   * Флаг для синхронизации схемы.\n   */\n  sync: boolean;\n}\n/**\n * @interface ConfigurationRedis\n * @description Конфигурация Redis.\n */\nexport interface ConfigurationRedis {\n  /**\n   * Адрес Redis сервера.\n   */\n  host: string;\n\n  /**\n   * Порт Redis сервера.\n   */\n  port: number;\n\n  /**\n   * Пароль для подключения к Redis.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationApiMe\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationApiMe {\n  /**\n   * URI APIMe.\n   */\n  uri: string;\n\n  /**\n   * Пароль для доступа к APIMe.\n   */\n  pass: string;\n}\n\n/**\n * @interface ConfigurationKeycloak\n * @description Конфигурация APIMe.\n */\nexport interface ConfigurationKeycloak {\n  /**\n   * Флаг активации защиты с помощью Keycloak.\n   */\n  keycloakGuard: boolean;\n\n  /**\n   * Адрес хоста Keycloak.\n   */\n  host: string;\n\n  /**\n   * Имя Realm-а в Keycloak.\n   */\n  realm: string;\n\n  /**\n   * Идентификатор клиента в Keycloak.\n   */\n  client_id: string;\n\n  /**\n   * Секрет клиента в Keycloak.\n   */\n  client_secret: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nKeycloakModule\n\nKeycloakModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nKeycloakModule->CoreModule\n\n\n\n\n\nRabbitModule\n\nRabbitModule\n\nCoreModule -->\n\nRabbitModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/core/src/lib/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UptimeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            KeycloakModule\n                        \n                        \n                            RabbitModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/core/src/lib/core.module.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nЭкземпляр MiddlewareConsumer для применения промежуточного ПО.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { graphqlUploadExpress } from 'graphql-upload';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { RedisCache } from 'apollo-server-cache-redis';\n\nimport { ApolloServerPlugin } from '@apollo/server';\nimport { CoreResolver } from './core.resolver';\nimport { UptimeController } from './uptime.controller';\nimport { RabbitModule } from '@web-clients-backend/rabbit';\nimport {\n  METRICS_PLUGIN_KEY,\n  PromModule,\n  TRACING_PLUGIN_KEY,\n} from '@web-clients-backend/metrics';\nimport { ConfigurationRedis } from '@web-clients-backend/shared';\nimport { APP_GUARD } from '@nestjs/core';\nimport { KeycloakModule } from '@web-clients-backend/keycloak';\nimport { KeycloakTokenGuard } from '@web-clients-backend/keycloak';\n\n/**\n * @module CoreModule\n * @description Модуль для основной логики приложения, включающий поддержку GraphQL, Redis и других зависимостей.\n */\n@Module({\n  imports: [\n    /**\n     * @import ConfigModule\n     * @description Модуль для работы с конфигурациями приложения.\n     */\n    ConfigModule,\n    KeycloakModule,\n\n    /**\n     * @import GraphQLModule\n     * @description Модуль для интеграции GraphQL с ApolloServer.\n     * @type {GraphQLModule}\n     * @returns {ApolloDriverConfig} Конфигурация для ApolloServer.\n     * @properties\n     *   @property {boolean} debug - Включает режим отладки.\n     *   @property {boolean} uploads - Включает поддержку загрузки файлов.\n     *   @property {boolean} introspection - Включает интроспекцию схемы.\n     *   @property {boolean} playground - Включает GraphQL Playground.\n     *   @property {boolean} installSubscriptionHandlers - Включает обработчики подписок.\n     *   @property {Object} cors - Настройки CORS.\n     *     @property {boolean} credentials - Включает поддержку учетных данных.\n     *     @property {string} origin - Указывает источник для CORS.\n     *   @property {Object} persistedQueries - Настройки для кеширования сохраненных запросов.\n     *     @property {RedisCache} cache - Объект Redis для кеширования.\n     *     @property {number} ttl - Время жизни кеша в секундах.\n     *   @property {Array} plugins - Массив плагинов для ApolloServer.\n     *   @property {string} autoSchemaFile - Файл для автоматического создания схемы.\n     *   @property {boolean} sortSchema - Указывает, следует ли сортировать схему.\n     */\n    GraphQLModule.forRootAsync({\n      driver: ApolloDriver,\n      imports: [ConfigModule, PromModule],\n      useFactory: (\n        configService: ConfigService,\n        tracingPlugin: ApolloServerPlugin,\n        metricsPlugin: ApolloServerPlugin\n      ) => {\n        const redisConfig = configService.get('redis');\n        const isPlayGround = configService.get('playgroundGQL');\n        if (!redisConfig) {\n          throw new Error('Redis configuration is missing');\n        }\n        return {\n          debug: true,\n          uploads: true,\n          introspection: true,\n          playground: isPlayGround,\n          installSubscriptionHandlers: true,\n          subscriptions: {\n            'graphql-ws': true,\n            'subscriptions-transport-ws': true,\n          },\n          cors: {\n            credentials: true,\n            origin: true,\n          },\n          persistedQueries: {\n            cache: new RedisCache({\n              host: redisConfig.host,\n              port: redisConfig.port,\n              password: redisConfig.pass,\n            }),\n            ttl: 86400, // Время жизни кеша\n          },\n          plugins: [tracingPlugin, metricsPlugin],\n          autoSchemaFile: 'schema.gql',\n          https: false, // Отключение проверки SSL TODO\n          sortSchema: true,\n        };\n      },\n      inject: [ConfigService, TRACING_PLUGIN_KEY, METRICS_PLUGIN_KEY],\n    }),\n    /**\n     * @import RabbitModule\n     * @description Модуль для работы с RabbitMQ.\n     */\n    RabbitModule,\n  ],\n  providers: [\n    CoreResolver,\n    {\n      provide: APP_GUARD,\n      useClass: KeycloakTokenGuard, // Установка глобального Guard\n    },\n  ],\n  controllers: [UptimeController],\n  exports: [],\n})\nexport class CoreModule {\n  /**\n   * @method configure\n   * @description Метод для применения промежуточного ПО к маршрутам.\n   * @param {MiddlewareConsumer} consumer - Экземпляр MiddlewareConsumer для применения промежуточного ПО.\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(graphqlUploadExpress()).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreResolver.html":{"url":"classes/CoreResolver.html","title":"class - CoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/core.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uptime\n                        \n                    \n                \n            \n            \n                \n                        \n                    uptime(context: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {description: 'Возвращает время работы сервера в секундах'})\n                \n            \n\n                    \n                        \n                            Defined in libs/core/src/lib/core.resolver.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Context, Float, Query, Resolver } from '@nestjs/graphql';\n\n@Resolver()\nexport class CoreResolver {\n  @Query(() => Float, {\n    description: 'Возвращает время работы сервера в секундах',\n  })\n  uptime(@Context() context: any): number {\n    return process.uptime();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DLMessagePattern.html":{"url":"controllers/DLMessagePattern.html","title":"controller - DLMessagePattern","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DLMessagePattern\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/data-loader/src/app/dl.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getClientData\n                            \n                            \n                                    \n                                    Async\n                                searchClientByAccount\n                            \n                            \n                                    \n                                    Async\n                                searchClientByContract\n                            \n                            \n                                    \n                                    Async\n                                searchClientByDGN\n                            \n                            \n                                    \n                                    Async\n                                searchClientByMsisdn\n                            \n                            \n                                    \n                                    Async\n                                searchClientByName\n                            \n                            \n                                    \n                                    Async\n                                searchClientByPassport\n                            \n                            \n                                    \n                                    Async\n                                searchClientBySubscriberNumber\n                            \n                            \n                                    \n                                    Async\n                                searchClientByTitle\n                            \n                            \n                                    \n                                    Async\n                                searchClientIcc\n                            \n                            \n                                    \n                                    Async\n                                searchUnlinkedMsisdns\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getClientData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClientData(tokenData: IAccessTokenInput, clientId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: GET_CLIENT})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenData\n                                            \n                                                            IAccessTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает данные клиента или null, если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientByAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByAccount(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_ACCOUNT_NUMBER})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientByContract\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByContract(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_CONTRACT_NUMBER})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientByDGN\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByDGN(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_DGN})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientByMsisdn\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByMsisdn(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_MSISDN})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByName(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_BY_FIO})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:63\n                        \n                    \n\n\n            \n                \n                        ПОИСК TODO\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientByPassport\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByPassport(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_PASSPORT})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientBySubscriberNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientBySubscriberNumber(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_SUBSCRIBER_NUMBER})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientByTitle\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByTitle(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_BY_TITLE})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchClientIcc\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientIcc(payload: ISearchClientPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_CLIENT_ICC})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchUnlinkedMsisdns\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchUnlinkedMsisdns(payload: ISearchUnlinkedMsisdnsPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: SEARCH_UNLINKED_MSISDNS})\n                \n            \n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.controller.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchUnlinkedMsisdnsPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MessagePattern, Payload } from '@nestjs/microservices';\nimport { DLService } from './dl.service';\nimport {\n  GET_CLIENT,\n  IAccessTokenInput,\n  IClientApiResult,\n  IDataClientSearchResponse,\n  ISearchClientPayload,\n  ISearchUnlinkedMsisdnsPayload,\n  ISearchUnlinkedMsisdnsResponse,\n  SEARCH_CLIENT_ACCOUNT_NUMBER,\n  SEARCH_CLIENT_BY_FIO,\n  SEARCH_CLIENT_BY_TITLE,\n  SEARCH_CLIENT_CONTRACT_NUMBER,\n  SEARCH_CLIENT_DGN,\n  SEARCH_CLIENT_ICC,\n  SEARCH_CLIENT_MSISDN,\n  SEARCH_CLIENT_PASSPORT,\n  SEARCH_CLIENT_SUBSCRIBER_NUMBER,\n  SEARCH_UNLINKED_MSISDNS,\n} from '@web-clients-backend/shared';\nimport {\n  ApimeIntegrationService,\n  SearchApimeService,\n} from '@web-clients-backend/apime-integration';\n\n/**\n * @controller DLMessagePattern\n * @description Контроллер для обработки сообщений очереди data-loader\n */\n@Controller()\nexport class DLMessagePattern {\n  constructor(\n    private readonly dlService: DLService,\n    private readonly apimeIntegrationService: ApimeIntegrationService,\n    private readonly searchApimeService: SearchApimeService\n  ) {}\n\n  /**\n   * @method getClientData\n   * @description Обрабатывает запрос на получение данных клиента по токену доступа.\n   * @param {IAccessTokenInput} payload - Входные данные, содержащие токен доступа для получения данных клиента.\n   * @returns {Promise} - Возвращает данные клиента или null, если клиент не найден.\n   */\n  @MessagePattern({ cmd: GET_CLIENT })\n  async getClientData(\n    @Payload() tokenData: IAccessTokenInput,\n    @Payload() clientId: string\n  ): Promise {\n    console.debug('getClientData ' + DLMessagePattern.name);\n    const result = await this.dlService.getClientData(tokenData, clientId);\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  /**\n   * ПОИСК TODO\n   */\n  @MessagePattern({ cmd: SEARCH_CLIENT_BY_FIO })\n  async searchClientByName(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    const result = await this.searchApimeService.searchClientByFIO(payload);\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_CLIENT_BY_TITLE })\n  async searchClientByTitle(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientByTitle ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientByFIO(payload); //TOOD я хз почему один метод\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_CLIENT_SUBSCRIBER_NUMBER })\n  async searchClientBySubscriberNumber(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientBySubscriberNumber ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientBySubscriberNumber(\n      payload\n    );\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_CLIENT_MSISDN })\n  async searchClientByMsisdn(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientByMsisdn ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientByMsisdn(payload);\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n  @MessagePattern({ cmd: SEARCH_CLIENT_PASSPORT })\n  async searchClientByPassport(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientByPassport ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientByPassport(\n      payload\n    );\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_CLIENT_ACCOUNT_NUMBER })\n  async searchClientByAccount(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientByAccount ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientByAccount(payload);\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_CLIENT_CONTRACT_NUMBER })\n  async searchClientByContract(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientByContract ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientByContract(\n      payload\n    );\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_CLIENT_DGN })\n  async searchClientByDGN(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientByDGN ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientByDGN(payload);\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_CLIENT_ICC })\n  async searchClientIcc(\n    @Payload() payload: ISearchClientPayload\n  ): Promise {\n    console.debug('searchClientIcc ' + DLMessagePattern.name);\n    const result = await this.searchApimeService.searchClientIcc(payload);\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n\n  @MessagePattern({ cmd: SEARCH_UNLINKED_MSISDNS })\n  async searchUnlinkedMsisdns(\n    @Payload() payload: ISearchUnlinkedMsisdnsPayload\n  ): Promise {\n    console.debug('searchClientIcc:');\n    const result = await this.searchApimeService.searchUnlinkedMsisdns(payload);\n\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DLService.html":{"url":"injectables/DLService.html","title":"injectable - DLService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/data-loader/src/app/dl.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getClientData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apimeIntegrationService: ApimeIntegrationService)\n                    \n                \n                        \n                            \n                                Defined in apps/data-loader/src/app/dl.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apimeIntegrationService\n                                                  \n                                                        \n                                                                        ApimeIntegrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getClientData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClientData(payload: IAccessTokenInput, clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/data-loader/src/app/dl.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IAccessTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nВходные данные, содержащие токен доступа для получения данных клиента.\n\n\n                                            \n                                        \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает данные клиента или null, если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DLService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/data-loader/src/app/dl.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ApimeIntegrationService } from '@web-clients-backend/apime-integration';\nimport {\n  IAccessTokenInput,\n  IClientApiResult,\n} from '@web-clients-backend/shared';\n\n/**\n * @service DLService\n * @description Сервис для обработки логики очереди data-loader\n */\n@Injectable()\nexport class DLService {\n  private readonly logger = new Logger(DLService.name);\n\n  constructor(\n    private readonly apimeIntegrationService: ApimeIntegrationService\n  ) {}\n\n  /**\n   * @method getClientData\n   * @description Получает данные клиента по токену доступа.\n   * @param {IAccessTokenInput} payload - Входные данные, содержащие токен доступа для получения данных клиента.\n   * @returns {Promise} - Возвращает данные клиента или null, если клиент не найден.\n   */\n\n  async getClientData(\n    payload: IAccessTokenInput,\n    clientId: string\n  ): Promise {\n    const result = await this.apimeIntegrationService.getClientData(\n      payload,\n      clientId\n    );\n    if (!result) {\n      return null;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DlModule.html":{"url":"modules/DlModule.html","title":"module - DlModule","body":"\n                   \n\n\n\n\n    Modules\n    DlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DlModule\n\n\n\ncluster_DlModule_providers\n\n\n\ncluster_DlModule_imports\n\n\n\n\nApimeIntegrationModule\n\nApimeIntegrationModule\n\n\n\nDlModule\n\nDlModule\n\nDlModule -->\n\nApimeIntegrationModule->DlModule\n\n\n\n\n\nKeycloakIntegrationModule\n\nKeycloakIntegrationModule\n\nDlModule -->\n\nKeycloakIntegrationModule->DlModule\n\n\n\n\n\nDLService\n\nDLService\n\nDlModule -->\n\nDLService->DlModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/data-loader/src/app/dl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DLService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DLMessagePattern\n                        \n                        \n                            DLService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApimeIntegrationModule\n                        \n                        \n                            KeycloakIntegrationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { DLService } from './dl.service';\nimport { DLMessagePattern } from './dl.controller';\nimport configuration from './config/configuration';\nimport { validationSchema } from './config/validation';\nimport { ApimeIntegrationModule } from '@web-clients-backend/apime-integration';\nimport { KeycloakIntegrationModule } from '@web-clients-backend/keycloak-integration';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n      validationSchema: validationSchema,\n    }),\n    ApimeIntegrationModule,\n    KeycloakIntegrationModule,\n  ],\n  controllers: [DLMessagePattern, DLService],\n  providers: [DLService],\n})\nexport class DlModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentClientSearchDTO.html":{"url":"classes/DocumentClientSearchDTO.html","title":"class - DocumentClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/document.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DocumentClientSearchDTO - объектный тип для представления данных документа клиента.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDocumentClientSearch\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                issueDate\n                            \n                            \n                                    \n                                number\n                            \n                            \n                                    \n                                series\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, series: string, number: string, issueDate: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/document.dto.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        series\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        issueDate\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        issueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Дата выдачи документа'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/document.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Номер документа клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/document.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        series\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Серия документа клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/document.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Тип документа клиента (например, Паспорт РФ)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/document.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { IDocumentClientSearch } from '../../interfaces';\n\n/**\n * `DocumentClientSearchDTO` - объектный тип для представления данных документа клиента.\n */\n@ObjectType({\n  description: 'Объектный тип для представления данных документа клиента.',\n})\nexport class DocumentClientSearchDTO implements IDocumentClientSearch {\n  @Field(() => String, {\n    description: 'Тип документа клиента (например, Паспорт РФ)',\n  })\n  type: string;\n\n  @Field(() => String, { description: 'Серия документа клиента' })\n  series: string;\n\n  @Field(() => String, { description: 'Номер документа клиента' })\n  number: string;\n\n  @Field(() => String, { description: 'Дата выдачи документа' })\n  issueDate: string;\n\n  constructor(type: string, series: string, number: string, issueDate: string) {\n    this.type = type;\n    this.series = series;\n    this.number = number;\n    this.issueDate = issueDate;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EquipmentClientSearchDTO.html":{"url":"classes/EquipmentClientSearchDTO.html","title":"class - EquipmentClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EquipmentClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/equipment.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                EquipmentClientSearchDTO - объектный тип для представления оборудования клиента.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IEquipmentClientSearch\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                iccId\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                imsi\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, type: string, icc: string, imsi: string, state: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/equipment.dto.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icc\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imsi\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        iccId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'ICC ID сим-карты'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/equipment.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Идентификатор оборудования'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/equipment.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        imsi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'IMSI оборудования'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/equipment.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Состояние оборудования (например, Активирована)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/equipment.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Тип оборудования (например, GSM)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/equipment.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int } from '@nestjs/graphql';\nimport { IEquipmentClientSearch } from '../../interfaces';\n\n/**\n * `EquipmentClientSearchDTO` - объектный тип для представления оборудования клиента.\n */\n@ObjectType({\n  description: 'Объектный тип для представления оборудования клиента.',\n})\nexport class EquipmentClientSearchDTO implements IEquipmentClientSearch {\n  @Field(() => Int, { description: 'Идентификатор оборудования' })\n  id: number;\n\n  @Field(() => String, { description: 'Тип оборудования (например, GSM)' })\n  type: string;\n\n  @Field(() => String, { description: 'ICC ID сим-карты' })\n  iccId: string;\n\n  @Field(() => String, { description: 'IMSI оборудования' })\n  imsi: string;\n\n  @Field(() => String, {\n    description: 'Состояние оборудования (например, Активирована)',\n  })\n  state: string;\n\n  constructor(\n    id: number,\n    type: string,\n    icc: string,\n    imsi: string,\n    state: string\n  ) {\n    this.id = id;\n    this.type = type;\n    this.iccId = icc;\n    this.imsi = imsi;\n    this.state = state;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorFilter.html":{"url":"classes/ErrorFilter.html","title":"class - ErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/technical/error.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Обработчик исключений HTTP в NestJS.\nПерехватывает все HttpException и возвращает подробную информацию в JSON формате.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/shared/src/lib/technical/error.filter.ts:20\n                        \n                    \n\n\n            \n                \n                        Метод обработки исключений.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПерехваченное исключение.\n\n\n                                            \n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект, представляющий текущий контекст запроса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n/**\n * Обработчик исключений HTTP в NestJS.\n * Перехватывает все HttpException и возвращает подробную информацию в JSON формате.\n */\n@Catch(HttpException)\nexport class ErrorFilter implements ExceptionFilter {\n  /**\n   * Метод обработки исключений.\n   * @param exception - Перехваченное исключение.\n   * @param host - Объект, представляющий текущий контекст запроса.\n   */\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp(); // Переключаемся на HTTP-контекст.\n    const response = ctx.getResponse(); // Получаем объект ответа.\n    const request = ctx.getRequest(); // Получаем объект запроса.\n    const status = exception.getStatus(); // Извлекаем статус HTTP ошибки.\n    const contextType = host.getType(); // Определяем тип контекста (например, HTTP).\n\n    // Проверяем тип контекста.\n    if (contextType === 'http') {\n      // Формируем JSON ответ с подробной информацией об исключении.\n      return response.status(status).json({\n        statusCode: status, // HTTP статус ошибки.\n        message: exception.message, // Сообщение исключения.\n        path: request.url, // URL текущего запроса.\n        method: request.method, // HTTP метод запроса.\n        timestamp: new Date().toISOString(), // Временная метка исключения.\n      });\n    }\n\n    // Если ошибка не относится к HTTP ошибкам, то просто возвращаем null.\n    if (status >= 400 && status \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSearchAreasInputDTO.html":{"url":"classes/GetSearchAreasInputDTO.html","title":"class - GetSearchAreasInputDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSearchAreasInputDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/other/searchAreas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                input\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: string)\n                    \n                \n                        \n                            \n                                Defined in libs/search-clients/src/lib/other/searchAreas.dto.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Входное значение для определения областей поиска'})@IsNotEmpty({message: 'Поле не может быть пустым'})@IsString({message: 'Данные должны быть строкой'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/searchAreas.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport { SearchAreaEnum } from '@web-clients-backend/shared';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@ObjectType({\n  description:\n    'DTO для представления области поиска с меткой. Содержит поле `area`, представляющее область поиска, и поле `label`, представляющее строку метки, сопутствующую данной области.',\n})\nexport class SearchAreaWithLabelDTO {\n  @Field(() => SearchAreaEnum, {\n    description: 'Тип области поиска из списка возможных значений.',\n  })\n  area!: SearchAreaEnum;\n\n  @Field(() => String, {\n    description: 'Текстовое представление области поиска.',\n  })\n  label!: string;\n}\n\n@ObjectType({ description: 'Список областей поиска с метками' })\nexport class SearchAreasDTO {\n  @Field(() => [SearchAreaWithLabelDTO], {\n    description: 'Массив объектов с метками для каждого типа области поиска.',\n  })\n  areas!: SearchAreaWithLabelDTO[];\n}\n\n@InputType({ description: 'DTO для получения областей поиска' })\nexport class GetSearchAreasInputDTO {\n  @Field(() => String, {\n    description: 'Входное значение для определения областей поиска',\n  })\n  @IsNotEmpty({\n    message: 'Поле не может быть пустым',\n  })\n  @IsString({\n    message: 'Данные должны быть строкой',\n  })\n  input: string;\n\n  constructor(input: string) {\n    this.input = input;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GqlModule.html":{"url":"modules/GqlModule.html","title":"module - GqlModule","body":"\n                   \n\n\n\n\n    Modules\n    GqlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GqlModule\n\n\n\ncluster_GqlModule_imports\n\n\n\ncluster_GqlModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nGqlModule\n\nGqlModule\n\nGqlModule -->\n\nAuthModule->GqlModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nGqlModule -->\n\nCoreModule->GqlModule\n\n\n\n\n\nLogsAndJournalsModule\n\nLogsAndJournalsModule\n\nGqlModule -->\n\nLogsAndJournalsModule->GqlModule\n\n\n\n\n\nSearchClientsModule\n\nSearchClientsModule\n\nGqlModule -->\n\nSearchClientsModule->GqlModule\n\n\n\n\n\nSearchUnlinkedMsisdnsModule\n\nSearchUnlinkedMsisdnsModule\n\nGqlModule -->\n\nSearchUnlinkedMsisdnsModule->GqlModule\n\n\n\n\n\nAppService\n\nAppService\n\nGqlModule -->\n\nAppService->GqlModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/graphql/src/app/gql.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            BrokerMessage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LogsAndJournalsModule\n                        \n                        \n                            SearchClientsModule\n                        \n                        \n                            SearchUnlinkedMsisdnsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { ErrorFilter } from '@web-clients-backend/shared';\nimport { CoreModule } from '@web-clients-backend/core';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LogsAndJournalsModule } from '@web-clients-backend/logs';\nimport { BrokerMessage } from './app.broker';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from './config/configuration';\nimport { validationSchema } from './config/validation';\n// import { ClientModule } from '@web-clients-backend/client';\nimport { SearchClientsModule } from '@web-clients-backend/search-clients';\nimport { AuthModule } from '@web-clients-backend/auth';\nimport { SearchUnlinkedMsisdnsModule } from '@web-clients-backend/search-unlinked-msisdns';\n\n@Module({\n  imports: [\n    CoreModule,\n    LogsAndJournalsModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n      validationSchema: validationSchema,\n    }),\n    // ClientModule,\n    AuthModule,\n    SearchClientsModule,\n    SearchUnlinkedMsisdnsModule,\n  ],\n  controllers: [AppController, BrokerMessage],\n  providers: [\n    AppService,\n    {\n      provide: APP_FILTER,\n      useClass: ErrorFilter,\n    },\n  ],\n})\nexport class GqlModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpError.html":{"url":"interfaces/HttpError.html","title":"interface - HttpError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/errors.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления ошибки HTTP.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complete\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг завершенности обработки ошибки.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Сообщение об ошибке.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    HTTP метод, при котором произошла ошибка (например, GET, POST).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Путь запроса, вызвавшего ошибку.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Код состояния HTTP (например, 400, 404, 500).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Временная метка ошибки.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IError {\n  /** Флаг статуса ошибки (true для успешных операций, false для ошибок). */\n  status: boolean;\n\n  /** Описание ошибки (необязательное поле, может быть пустым). */\n  message?: string;\n}\n\n/**\n * Интерфейс для представления валидационной ошибки.\n */\nexport interface IValidationError {\n  /** Имя поля, которое вызвало ошибку. */\n  field: string;\n\n  /** Описание ошибки для поля. */\n  message: string;\n}\n\n/**\n * Интерфейс для представления переменных валидации.\n */\nexport interface IValidationVariables {\n  /** Флаг статуса валидации. */\n  status: boolean;\n\n  /** Список ошибок валидации. */\n  errors: IValidationError[];\n}\n\n/**\n * Интерфейс для представления ошибки HTTP.\n */\nexport interface HttpError {\n  /** Код состояния HTTP (например, 400, 404, 500). */\n  statusCode: number;\n\n  /** Сообщение об ошибке. */\n  message: string;\n\n  /** Путь запроса, вызвавшего ошибку. */\n  path: string;\n\n  /** HTTP метод, при котором произошла ошибка (например, GET, POST). */\n  method: string;\n\n  /** Флаг завершенности обработки ошибки. */\n  complete: boolean;\n\n  /** Временная метка ошибки. */\n  timestamp: string;\n}\n\n/**\n * Интерфейс для представления журнальной записи.\n */\nexport interface ILogger {\n  /**\n   * Наименование службы, генерирующей запись журнала.\n   * Например: \"AuthService\", \"ClientService\" и т. д.(для каждой службы должен быть свой тип журнала)\n   */\n  serviceName: string;\n\n  /**\n   * Сообщение журнала.\n   * Описывает событие или ошибку, которые произошли.\n   */\n  message: string;\n\n  /**\n   * Тип журнала.\n   * Например: \"INFO\" для информационных сообщений, \"ERROR\" для ошибок, \"DEBUG\" для отладки.\n   */\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccessTokenInput.html":{"url":"interfaces/IAccessTokenInput.html","title":"interface - IAccessTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccessTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/apimeInputs/apime-inputs.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для входных данных токена доступа.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            traceId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Токен доступа, используемый для авторизации пользователя или API-запроса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        traceId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        traceId:         ITraceId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITraceId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Опциональный идентификатор трассировки для отслеживания истории запросов и логов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITraceId {\n  /**\n   *  Идентификатор трассировки, уникальный для каждой сессии или запроса\n   */\n  traceID: string;\n}\n\n/**\n * Интерфейс для входных данных токена доступа.\n */\nexport interface IAccessTokenInput {\n  /**\n   * Токен доступа, используемый для авторизации пользователя или API-запроса.\n   */\n  access_token: string;\n\n  /**\n   * Опциональный идентификатор трассировки для отслеживания истории запросов и логов.\n   */\n  traceId?: ITraceId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAddressType.html":{"url":"interfaces/IAddressType.html","title":"interface - IAddressType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAddressType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/addressType.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления типа адреса.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            juridicalTypeId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Описание типа адреса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа адреса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        juridicalTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        juridicalTypeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор юридического типа, к которому относится адрес.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа адреса.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IAddressType {\n  /**\n   * Идентификатор типа адреса.\n   */\n  id: number;\n\n  /**\n   * Название типа адреса.\n   */\n  name: string;\n\n  /**\n   * Описание типа адреса.\n   */\n  description: string;\n\n  /**\n   * Идентификатор юридического типа, к которому относится адрес.\n   */\n  juridicalTypeId: number;\n}\n\n/**\n * Интерфейс для ответа, содержащего массив типов адресов.\n */\nexport interface IAddressTypesResponse {\n  /**\n   * Массив типов адресов.\n   */\n  addressTypes: IAddressType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAddressTypesResponse.html":{"url":"interfaces/IAddressTypesResponse.html","title":"interface - IAddressTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAddressTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/addressType.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для ответа, содержащего массив типов адресов.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addressTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addressTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addressTypes:         IAddressType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAddressType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив типов адресов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IAddressType {\n  /**\n   * Идентификатор типа адреса.\n   */\n  id: number;\n\n  /**\n   * Название типа адреса.\n   */\n  name: string;\n\n  /**\n   * Описание типа адреса.\n   */\n  description: string;\n\n  /**\n   * Идентификатор юридического типа, к которому относится адрес.\n   */\n  juridicalTypeId: number;\n}\n\n/**\n * Интерфейс для ответа, содержащего массив типов адресов.\n */\nexport interface IAddressTypesResponse {\n  /**\n   * Массив типов адресов.\n   */\n  addressTypes: IAddressType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IApiMeHealth.html":{"url":"interfaces/IApiMeHealth.html","title":"interface - IApiMeHealth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IApiMeHealth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/apime-integration/src/lib/other/static.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления состояния здоровья API.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ApimeCorePkg\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ApimeCorePkg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ApimeCorePkg:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IApiMeHealth {\n  ApimeCorePkg: boolean; // Состояние ядра API ME\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBalanceClient.html":{"url":"interfaces/IBalanceClient.html","title":"interface - IBalanceClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBalanceClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/balance.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для данных баланса клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            monetary\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        monetary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        monetary:         (IMonetaryClient | null)[] | EA\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         (IMonetaryClient | null)[] | EA\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив монетарных балансов клиента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EA } from '../../types';\nimport { IMonetaryClient } from './monetary.interface';\n\n/**\n * Интерфейс для данных баланса клиента.\n */\nexport interface IBalanceClient {\n  /**\n   * Массив монетарных балансов клиента.\n   */\n  monetary: (IMonetaryClient | null)[] | EA;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBillingDeliveryType.html":{"url":"interfaces/IBillingDeliveryType.html","title":"interface - IBillingDeliveryType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBillingDeliveryType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/billingDeliveryType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа доставки счета.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа доставки счета.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface IBillingDeliveryType {\n  /**\n   * Идентификатор типа доставки счета.\n   */\n  id: number;\n\n  /**\n   * Название типа доставки счета.\n   */\n  name: string;\n}\n\n/**\n * @interface IBillingDeliveryTypesResponse\n * @description Массив объектов типов доставки счетов.\n */\nexport interface IBillingDeliveryTypesResponse {\n  /**\n   * Массив объектов типов доставки счетов.\n   */\n  billingDeliveryTypes: IBillingDeliveryType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBillingDeliveryTypesResponse.html":{"url":"interfaces/IBillingDeliveryTypesResponse.html","title":"interface - IBillingDeliveryTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBillingDeliveryTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/billingDeliveryType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            billingDeliveryTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        billingDeliveryTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        billingDeliveryTypes:         IBillingDeliveryType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IBillingDeliveryType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов доставки счетов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface IBillingDeliveryType {\n  /**\n   * Идентификатор типа доставки счета.\n   */\n  id: number;\n\n  /**\n   * Название типа доставки счета.\n   */\n  name: string;\n}\n\n/**\n * @interface IBillingDeliveryTypesResponse\n * @description Массив объектов типов доставки счетов.\n */\nexport interface IBillingDeliveryTypesResponse {\n  /**\n   * Массив объектов типов доставки счетов.\n   */\n  billingDeliveryTypes: IBillingDeliveryType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICategory.html":{"url":"interfaces/ICategory.html","title":"interface - ICategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-unlinked-msisdns/response.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для категории MSISDN.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Уникальный идентификатор категории.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название категории.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IState {\n  /**\n   * Уникальный идентификатор состояния.\n   */\n  id: number;\n\n  /**\n   * Название состояния.\n   */\n  name: string;\n\n  /**\n   * Дата и время изменения состояния.\n   */\n  changedAt: string;\n}\n\n/**\n * Интерфейс для категории MSISDN.\n */\nexport interface ICategory {\n  /**\n   * Уникальный идентификатор категории.\n   */\n  id: number;\n\n  /**\n   * Название категории.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для региона MSISDN.\n */\nexport interface IRegion {\n  /**\n   * Уникальный идентификатор региона.\n   */\n  id: number;\n\n  /**\n   * Название региона.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для MSISDN объекта.\n */\nexport interface IMsisdn {\n  /**\n   * Уникальный идентификатор MSISDN.\n   */\n  id: number;\n\n  /**\n   * Сам номер MSISDN.\n   */\n  msisdn: number;\n\n  /**\n   * Комментарий к MSISDN.\n   * Поле необязательное.\n   */\n  comment?: string;\n\n  /**\n   * Состояние MSISDN.\n   */\n  state: IState;\n\n  /**\n   * Категория MSISDN.\n   */\n  category: ICategory;\n\n  /**\n   * Регион MSISDN.\n   */\n  region: IRegion;\n}\n\n/**\n * Интерфейс для ответа поиска свободных MSISDN.\n */\nexport interface ISearchUnlinkedMsisdnsResponse {\n  /**\n   * Список MSISDN, соответствующих условиям поиска.\n   * Может содержать `null` для некоторых записей.\n   */\n  msisdns: (IMsisdn | null)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICityType.html":{"url":"interfaces/ICityType.html","title":"interface - ICityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/cityType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICityType {\n  id: number; // Идентификатор типа города\n  name: string; // Название типа города\n}\n\n/**\n * @interface ICityTypesResponse\n * @description Структура ответа, содержащая список типов городов.\n */\nexport interface ICityTypesResponse {\n  /**\n   * Массив объектов типов городов.\n   */\n  cityTypes: ICityType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICityTypesResponse.html":{"url":"interfaces/ICityTypesResponse.html","title":"interface - ICityTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICityTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/cityType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cityTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cityTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cityTypes:         ICityType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICityType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов городов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICityType {\n  id: number; // Идентификатор типа города\n  name: string; // Название типа города\n}\n\n/**\n * @interface ICityTypesResponse\n * @description Структура ответа, содержащая список типов городов.\n */\nexport interface ICityTypesResponse {\n  /**\n   * Массив объектов типов городов.\n   */\n  cityTypes: ICityType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClientApiResult.html":{"url":"interfaces/IClientApiResult.html","title":"interface - IClientApiResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClientApiResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/client.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для данных результата API клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            clientName\n                                        \n                                \n                                \n                                        \n                                            clientType\n                                        \n                                \n                                \n                                        \n                                            contract\n                                        \n                                \n                                \n                                        \n                                            customerId\n                                        \n                                \n                                \n                                        \n                                            documents\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            equipment\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            juridicalType\n                                        \n                                \n                                \n                                        \n                                            optionalProperties\n                                        \n                                \n                                \n                                        \n                                            paymentType\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            relation\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            subscribers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер счета.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         IBalanceClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IBalanceClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Баланс клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientName:         INameClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         INameClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientType:         IClientType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IClientType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contract\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contract:         IContractClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IContractClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Договор клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customerId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        documents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        documents:         IDocumentClient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDocumentClient[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив документов клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Почтовый адрес клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        equipment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        equipment:         IEquipmentClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IEquipmentClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Оборудование клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        juridicalType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        juridicalType:         IJuridicalType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IJuridicalType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Юридический тип клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionalProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionalProperties:         IOptionalPropertyClient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IOptionalPropertyClient[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дополнительные свойства клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymentType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymentType:         IPaymentTypeClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPaymentTypeClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип оплаты клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         IRegionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRegionType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Регион клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relation:         IRelationClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRelationClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Отношения клиента ?? Дети родители все дела.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         IStateClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStateClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Состояние клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribers:         ISubscriberClient[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISubscriberClient[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив абонентов клиента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IJuridicalType, IRegionType, IClientType } from '../dictionary';\nimport { IBalanceClient } from './balance.interface';\nimport { IContractClient } from './contract.interface';\nimport { IDocumentClient } from './document.interface';\nimport { IEquipmentClient } from './equipment.interface';\nimport { INameClient } from './name.interface';\nimport { IOptionalPropertyClient } from './optionalProperty.interface';\nimport { IPaymentTypeClient } from './paymentType.interface';\nimport { IRelationClient } from './relation.interface';\nimport { IStateClient } from './state.interface';\nimport { ISubscriberClient } from './subscriber.interface';\n\n/**\n * Интерфейс для данных результата API клиента.\n */\nexport interface IClientApiResult {\n  /**\n   * ID клиента.\n   */\n  id: number;\n\n  /**\n   * ID клиента.\n   */\n  customerId: number;\n\n  /**\n   * Номер счета.\n   */\n  account: number;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: IBalanceClient;\n\n  /**\n   * Юридический тип клиента.\n   */\n  juridicalType: IJuridicalType;\n\n  /**\n   * Регион клиента.\n   */\n  region: IRegionType;\n\n  /**\n   * Имя клиента.\n   */\n  clientName: INameClient;\n\n  /**\n   * Договор клиента.\n   */\n  contract: IContractClient;\n\n  /**\n   * Массив документов клиента.\n   */\n  documents: IDocumentClient[];\n\n  /**\n   * Тип оплаты клиента.\n   */\n  paymentType: IPaymentTypeClient;\n\n  /**\n   * Тип клиента.\n   */\n  clientType: IClientType;\n\n  /**\n   * Состояние клиента.\n   */\n  state: IStateClient;\n\n  /**\n   * Оборудование клиента.\n   */\n  equipment: IEquipmentClient;\n\n  /**\n   * Массив абонентов клиента.\n   */\n  subscribers: ISubscriberClient[];\n\n  /**\n   * Дополнительные свойства клиента.\n   */\n  optionalProperties: IOptionalPropertyClient[];\n\n  /**\n   * Почтовый адрес клиента.\n   */\n  email: string;\n\n  /**\n   * Отношения клиента ?? Дети родители все дела.\n   */\n  relation: IRelationClient;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClientSearch.html":{"url":"interfaces/IClientSearch.html","title":"interface - IClientSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClientSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            additionalPhone\n                                        \n                                \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            contractNumber\n                                        \n                                \n                                \n                                        \n                                            fio\n                                        \n                                \n                                \n                                        \n                                            iccId\n                                        \n                                \n                                \n                                        \n                                            juridicalType\n                                        \n                                \n                                \n                                        \n                                            msisdn\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            segment\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер лицевого счета клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        additionalPhone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additionalPhone:         NN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дополнительный городской номер телефона клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         NN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Баланс клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата рождения клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contractNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер договора клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fio:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Полное имя клиента в структуре.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccId:         NN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        juridicalType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        juridicalType:         JuridicalType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JuridicalType | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msisdn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msisdn:         NN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Абонентский номер телефона.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Паспортные данные клиента, включая серию и номер паспорта.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Регион клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         SegmentType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SegmentType | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         StateType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateType | string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Текущий статус клиента (например, активен, заблокирован и т.д.).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClientSearchResult.html":{"url":"interfaces/IClientSearchResult.html","title":"interface - IClientSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClientSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            account\n                                        \n                                \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            clientType\n                                        \n                                \n                                \n                                        \n                                            contractNumber\n                                        \n                                \n                                \n                                        \n                                            document\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            juridicalType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            subscribers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        account:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер лицевого счета клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         IBalanceClient | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IBalanceClient | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Баланс клиента. Может быть null если номер закрыт.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата рождения клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientType:         SegmentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SegmentType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип клиента (например, массовый рынок, VIP и т.д.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contractNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contractNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер договора клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        document\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        document:         IDocumentClientSearch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDocumentClientSearch\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Данные документа клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        juridicalType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        juridicalType:         JuridicalType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JuridicalType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         INameClientSearch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         INameClientSearch\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя клиента с детализированными данными (структурированное или неструктурированное).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         StateType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Текущий статус клиента (например, активен, заблокирован и т.д.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribers:     (ISubscriberClientSearch | null)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (ISubscriberClientSearch | null)[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Подписчики клиента. Может содержать null если нет информации о подписчиках.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClientType.html":{"url":"interfaces/IClientType.html","title":"interface - IClientType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClientType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/clientType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа клиента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IClientType {\n  /**\n   * Идентификатор типа клиента.\n   */\n  id: number;\n\n  /**\n   * Название типа клиента.\n   */\n  name: string;\n}\n\n/**\n * @interface IClientTypesResponse\n * @description Массив объектов типов клиентов.\n */\nexport interface IClientTypesResponse {\n  /**\n   * Массив объектов типов клиентов.\n   */\n  clientTypes: IClientType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClientTypesResponse.html":{"url":"interfaces/IClientTypesResponse.html","title":"interface - IClientTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClientTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/clientType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clientTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientTypes:         IClientType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IClientType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов клиентов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IClientType {\n  /**\n   * Идентификатор типа клиента.\n   */\n  id: number;\n\n  /**\n   * Название типа клиента.\n   */\n  name: string;\n}\n\n/**\n * @interface IClientTypesResponse\n * @description Массив объектов типов клиентов.\n */\nexport interface IClientTypesResponse {\n  /**\n   * Массив объектов типов клиентов.\n   */\n  clientTypes: IClientType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContactClient.html":{"url":"interfaces/IContactClient.html","title":"interface - IContactClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IContactClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/contact.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для данных контактного лица клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя контактного лица.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Телефон контактного лица.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IContactClient {\n  /**\n   * Имя контактного лица.\n   */\n  name: string;\n\n  /**\n   * Телефон контактного лица.\n   */\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContractClient.html":{"url":"interfaces/IContractClient.html","title":"interface - IContractClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IContractClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/contract.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для данных договора клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            contact\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            inn\n                                        \n                                \n                                \n                                        \n                                            nameStr\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            signedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата рождения клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contact\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contact:         IContactClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IContactClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Контактное лицо клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         IGenderClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGenderClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Пол клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор договора.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ИНН клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameStr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nameStr:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Формат имени (Фамилия Имя Отчество).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер договора.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата заключения договора.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IContactClient } from './contact.interface';\nimport { IGenderClient } from './gender.interface';\n\n/**\n * Интерфейс для данных договора клиента.\n */\nexport interface IContractClient {\n  /**\n   * Идентификатор договора.\n   */\n  id: number;\n\n  /**\n   * Номер договора.\n   */\n  number: string;\n\n  /**\n   * Дата заключения договора.\n   */\n  signedAt: string;\n\n  /**\n   * Формат имени (Фамилия Имя Отчество).\n   */\n  nameStr: string;\n\n  /**\n   * Пол клиента.\n   */\n  gender: IGenderClient;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * ИНН клиента.\n   */\n  inn: string;\n\n  /**\n   * Контактное лицо клиента.\n   */\n  contact: IContactClient;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountryType.html":{"url":"interfaces/ICountryType.html","title":"interface - ICountryType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICountryType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/countryType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICountryType {\n  id: number; // Идентификатор типа страны\n  name: string; // Название типа страны\n}\n\n/**\n * @interface ICountryTypesResponse\n * @description Структура ответа, содержащая список типов стран.\n */\nexport interface ICountryTypesResponse {\n  /**\n   * Массив объектов типов стран.\n   */\n  countries: ICountryType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICountryTypesResponse.html":{"url":"interfaces/ICountryTypesResponse.html","title":"interface - ICountryTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICountryTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/countryType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            countries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        countries:         ICountryType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICountryType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов стран.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICountryType {\n  id: number; // Идентификатор типа страны\n  name: string; // Название типа страны\n}\n\n/**\n * @interface ICountryTypesResponse\n * @description Структура ответа, содержащая список типов стран.\n */\nexport interface ICountryTypesResponse {\n  /**\n   * Массив объектов типов стран.\n   */\n  countries: ICountryType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateJournal.html":{"url":"interfaces/ICreateJournal.html","title":"interface - ICreateJournal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateJournal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/journals/journals.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            additionalData\n                                        \n                                \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additionalData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additionalData:     Record | Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record | Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Дополнительные данные, если есть.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Логин админа, создающего запись.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сервиса, к которому будет относиться новая запись.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Текст записи журнала.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IJournal {\n  /**\n   * Уникальный идентификатор записи журнала.\n   */\n  id: string;\n\n  /**\n   * Название сервиса, к которому относится запись.\n   */\n  service: string;\n\n  /**\n   * Логин админа, который создал запись.\n   */\n  admin: string;\n\n  /**\n   * Текст записи журнала.\n   */\n  text: string;\n\n  /**\n   * Дата и время регистрации записи.\n   */\n  registred: Date;\n\n  /**\n   * Дополнительные данные, если есть.\n   */\n  additionalData?: Record | Array>;\n}\n\n/**\n * @interface ISearchJournal\n * @description Параметры для поиска записей в журнале.\n */\nexport interface ISearchJournal {\n  /**\n   * Фильтр по названию сервиса (необязательный).\n   */\n  service?: string;\n\n  /**\n   * Логин админа для фильтрации записей (необязательный).\n   */\n  admin?: string;\n\n  /**\n   * Дата начала фильтрации (формат: \"2024-08-16T00:00:00Z\", необязательный).\n   */\n  fromDate?: string;\n\n  /**\n   * Дата окончания фильтрации (формат: \"2024-08-17T23:59:59Z\", необязательный).\n   */\n  toDate?: string;\n\n  /**\n   * Заголовок для фильтрации записей (необязательный).\n   */\n  title?: string;\n\n  /**\n   * Идентификатор данных для фильтрации записей (необязательный).\n   */\n  dataId?: string;\n}\n\n/**\n * @interface ICreateJournal\n * @description Описание структуры данных для создания новой записи в журнале.\n */\nexport interface ICreateJournal {\n  /**\n   * Название сервиса, к которому будет относиться новая запись.\n   */\n  service: string;\n\n  /**\n   * Логин админа, создающего запись.\n   */\n  admin: string;\n\n  /**\n   * Текст записи журнала.\n   */\n  text: string;\n\n  /**\n   * Дополнительные данные, если есть.\n   */\n  additionalData?: Record | Array>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataClientSearchResponse.html":{"url":"interfaces/IDataClientSearchResponse.html","title":"interface - IDataClientSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDataClientSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            clients\n                                        \n                                \n                                \n                                        \n                                            query\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clients:     IClientSearchResult[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IClientSearchResult[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов с результатами поиска клиентов.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:     IQueryStructured | IQueryUnStructured\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IQueryStructured | IQueryUnStructured\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Запрос в структуре или незавершенном виде.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDistrictType.html":{"url":"interfaces/IDistrictType.html","title":"interface - IDistrictType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDistrictType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/districtType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SN } from '../../../types';\n\n/**\n * @interface IDistrictType\n * @description Представляет тип района.\n */\nexport interface IDistrictType {\n  /*\n   * Идентификатор типа района\n   */\n  id: number;\n  /*\n   * Название типа района.\n   */\n  name: SN;\n}\n\n/**\n * @interface IDistrictTypesResponse\n * @description Структура ответа, содержащая список типов районов.\n */\nexport interface IDistrictTypesResponse {\n  /**\n   * Массив объектов типов районов.\n   */\n  districtTypes: IDistrictType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDistrictTypesResponse.html":{"url":"interfaces/IDistrictTypesResponse.html","title":"interface - IDistrictTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDistrictTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/districtType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            districtTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        districtTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        districtTypes:         IDistrictType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDistrictType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов районов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SN } from '../../../types';\n\n/**\n * @interface IDistrictType\n * @description Представляет тип района.\n */\nexport interface IDistrictType {\n  /*\n   * Идентификатор типа района\n   */\n  id: number;\n  /*\n   * Название типа района.\n   */\n  name: SN;\n}\n\n/**\n * @interface IDistrictTypesResponse\n * @description Структура ответа, содержащая список типов районов.\n */\nexport interface IDistrictTypesResponse {\n  /**\n   * Массив объектов типов районов.\n   */\n  districtTypes: IDistrictType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocumentClient.html":{"url":"interfaces/IDocumentClient.html","title":"interface - IDocumentClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDocumentClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/document.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для документа клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isMain\n                                        \n                                \n                                \n                                        \n                                            issueBy\n                                        \n                                \n                                \n                                        \n                                            issueDate\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            series\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isMain:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Является ли этот документ основным.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Кем выдан документ.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата выдачи документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        series\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        series:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Серия документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         IDocumentTypeClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDocumentTypeClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип документа.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IDocumentTypeClient {\n  /**\n   * Идентификатор типа документа.\n   */\n  id: number;\n\n  /**\n   * Название типа документа.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для документа клиента.\n */\nexport interface IDocumentClient {\n  /**\n   * Идентификатор документа.\n   */\n  id: number;\n\n  /**\n   * Тип документа.\n   */\n  type: IDocumentTypeClient;\n\n  /**\n   * Серия документа.\n   */\n  series: string;\n\n  /**\n   * Номер документа.\n   */\n  number: string;\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n\n  /**\n   * Кем выдан документ.\n   */\n  issueBy: string;\n\n  /**\n   * Является ли этот документ основным.\n   */\n  isMain: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocumentClientSearch.html":{"url":"interfaces/IDocumentClientSearch.html","title":"interface - IDocumentClientSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDocumentClientSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueDate\n                                        \n                                \n                                \n                                        \n                                            number\n                                        \n                                \n                                \n                                        \n                                            series\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата выдачи документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        series\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        series:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Серия документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип документа (например, паспорт, водительские права, ИНН).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocumentType.html":{"url":"interfaces/IDocumentType.html","title":"interface - IDocumentType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDocumentType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/documentType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Описание типа документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа документа.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IDocumentType {\n  /**\n   * Идентификатор типа документа.\n   */\n  id: number;\n\n  /**\n   * Название типа документа.\n   */\n  name: string;\n\n  /**\n   * Описание типа документа.\n   */\n  description: string;\n}\n\n/**\n * @interface IDocumentTypesResponse\n * @description Массив объектов типов документов.\n */\nexport interface IDocumentTypesResponse {\n  /**\n   * Массив объектов типов документов.\n   */\n  documentTypes: IDocumentType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocumentTypeClient.html":{"url":"interfaces/IDocumentTypeClient.html","title":"interface - IDocumentTypeClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDocumentTypeClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/document.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для типа документа клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа документа.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа документа.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IDocumentTypeClient {\n  /**\n   * Идентификатор типа документа.\n   */\n  id: number;\n\n  /**\n   * Название типа документа.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для документа клиента.\n */\nexport interface IDocumentClient {\n  /**\n   * Идентификатор документа.\n   */\n  id: number;\n\n  /**\n   * Тип документа.\n   */\n  type: IDocumentTypeClient;\n\n  /**\n   * Серия документа.\n   */\n  series: string;\n\n  /**\n   * Номер документа.\n   */\n  number: string;\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n\n  /**\n   * Кем выдан документ.\n   */\n  issueBy: string;\n\n  /**\n   * Является ли этот документ основным.\n   */\n  isMain: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocumentTypesResponse.html":{"url":"interfaces/IDocumentTypesResponse.html","title":"interface - IDocumentTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDocumentTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/documentType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            documentTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        documentTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        documentTypes:         IDocumentType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDocumentType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов документов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IDocumentType {\n  /**\n   * Идентификатор типа документа.\n   */\n  id: number;\n\n  /**\n   * Название типа документа.\n   */\n  name: string;\n\n  /**\n   * Описание типа документа.\n   */\n  description: string;\n}\n\n/**\n * @interface IDocumentTypesResponse\n * @description Массив объектов типов документов.\n */\nexport interface IDocumentTypesResponse {\n  /**\n   * Массив объектов типов документов.\n   */\n  documentTypes: IDocumentType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEnum.html":{"url":"interfaces/IEnum.html","title":"interface - IEnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/enum.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для описания структур данных, связывающих значения перечислений с их метками.\nИспользуется для:\n\nСвязывания программно-ориентированных значений (например, идентификаторов или кодов)\nс их человеко-читаемыми метками.\nУпрощения отображения данных в пользовательских интерфейсах (UI), таких как выпадающие списки, таблицы и т.д.\nОбеспечения связи между логикой приложения и визуальной частью.\n\nПример:\nЕсли  есть перечисление UserRole с ключами, можно создать массив значений, где каждому\nключу соответствует метка для отображения пользователю.\nПример использования:\nExample :enum UserRole {\n  ADMIN = 'admin',\n  USER = 'user',\n  GUEST = 'guest',\n}\n\nconst roles: IEnum[] = [\n  { value: UserRole.ADMIN, label: 'Администратор' },\n  { value: UserRole.USER, label: 'Пользователь' },\n  { value: UserRole.GUEST, label: 'Гость' },\n];\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Метка для отображения значения.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Значение перечисления.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IEnum {\n  /**\n   * Значение перечисления.\n   */\n  value: T;\n\n  /**\n   * Метка для отображения значения.\n   */\n  label: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEquipmentClient.html":{"url":"interfaces/IEquipmentClient.html","title":"interface - IEquipmentClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEquipmentClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/equipment.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для оборудования клиента (SIM-карты).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iccId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imsi\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iccId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ICC ID SIM-карты (номер).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор оборудования (SIM-карты).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imsi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imsi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    IMSI SIM-карты.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Статус SIM-карты (например, Активирована).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип оборудования (например, GSM).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IEquipmentClient {\n  /**\n   * Идентификатор оборудования (SIM-карты).\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например, GSM).\n   */\n  type: string;\n\n  /**\n   * ICC ID SIM-карты (номер).\n   */\n  iccId: string;\n\n  /**\n   * IMSI SIM-карты.\n   */\n  imsi: string;\n\n  /**\n   * Статус SIM-карты (например, Активирована).\n   */\n  state: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEquipmentClientSearch.html":{"url":"interfaces/IEquipmentClientSearch.html","title":"interface - IEquipmentClientSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEquipmentClientSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iccId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imsi\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iccId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ICC ID оборудования (уникальный идентификатор SIM-карты).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор оборудования.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imsi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imsi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Текущий статус оборудования (например, активное, заблокировано и т.д.).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип оборудования (например,  хз что).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IError.html":{"url":"interfaces/IError.html","title":"interface - IError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/errors.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления ошибки.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Описание ошибки (необязательное поле, может быть пустым).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг статуса ошибки (true для успешных операций, false для ошибок).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IError {\n  /** Флаг статуса ошибки (true для успешных операций, false для ошибок). */\n  status: boolean;\n\n  /** Описание ошибки (необязательное поле, может быть пустым). */\n  message?: string;\n}\n\n/**\n * Интерфейс для представления валидационной ошибки.\n */\nexport interface IValidationError {\n  /** Имя поля, которое вызвало ошибку. */\n  field: string;\n\n  /** Описание ошибки для поля. */\n  message: string;\n}\n\n/**\n * Интерфейс для представления переменных валидации.\n */\nexport interface IValidationVariables {\n  /** Флаг статуса валидации. */\n  status: boolean;\n\n  /** Список ошибок валидации. */\n  errors: IValidationError[];\n}\n\n/**\n * Интерфейс для представления ошибки HTTP.\n */\nexport interface HttpError {\n  /** Код состояния HTTP (например, 400, 404, 500). */\n  statusCode: number;\n\n  /** Сообщение об ошибке. */\n  message: string;\n\n  /** Путь запроса, вызвавшего ошибку. */\n  path: string;\n\n  /** HTTP метод, при котором произошла ошибка (например, GET, POST). */\n  method: string;\n\n  /** Флаг завершенности обработки ошибки. */\n  complete: boolean;\n\n  /** Временная метка ошибки. */\n  timestamp: string;\n}\n\n/**\n * Интерфейс для представления журнальной записи.\n */\nexport interface ILogger {\n  /**\n   * Наименование службы, генерирующей запись журнала.\n   * Например: \"AuthService\", \"ClientService\" и т. д.(для каждой службы должен быть свой тип журнала)\n   */\n  serviceName: string;\n\n  /**\n   * Сообщение журнала.\n   * Описывает событие или ошибку, которые произошли.\n   */\n  message: string;\n\n  /**\n   * Тип журнала.\n   * Например: \"INFO\" для информационных сообщений, \"ERROR\" для ошибок, \"DEBUG\" для отладки.\n   */\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGenderClient.html":{"url":"interfaces/IGenderClient.html","title":"interface - IGenderClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGenderClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/gender.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для типа пола клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор пола.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название пола.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IGenderClient {\n  /**\n   * Идентификатор пола.\n   */\n  id: number;\n\n  /**\n   * Название пола.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGqlError.html":{"url":"interfaces/IGqlError.html","title":"interface - IGqlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGqlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/gql-error.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления ошибки в GraphQL.\nИспользуется для:\n\nФорматирования ошибок, возникающих при выполнении запросов или мутаций в GraphQL.\nУнификации структуры ошибок для обработки на клиентской стороне.\n\nПример использования:\nExample :const gqlError: IGqlError = {\n  message: 'Не удалось выполнить запрос.',\n};\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Сообщение об ошибке.\nОписывает причину или суть возникшей проблемы.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IGqlError {\n  /**\n   * Сообщение об ошибке.\n   * Описывает причину или суть возникшей проблемы.\n   */\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJournal.html":{"url":"interfaces/IJournal.html","title":"interface - IJournal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IJournal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/journals/journals.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            additionalData\n                                        \n                                \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            registred\n                                        \n                                \n                                \n                                        \n                                            service\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additionalData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additionalData:     Record | Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record | Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Дополнительные данные, если есть.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Логин админа, который создал запись.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Уникальный идентификатор записи журнала.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registred\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registred:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата и время регистрации записи.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название сервиса, к которому относится запись.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Текст записи журнала.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IJournal {\n  /**\n   * Уникальный идентификатор записи журнала.\n   */\n  id: string;\n\n  /**\n   * Название сервиса, к которому относится запись.\n   */\n  service: string;\n\n  /**\n   * Логин админа, который создал запись.\n   */\n  admin: string;\n\n  /**\n   * Текст записи журнала.\n   */\n  text: string;\n\n  /**\n   * Дата и время регистрации записи.\n   */\n  registred: Date;\n\n  /**\n   * Дополнительные данные, если есть.\n   */\n  additionalData?: Record | Array>;\n}\n\n/**\n * @interface ISearchJournal\n * @description Параметры для поиска записей в журнале.\n */\nexport interface ISearchJournal {\n  /**\n   * Фильтр по названию сервиса (необязательный).\n   */\n  service?: string;\n\n  /**\n   * Логин админа для фильтрации записей (необязательный).\n   */\n  admin?: string;\n\n  /**\n   * Дата начала фильтрации (формат: \"2024-08-16T00:00:00Z\", необязательный).\n   */\n  fromDate?: string;\n\n  /**\n   * Дата окончания фильтрации (формат: \"2024-08-17T23:59:59Z\", необязательный).\n   */\n  toDate?: string;\n\n  /**\n   * Заголовок для фильтрации записей (необязательный).\n   */\n  title?: string;\n\n  /**\n   * Идентификатор данных для фильтрации записей (необязательный).\n   */\n  dataId?: string;\n}\n\n/**\n * @interface ICreateJournal\n * @description Описание структуры данных для создания новой записи в журнале.\n */\nexport interface ICreateJournal {\n  /**\n   * Название сервиса, к которому будет относиться новая запись.\n   */\n  service: string;\n\n  /**\n   * Логин админа, создающего запись.\n   */\n  admin: string;\n\n  /**\n   * Текст записи журнала.\n   */\n  text: string;\n\n  /**\n   * Дополнительные данные, если есть.\n   */\n  additionalData?: Record | Array>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJuridicalType.html":{"url":"interfaces/IJuridicalType.html","title":"interface - IJuridicalType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IJuridicalType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/juridicalType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа юридического лица.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа юридического лица.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IJuridicalType {\n  /**\n   * Идентификатор типа юридического лица.\n   */\n  id: number;\n\n  /**\n   * Название типа юридического лица.\n   */\n  name: string;\n}\n\n/**\n * @interface IJuridicalTypesResponse\n * @description Массив объектов типов юридических лиц.\n */\nexport interface IJuridicalTypesResponse {\n  /**\n   * Массив объектов типов юридических лиц.\n   */\n  juridicalTypes: IJuridicalType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJuridicalTypesResponse.html":{"url":"interfaces/IJuridicalTypesResponse.html","title":"interface - IJuridicalTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IJuridicalTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/client/juridicalType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            juridicalTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        juridicalTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        juridicalTypes:         IJuridicalType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IJuridicalType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов юридических лиц.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IJuridicalType {\n  /**\n   * Идентификатор типа юридического лица.\n   */\n  id: number;\n\n  /**\n   * Название типа юридического лица.\n   */\n  name: string;\n}\n\n/**\n * @interface IJuridicalTypesResponse\n * @description Массив объектов типов юридических лиц.\n */\nexport interface IJuridicalTypesResponse {\n  /**\n   * Массив объектов типов юридических лиц.\n   */\n  juridicalTypes: IJuridicalType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/errors.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления журнальной записи.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            serviceName\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Сообщение журнала.\nОписывает событие или ошибку, которые произошли.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Наименование службы, генерирующей запись журнала.\nНапример: \"AuthService\", \"ClientService\" и т. д.(для каждой службы должен быть свой тип журнала)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Тип журнала.\nНапример: \"INFO\" для информационных сообщений, \"ERROR\" для ошибок, \"DEBUG\" для отладки.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IError {\n  /** Флаг статуса ошибки (true для успешных операций, false для ошибок). */\n  status: boolean;\n\n  /** Описание ошибки (необязательное поле, может быть пустым). */\n  message?: string;\n}\n\n/**\n * Интерфейс для представления валидационной ошибки.\n */\nexport interface IValidationError {\n  /** Имя поля, которое вызвало ошибку. */\n  field: string;\n\n  /** Описание ошибки для поля. */\n  message: string;\n}\n\n/**\n * Интерфейс для представления переменных валидации.\n */\nexport interface IValidationVariables {\n  /** Флаг статуса валидации. */\n  status: boolean;\n\n  /** Список ошибок валидации. */\n  errors: IValidationError[];\n}\n\n/**\n * Интерфейс для представления ошибки HTTP.\n */\nexport interface HttpError {\n  /** Код состояния HTTP (например, 400, 404, 500). */\n  statusCode: number;\n\n  /** Сообщение об ошибке. */\n  message: string;\n\n  /** Путь запроса, вызвавшего ошибку. */\n  path: string;\n\n  /** HTTP метод, при котором произошла ошибка (например, GET, POST). */\n  method: string;\n\n  /** Флаг завершенности обработки ошибки. */\n  complete: boolean;\n\n  /** Временная метка ошибки. */\n  timestamp: string;\n}\n\n/**\n * Интерфейс для представления журнальной записи.\n */\nexport interface ILogger {\n  /**\n   * Наименование службы, генерирующей запись журнала.\n   * Например: \"AuthService\", \"ClientService\" и т. д.(для каждой службы должен быть свой тип журнала)\n   */\n  serviceName: string;\n\n  /**\n   * Сообщение журнала.\n   * Описывает событие или ошибку, которые произошли.\n   */\n  message: string;\n\n  /**\n   * Тип журнала.\n   * Например: \"INFO\" для информационных сообщений, \"ERROR\" для ошибок, \"DEBUG\" для отладки.\n   */\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMonetaryClient.html":{"url":"interfaces/IMonetaryClient.html","title":"interface - IMonetaryClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMonetaryClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/monetary.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для монетарного баланса клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Наименование типа монетарного баланса.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Значение указанного монетарного баланса.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IMonetaryClient {\n  /**\n   * Наименование типа монетарного баланса.\n   */\n  name: string;\n\n  /**\n   * Значение указанного монетарного баланса.\n   */\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMsisdn.html":{"url":"interfaces/IMsisdn.html","title":"interface - IMsisdn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMsisdn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-unlinked-msisdns/response.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для MSISDN объекта.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            msisdn\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         ICategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICategory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Категория MSISDN.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Комментарий к MSISDN.\nПоле необязательное.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Уникальный идентификатор MSISDN.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msisdn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msisdn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Сам номер MSISDN.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         IRegion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRegion\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Регион MSISDN.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         IState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IState\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Состояние MSISDN.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IState {\n  /**\n   * Уникальный идентификатор состояния.\n   */\n  id: number;\n\n  /**\n   * Название состояния.\n   */\n  name: string;\n\n  /**\n   * Дата и время изменения состояния.\n   */\n  changedAt: string;\n}\n\n/**\n * Интерфейс для категории MSISDN.\n */\nexport interface ICategory {\n  /**\n   * Уникальный идентификатор категории.\n   */\n  id: number;\n\n  /**\n   * Название категории.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для региона MSISDN.\n */\nexport interface IRegion {\n  /**\n   * Уникальный идентификатор региона.\n   */\n  id: number;\n\n  /**\n   * Название региона.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для MSISDN объекта.\n */\nexport interface IMsisdn {\n  /**\n   * Уникальный идентификатор MSISDN.\n   */\n  id: number;\n\n  /**\n   * Сам номер MSISDN.\n   */\n  msisdn: number;\n\n  /**\n   * Комментарий к MSISDN.\n   * Поле необязательное.\n   */\n  comment?: string;\n\n  /**\n   * Состояние MSISDN.\n   */\n  state: IState;\n\n  /**\n   * Категория MSISDN.\n   */\n  category: ICategory;\n\n  /**\n   * Регион MSISDN.\n   */\n  region: IRegion;\n}\n\n/**\n * Интерфейс для ответа поиска свободных MSISDN.\n */\nexport interface ISearchUnlinkedMsisdnsResponse {\n  /**\n   * Список MSISDN, соответствующих условиям поиска.\n   * Может содержать `null` для некоторых записей.\n   */\n  msisdns: (IMsisdn | null)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INameClient.html":{"url":"interfaces/INameClient.html","title":"interface - INameClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INameClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/name.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для имени клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            middleName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Фамилия.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Отчество.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface INameClient {\n  /**\n   * Имя.\n   */\n  firstName: string;\n\n  /**\n   * Отчество.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия.\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INameClientSearch.html":{"url":"interfaces/INameClientSearch.html","title":"interface - INameClientSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INameClientSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            structured\n                                        \n                                \n                                \n                                        \n                                            unstructured\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        structured\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structured:         IStructuredClientName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStructuredClientName\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Структурированные данные о клиенте.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unstructured\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unstructured:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Строка с необработанным именем клиента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOptionalPropertyClient.html":{"url":"interfaces/IOptionalPropertyClient.html","title":"interface - IOptionalPropertyClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOptionalPropertyClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/optionalProperty.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для дополнительных свойств клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор дополнительного свойства.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название дополнительного свойства.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Значение дополнительного свойства.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SN } from '../../types';\n\n/**\n * Интерфейс для дополнительных свойств клиента.\n */\nexport interface IOptionalPropertyClient {\n  /**\n   * Идентификатор дополнительного свойства.\n   */\n  id: number;\n\n  /**\n   * Название дополнительного свойства.\n   */\n  name: string;\n\n  /**\n   * Значение дополнительного свойства.\n   */\n  value: SN;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaymentTypeClient.html":{"url":"interfaces/IPaymentTypeClient.html","title":"interface - IPaymentTypeClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPaymentTypeClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/paymentType.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для типа оплаты клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа оплаты.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа оплаты.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IPaymentTypeClient {\n  /**\n   * Идентификатор типа оплаты.\n   */\n  id: number;\n\n  /**\n   * Название типа оплаты.\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQueryStructured.html":{"url":"interfaces/IQueryStructured.html","title":"interface - IQueryStructured","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IQueryStructured\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            structured\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        structured\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structured:         IStructuredNameClientSearch | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStructuredNameClientSearch | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Структурированные данные о клиенте, или null, если такие данные отсутствуют.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQueryUnStructured.html":{"url":"interfaces/IQueryUnStructured.html","title":"interface - IQueryUnStructured","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IQueryUnStructured\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            unstructured\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        unstructured\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unstructured:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRegion.html":{"url":"interfaces/IRegion.html","title":"interface - IRegion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRegion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-unlinked-msisdns/response.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для региона MSISDN.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Уникальный идентификатор региона.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название региона.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IState {\n  /**\n   * Уникальный идентификатор состояния.\n   */\n  id: number;\n\n  /**\n   * Название состояния.\n   */\n  name: string;\n\n  /**\n   * Дата и время изменения состояния.\n   */\n  changedAt: string;\n}\n\n/**\n * Интерфейс для категории MSISDN.\n */\nexport interface ICategory {\n  /**\n   * Уникальный идентификатор категории.\n   */\n  id: number;\n\n  /**\n   * Название категории.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для региона MSISDN.\n */\nexport interface IRegion {\n  /**\n   * Уникальный идентификатор региона.\n   */\n  id: number;\n\n  /**\n   * Название региона.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для MSISDN объекта.\n */\nexport interface IMsisdn {\n  /**\n   * Уникальный идентификатор MSISDN.\n   */\n  id: number;\n\n  /**\n   * Сам номер MSISDN.\n   */\n  msisdn: number;\n\n  /**\n   * Комментарий к MSISDN.\n   * Поле необязательное.\n   */\n  comment?: string;\n\n  /**\n   * Состояние MSISDN.\n   */\n  state: IState;\n\n  /**\n   * Категория MSISDN.\n   */\n  category: ICategory;\n\n  /**\n   * Регион MSISDN.\n   */\n  region: IRegion;\n}\n\n/**\n * Интерфейс для ответа поиска свободных MSISDN.\n */\nexport interface ISearchUnlinkedMsisdnsResponse {\n  /**\n   * Список MSISDN, соответствующих условиям поиска.\n   * Может содержать `null` для некоторых записей.\n   */\n  msisdns: (IMsisdn | null)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRegionType.html":{"url":"interfaces/IRegionType.html","title":"interface - IRegionType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRegionType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/regionType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                     Название региона абонента\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SN } from '../../../types';\n\n/**\n * @interface IRegionType\n * @description Представляет тип региона абонента.\n */\nexport interface IRegionType {\n  /*\n   * Идентификатор региона абонента (branch_id из phone_history)\n   */\n  id: number;\n  /**\n   *  Название региона абонента\n   */\n  name: SN;\n}\n\n/**\n * @interface IRegionTypesResponse\n * @description Структура ответа, содержащая список типов регионов.\n */\nexport interface IRegionTypesResponse {\n  /**\n   * Массив объектов типов регионов.\n   */\n  regionTypes: IRegionType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRegionTypesResponse.html":{"url":"interfaces/IRegionTypesResponse.html","title":"interface - IRegionTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRegionTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/regionType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            regionTypes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        regionTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        regionTypes:         IRegionType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRegionType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов регионов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SN } from '../../../types';\n\n/**\n * @interface IRegionType\n * @description Представляет тип региона абонента.\n */\nexport interface IRegionType {\n  /*\n   * Идентификатор региона абонента (branch_id из phone_history)\n   */\n  id: number;\n  /**\n   *  Название региона абонента\n   */\n  name: SN;\n}\n\n/**\n * @interface IRegionTypesResponse\n * @description Структура ответа, содержащая список типов регионов.\n */\nexport interface IRegionTypesResponse {\n  /**\n   * Массив объектов типов регионов.\n   */\n  regionTypes: IRegionType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRelationClient.html":{"url":"interfaces/IRelationClient.html","title":"interface - IRelationClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRelationClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/relation.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для данных отношений клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            childs\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        childs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        childs:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив идентификаторов детей клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Данные родителя клиента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IRelationClient {\n  /**\n   * Данные родителя клиента.\n   */\n  parent: {\n    /**\n     * Идентификатор родителя.\n     */\n    id: number;\n  };\n\n  /**\n   * Массив идентификаторов детей клиента.\n   */\n  childs: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestParams.html":{"url":"interfaces/IRequestParams.html","title":"interface - IRequestParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRequestParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport {\n  generateDocumentPassport,\n  IAddressTypesResponse,\n  IBillingDeliveryTypesResponse,\n  ICityTypesResponse,\n  IClientTypesResponse,\n  ICountryTypesResponse,\n  IDistrictTypesResponse,\n  IDocumentTypesResponse,\n  IJuridicalTypesResponse,\n  IRegionTypesResponse,\n  ISearchClientPayload,\n  IStreetTypesResponse,\n} from '@web-clients-backend/shared';\nimport { webClientsApiMethods } from '../other/api-methods';\n\ninterface IRequestParams {\n  data: Record;\n}\n\n@Injectable()\nexport class SearchDictionaryService {\n  constructor(private readonly httpService: HttpService) {}\n\n  private async requestHandler(\n    payload: ISearchClientPayload,\n    url: string,\n    { data }: IRequestParams\n  ): Promise {\n    try {\n      const response = await this.httpService.axiosRef.post(url, data, {\n        headers: {\n          'Content-Type': 'application/json',\n          TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n          Authorization: `Bearer ${payload.tokenInput.access_token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async searchClientJuridicalType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.juridicalType,\n      {\n        data: { unstructured: payload.input },\n      }\n    );\n  }\n\n  async searchClientType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.clientType,\n      {\n        data: { msisdn: payload.input },\n      }\n    );\n  }\n\n  async searchClientDocumentType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.documentType,\n      {\n        data: { msisdn: payload.input },\n      }\n    );\n  }\n\n  async searchClientAddressType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.addressType,\n      {\n        data: { document: generateDocumentPassport(payload.input.toString()) },\n      }\n    );\n  }\n\n  async searchClientBillingDeliveryType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.billingDeliveryType,\n      {\n        data: { account: payload.input },\n      }\n    );\n  }\n\n  async searchAddressCountry(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.country,\n      {\n        data: { contractNumber: payload.input },\n      }\n    );\n  }\n\n  async searchAddressRegionType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.regionType,\n      {\n        data: { contractNumber: payload.input },\n      }\n    );\n  }\n\n  async searchAddressDistrictType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.districtType,\n      {\n        data: { additionalPhoneNumber: payload.input },\n      }\n    );\n  }\n\n  async searchAddressCityType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.cityType,\n      {\n        data: {\n          sim: { iccId: payload.input, imsi: null },\n        },\n      }\n    );\n  }\n\n  async searchAddressStreetType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.streetType,\n      {\n        data: {\n          sim: { iccId: payload.input, imsi: null },\n        },\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchClientPayload.html":{"url":"interfaces/ISearchClientPayload.html","title":"interface - ISearchClientPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchClientPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            input\n                                        \n                                \n                                \n                                        \n                                            tokenInput\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenInput\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenInput:         IAccessTokenInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAccessTokenInput\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Данные для авторизации токен и ))))\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchJournal.html":{"url":"interfaces/ISearchJournal.html","title":"interface - ISearchJournal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchJournal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/journals/journals.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            admin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dataId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            service\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Логин админа для фильтрации записей (необязательный).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Идентификатор данных для фильтрации записей (необязательный).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Дата начала фильтрации (формат: \"2024-08-16T00:00:00Z\", необязательный).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Фильтр по названию сервиса (необязательный).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Заголовок для фильтрации записей (необязательный).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Дата окончания фильтрации (формат: \"2024-08-17T23:59:59Z\", необязательный).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IJournal {\n  /**\n   * Уникальный идентификатор записи журнала.\n   */\n  id: string;\n\n  /**\n   * Название сервиса, к которому относится запись.\n   */\n  service: string;\n\n  /**\n   * Логин админа, который создал запись.\n   */\n  admin: string;\n\n  /**\n   * Текст записи журнала.\n   */\n  text: string;\n\n  /**\n   * Дата и время регистрации записи.\n   */\n  registred: Date;\n\n  /**\n   * Дополнительные данные, если есть.\n   */\n  additionalData?: Record | Array>;\n}\n\n/**\n * @interface ISearchJournal\n * @description Параметры для поиска записей в журнале.\n */\nexport interface ISearchJournal {\n  /**\n   * Фильтр по названию сервиса (необязательный).\n   */\n  service?: string;\n\n  /**\n   * Логин админа для фильтрации записей (необязательный).\n   */\n  admin?: string;\n\n  /**\n   * Дата начала фильтрации (формат: \"2024-08-16T00:00:00Z\", необязательный).\n   */\n  fromDate?: string;\n\n  /**\n   * Дата окончания фильтрации (формат: \"2024-08-17T23:59:59Z\", необязательный).\n   */\n  toDate?: string;\n\n  /**\n   * Заголовок для фильтрации записей (необязательный).\n   */\n  title?: string;\n\n  /**\n   * Идентификатор данных для фильтрации записей (необязательный).\n   */\n  dataId?: string;\n}\n\n/**\n * @interface ICreateJournal\n * @description Описание структуры данных для создания новой записи в журнале.\n */\nexport interface ICreateJournal {\n  /**\n   * Название сервиса, к которому будет относиться новая запись.\n   */\n  service: string;\n\n  /**\n   * Логин админа, создающего запись.\n   */\n  admin: string;\n\n  /**\n   * Текст записи журнала.\n   */\n  text: string;\n\n  /**\n   * Дополнительные данные, если есть.\n   */\n  additionalData?: Record | Array>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchUnlinkedMsisdnsPayload.html":{"url":"interfaces/ISearchUnlinkedMsisdnsPayload.html","title":"interface - ISearchUnlinkedMsisdnsPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchUnlinkedMsisdnsPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-unlinked-msisdns/payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            input\n                                        \n                                \n                                \n                                        \n                                            tokenInput\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input:         SearchUnlinkedMsisdnsInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SearchUnlinkedMsisdnsInput\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenInput\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenInput:         IAccessTokenInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAccessTokenInput\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAccessTokenInput } from '../apimeInputs';\n\n/**\n * Интерфейс для входных данных метода поиска свободных номеров (MSISDN).\n */\nexport interface SearchUnlinkedMsisdnsInput {\n  /**\n   * Номер MSISDN для поиска.\n   * Может быть частично маскированным, где символ '%' означает любое количество любых символов.\n   * Обязательных символов, помимо '%', должно быть не менее пяти.\n   * Пример: \"95021%\" или \"%12345\".\n   */\n  msisdn: string;\n\n  /**\n   * Идентификаторы регионов для фильтрации номеров.\n   * Массив чисел, где каждый элемент — ID региона.\n   * Поле необязательное.\n   */\n  regionId?: number[];\n\n  /**\n   * Идентификаторы категорий номеров для фильтрации.\n   * Массив чисел, где каждый элемент — ID категории.\n   * Поле необязательное.\n   */\n  categoryId?: number[];\n}\n\nexport interface ISearchUnlinkedMsisdnsPayload {\n  tokenInput: IAccessTokenInput;\n  input: SearchUnlinkedMsisdnsInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchUnlinkedMsisdnsResponse.html":{"url":"interfaces/ISearchUnlinkedMsisdnsResponse.html","title":"interface - ISearchUnlinkedMsisdnsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISearchUnlinkedMsisdnsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-unlinked-msisdns/response.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для ответа поиска свободных MSISDN.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            msisdns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msisdns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msisdns:         (IMsisdn | null)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         (IMsisdn | null)[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Список MSISDN, соответствующих условиям поиска.\nМожет содержать null для некоторых записей.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IState {\n  /**\n   * Уникальный идентификатор состояния.\n   */\n  id: number;\n\n  /**\n   * Название состояния.\n   */\n  name: string;\n\n  /**\n   * Дата и время изменения состояния.\n   */\n  changedAt: string;\n}\n\n/**\n * Интерфейс для категории MSISDN.\n */\nexport interface ICategory {\n  /**\n   * Уникальный идентификатор категории.\n   */\n  id: number;\n\n  /**\n   * Название категории.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для региона MSISDN.\n */\nexport interface IRegion {\n  /**\n   * Уникальный идентификатор региона.\n   */\n  id: number;\n\n  /**\n   * Название региона.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для MSISDN объекта.\n */\nexport interface IMsisdn {\n  /**\n   * Уникальный идентификатор MSISDN.\n   */\n  id: number;\n\n  /**\n   * Сам номер MSISDN.\n   */\n  msisdn: number;\n\n  /**\n   * Комментарий к MSISDN.\n   * Поле необязательное.\n   */\n  comment?: string;\n\n  /**\n   * Состояние MSISDN.\n   */\n  state: IState;\n\n  /**\n   * Категория MSISDN.\n   */\n  category: ICategory;\n\n  /**\n   * Регион MSISDN.\n   */\n  region: IRegion;\n}\n\n/**\n * Интерфейс для ответа поиска свободных MSISDN.\n */\nexport interface ISearchUnlinkedMsisdnsResponse {\n  /**\n   * Список MSISDN, соответствующих условиям поиска.\n   * Может содержать `null` для некоторых записей.\n   */\n  msisdns: (IMsisdn | null)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IState.html":{"url":"interfaces/IState.html","title":"interface - IState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-unlinked-msisdns/response.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для состояния MSISDN.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            changedAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        changedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        changedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дата и время изменения состояния.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Уникальный идентификатор состояния.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название состояния.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IState {\n  /**\n   * Уникальный идентификатор состояния.\n   */\n  id: number;\n\n  /**\n   * Название состояния.\n   */\n  name: string;\n\n  /**\n   * Дата и время изменения состояния.\n   */\n  changedAt: string;\n}\n\n/**\n * Интерфейс для категории MSISDN.\n */\nexport interface ICategory {\n  /**\n   * Уникальный идентификатор категории.\n   */\n  id: number;\n\n  /**\n   * Название категории.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для региона MSISDN.\n */\nexport interface IRegion {\n  /**\n   * Уникальный идентификатор региона.\n   */\n  id: number;\n\n  /**\n   * Название региона.\n   */\n  name: string;\n}\n\n/**\n * Интерфейс для MSISDN объекта.\n */\nexport interface IMsisdn {\n  /**\n   * Уникальный идентификатор MSISDN.\n   */\n  id: number;\n\n  /**\n   * Сам номер MSISDN.\n   */\n  msisdn: number;\n\n  /**\n   * Комментарий к MSISDN.\n   * Поле необязательное.\n   */\n  comment?: string;\n\n  /**\n   * Состояние MSISDN.\n   */\n  state: IState;\n\n  /**\n   * Категория MSISDN.\n   */\n  category: ICategory;\n\n  /**\n   * Регион MSISDN.\n   */\n  region: IRegion;\n}\n\n/**\n * Интерфейс для ответа поиска свободных MSISDN.\n */\nexport interface ISearchUnlinkedMsisdnsResponse {\n  /**\n   * Список MSISDN, соответствующих условиям поиска.\n   * Может содержать `null` для некоторых записей.\n   */\n  msisdns: (IMsisdn | null)[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStateClient.html":{"url":"interfaces/IStateClient.html","title":"interface - IStateClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStateClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/state.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для описания состояния клиента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор статуса клиента (stat_id из client_history).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         StateType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название статуса клиента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StateType } from '../../types';\n\n/**\n * Интерфейс для описания состояния клиента.\n */\nexport interface IStateClient {\n  /**\n   * Идентификатор статуса клиента (stat_id из client_history).\n   */\n  id: number;\n\n  /**\n   * Название статуса клиента.\n   */\n  name: StateType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStreetType.html":{"url":"interfaces/IStreetType.html","title":"interface - IStreetType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStreetType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/streetType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор типа улицы\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         SN\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SN\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Название типа улицы\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SN } from '../../../types';\n\n/**\n * @interface IStreetType\n * @description Представляет тип улицы.\n */\nexport interface IStreetType {\n  /**\n   * Идентификатор типа улицы\n   */\n  id: number;\n  /**\n   * Название типа улицы\n   */\n  name: SN;\n}\n\n/**\n * @interface IStreetTypesResponse\n * @description Структура ответа, содержащая список типов улиц.\n */\nexport interface IStreetTypesResponse {\n  /**\n   * Массив объектов типов улиц.\n   */\n  streetType: IStreetType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStreetTypesResponse.html":{"url":"interfaces/IStreetTypesResponse.html","title":"interface - IStreetTypesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStreetTypesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/dictionary/address/streetType.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            streetType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        streetType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        streetType:         IStreetType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStreetType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Массив объектов типов улиц.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SN } from '../../../types';\n\n/**\n * @interface IStreetType\n * @description Представляет тип улицы.\n */\nexport interface IStreetType {\n  /**\n   * Идентификатор типа улицы\n   */\n  id: number;\n  /**\n   * Название типа улицы\n   */\n  name: SN;\n}\n\n/**\n * @interface IStreetTypesResponse\n * @description Структура ответа, содержащая список типов улиц.\n */\nexport interface IStreetTypesResponse {\n  /**\n   * Массив объектов типов улиц.\n   */\n  streetType: IStreetType[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStructuredClientName.html":{"url":"interfaces/IStructuredClientName.html","title":"interface - IStructuredClientName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStructuredClientName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            middleName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orgName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Фамилия клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Отчество клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orgName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orgName:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Имя организации, если клиент является юридическим лицом.\nМожет быть null, если клиент не является юридическим лицом.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStructuredNameClientSearch.html":{"url":"interfaces/IStructuredNameClientSearch.html","title":"interface - IStructuredNameClientSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStructuredNameClientSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            middle_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orgName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Фамилия клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middle_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middle_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Отчество клиента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orgName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orgName:     never\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     never\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Название организации (не используется, всегда never).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubscriberClient.html":{"url":"interfaces/ISubscriberClient.html","title":"interface - ISubscriberClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubscriberClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/client/subscriber.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для описания данных абонента.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additionalPhoneNumber\n                                        \n                                \n                                \n                                        \n                                            equipment\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            msisdn\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additionalPhoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additionalPhoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Дополнительный городской номер.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        equipment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        equipment:         IEquipmentClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IEquipmentClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Оборудование, используемое абонентом.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор абонента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msisdn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msisdn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер телефона абонента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         IRegionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRegionType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Регион абонента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         IStateClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IStateClient\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Статус абонента.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IStateClient } from './state.interface';\nimport { IEquipmentClient } from './equipment.interface';\nimport { IRegionType } from '..';\n\n/**\n * Интерфейс для описания данных абонента.\n */\nexport interface ISubscriberClient {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Номер телефона абонента.\n   */\n  msisdn: string;\n\n  /**\n   * Регион абонента.\n   */\n  region: IRegionType;\n\n  /**\n   * Статус абонента.\n   */\n  state: IStateClient;\n\n  /**\n   * Дополнительный городской номер.\n   */\n  additionalPhoneNumber: string;\n\n  /**\n   * Оборудование, используемое абонентом.\n   */\n  equipment: IEquipmentClient;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubscriberClientSearch.html":{"url":"interfaces/ISubscriberClientSearch.html","title":"interface - ISubscriberClientSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubscriberClientSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-client/search.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            additionalPhoneNumber\n                                        \n                                \n                                \n                                        \n                                            equipment\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            msisdn\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additionalPhoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additionalPhoneNumber:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Дополнительный городской номер (если доступен).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        equipment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        equipment:         IEquipmentClientSearch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IEquipmentClientSearch\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Данные о оборудовании абонента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор абонента.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msisdn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msisdn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Абонентский номер (MSISDN).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Регион, в котором зарегистрирован абонент.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Текущий статус абонента (например, активен, заблокирован и т.д.).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { NN, SN, StateType } from '../../types';\nimport { JuridicalType } from '../../types/client/juridical.type';\nimport { SegmentType } from '../../types/client/segment.type';\nimport { IAccessTokenInput } from '../apimeInputs';\nimport { IBalanceClient } from '../client';\n\n/**\n * @interface ISearchClientPayload\n * @description Payload для поиска клиента.\n */\nexport interface ISearchClientPayload {\n  /**\n   * Данные для авторизации токен и ))))\n   */\n  tokenInput: IAccessTokenInput;\n\n  /**\n   * Входное значение для поиска клиента. Может быть строкой (например, ФИО) или числом (например, номер телефона или дгн и еще что угодно).\n   */\n  input: string | number;\n}\n\n/**\n * @interface IQueryStructured\n * @description Интерфейс для структурированного запроса на поиск клиента.\n */\nexport interface IQueryStructured {\n  /**\n   * Структурированные данные о клиенте, или `null`, если такие данные отсутствуют.\n   */\n  structured: IStructuredNameClientSearch | null;\n}\n\n/**\n * @interface IQueryUnStructured\n * @description Интерфейс для структуры запроса с неструктурированными данными ФИО клиента.\n */\nexport interface IQueryUnStructured {\n  /**\n   * Неструктурированные данные, представляющие собой строку или другой тип данных, необходимые для ФИО клиента.\n   */\n  unstructured: SN;\n}\n\n/**\n * @interface IStructuredNameClientSearch\n * @description Интерфейс для структурированных данных о поиске клиента по имени.\n */\nexport interface IStructuredNameClientSearch {\n  /**\n   * Имя клиента.\n   */\n  first_name: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middle_name: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  last_name: string;\n\n  /**\n   * Название организации (не используется, всегда `never`).\n   */\n  orgName?: never;\n}\n\n/**\n * @interface INameClientSearch\n * @description Интерфейс для поиска клиента по имени.\n */\nexport interface INameClientSearch {\n  /**\n   * Структурированные данные о клиенте.\n   */\n  structured: IStructuredClientName;\n\n  /**\n   * Строка с необработанным именем клиента.\n   */\n  unstructured: string;\n}\n\n/**\n * @interface IStructuredClientName\n * @description Структурированные данные о клиенте, включающие имя и организационные данные, если клиент является юридическим лицом.\n */\nexport interface IStructuredClientName {\n  /**\n   * Имя клиента.\n   */\n  firstName: string;\n\n  /**\n   * Отчество клиента.\n   */\n  middleName: string;\n\n  /**\n   * Фамилия клиента.\n   */\n  lastName: string;\n\n  /**\n   * Имя организации, если клиент является юридическим лицом.\n   * Может быть `null`, если клиент не является юридическим лицом.\n   */\n  orgName?: string | null;\n}\n\n/**\n * @interface IDocumentClientSearch\n * @description Структура данных для поиска клиента по документу.\n */\nexport interface IDocumentClientSearch {\n  /**\n   * Тип документа (например, паспорт, водительские права, ИНН).\n   */\n  type: string;\n\n  /**\n   * Серия документа.\n   */\n  series: string; // docSeries\n\n  /**\n   * Номер документа.\n   */\n  number: string; // docNumber\n\n  /**\n   * Дата выдачи документа.\n   */\n  issueDate: string;\n}\n\n/**\n * @interface ISubscriberClientSearch\n * @description Структура данных для поиска клиента по абонентскому номеру.\n */\nexport interface ISubscriberClientSearch {\n  /**\n   * Идентификатор абонента.\n   */\n  id: number;\n\n  /**\n   * Абонентский номер (MSISDN).\n   */\n  msisdn: string;\n\n  /**\n   * Регион, в котором зарегистрирован абонент.\n   */\n  region: string;\n\n  /**\n   * Текущий статус абонента (например, активен, заблокирован и т.д.).\n   */\n  state: string;\n\n  /**\n   * Дополнительный городской номер (если доступен).\n   */\n  additionalPhoneNumber?: string | null;\n\n  /**\n   * Данные о оборудовании абонента.\n   */\n  equipment: IEquipmentClientSearch;\n}\n\n/**\n * @interface IEquipmentClientSearch\n * @description Структура данных для поиска оборудования клиента.\n */\nexport interface IEquipmentClientSearch {\n  /**\n   * Идентификатор оборудования.\n   */\n  id: number;\n\n  /**\n   * Тип оборудования (например,  хз что).\n   */\n  type: string;\n\n  /**\n   * ICC ID оборудования (уникальный идентификатор SIM-карты).\n   */\n  iccId: string;\n\n  /**\n   * IMSI (International Mobile Subscriber Identity) - уникальный идентификатор мобильного абонента.\n   */\n  imsi: string;\n\n  /**\n   * Текущий статус оборудования (например, активное, заблокировано и т.д.).\n   */\n  state: string;\n}\n\n/**\n * @interface IClientSearchResult\n * @description Структура данных для результата поиска клиента.\n */\nexport interface IClientSearchResult {\n  /**\n   * Идентификатор клиента.\n   */\n  id: number;\n\n  /**\n   * Баланс клиента. Может быть `null` если номер закрыт.\n   */\n  balance: IBalanceClient | null;\n\n  /**\n   * Тип клиента (например, массовый рынок, VIP и т.д.).\n   */\n  clientType: SegmentType;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType;\n\n  /**\n   * Имя клиента с детализированными данными (структурированное или неструктурированное).\n   */\n  name: INameClientSearch;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: string;\n\n  /**\n   * Данные документа клиента.\n   */\n  document: IDocumentClientSearch;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType;\n\n  /**\n   * Подписчики клиента. Может содержать `null` если нет информации о подписчиках.\n   */\n  subscribers: (ISubscriberClientSearch | null)[];\n}\n\n/**\n * @interface IClientSearch\n * @description Структура данных для поиска клиента с различными параметрами.\n */\nexport interface IClientSearch {\n  /**\n   * Полное имя клиента в структуре.\n   */\n  fio: SN;\n\n  /**\n   * Абонентский номер телефона.\n   */\n  msisdn: NN;\n\n  /**\n   * Баланс клиента.\n   */\n  balance: NN;\n\n  /**\n   * Дата рождения клиента.\n   */\n  birthDate: SN;\n\n  /**\n   * Паспортные данные клиента, включая серию и номер паспорта.\n   */\n  passport: {\n    serialNumber: SN; // Серийный номер паспорта\n    date: SN; // Дата выдачи паспорта\n  };\n\n  /**\n   * Дополнительный городской номер телефона клиента.\n   */\n  additionalPhone: NN;\n\n  /**\n   * Регион клиента.\n   */\n  region: SN;\n\n  /**\n   * ICC ID (International Circuit Card Identifier) Sim-карты клиента.\n   */\n  iccId: NN;\n\n  /**\n   * Номер лицевого счета клиента.\n   */\n  account: number;\n\n  /**\n   * Тип юридического лица (например, физ. лицо, юр. лицо, ИП и т.д.).\n   */\n  juridicalType: JuridicalType | string;\n\n  /**\n   * Номер договора клиента.\n   */\n  contractNumber: string;\n\n  /**\n   * Тип сегмента клиента (например, массовый рынок, VIP и т.д.).\n   */\n  segment: SegmentType | string;\n\n  /**\n   * Текущий статус клиента (например, активен, заблокирован и т.д.).\n   */\n  state: StateType | string;\n}\n\n/**\n * @interface IDataClientSearchResponse\n * @description Структура данных для ответа на запрос поиска клиентов, включая запрос и результаты поиска.\n */\nexport interface IDataClientSearchResponse {\n  /**\n   * Запрос в структуре или незавершенном виде.\n   */\n  query: IQueryStructured | IQueryUnStructured;\n\n  /**\n   * Массив объектов с результатами поиска клиентов.\n   */\n  clients: IClientSearchResult[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITraceId.html":{"url":"interfaces/ITraceId.html","title":"interface - ITraceId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITraceId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/apimeInputs/apime-inputs.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для идентификатора трассировки.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            traceID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        traceID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        traceID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                     Идентификатор трассировки, уникальный для каждой сессии или запроса\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITraceId {\n  /**\n   *  Идентификатор трассировки, уникальный для каждой сессии или запроса\n   */\n  traceID: string;\n}\n\n/**\n * Интерфейс для входных данных токена доступа.\n */\nexport interface IAccessTokenInput {\n  /**\n   * Токен доступа, используемый для авторизации пользователя или API-запроса.\n   */\n  access_token: string;\n\n  /**\n   * Опциональный идентификатор трассировки для отслеживания истории запросов и логов.\n   */\n  traceId?: ITraceId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidationError.html":{"url":"interfaces/IValidationError.html","title":"interface - IValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/errors.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления валидационной ошибки.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Имя поля, которое вызвало ошибку.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Описание ошибки для поля.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IError {\n  /** Флаг статуса ошибки (true для успешных операций, false для ошибок). */\n  status: boolean;\n\n  /** Описание ошибки (необязательное поле, может быть пустым). */\n  message?: string;\n}\n\n/**\n * Интерфейс для представления валидационной ошибки.\n */\nexport interface IValidationError {\n  /** Имя поля, которое вызвало ошибку. */\n  field: string;\n\n  /** Описание ошибки для поля. */\n  message: string;\n}\n\n/**\n * Интерфейс для представления переменных валидации.\n */\nexport interface IValidationVariables {\n  /** Флаг статуса валидации. */\n  status: boolean;\n\n  /** Список ошибок валидации. */\n  errors: IValidationError[];\n}\n\n/**\n * Интерфейс для представления ошибки HTTP.\n */\nexport interface HttpError {\n  /** Код состояния HTTP (например, 400, 404, 500). */\n  statusCode: number;\n\n  /** Сообщение об ошибке. */\n  message: string;\n\n  /** Путь запроса, вызвавшего ошибку. */\n  path: string;\n\n  /** HTTP метод, при котором произошла ошибка (например, GET, POST). */\n  method: string;\n\n  /** Флаг завершенности обработки ошибки. */\n  complete: boolean;\n\n  /** Временная метка ошибки. */\n  timestamp: string;\n}\n\n/**\n * Интерфейс для представления журнальной записи.\n */\nexport interface ILogger {\n  /**\n   * Наименование службы, генерирующей запись журнала.\n   * Например: \"AuthService\", \"ClientService\" и т. д.(для каждой службы должен быть свой тип журнала)\n   */\n  serviceName: string;\n\n  /**\n   * Сообщение журнала.\n   * Описывает событие или ошибку, которые произошли.\n   */\n  message: string;\n\n  /**\n   * Тип журнала.\n   * Например: \"INFO\" для информационных сообщений, \"ERROR\" для ошибок, \"DEBUG\" для отладки.\n   */\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidationVariables.html":{"url":"interfaces/IValidationVariables.html","title":"interface - IValidationVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidationVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/technical/errors.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для представления переменных валидации.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         IValidationError[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IValidationError[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Список ошибок валидации.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Флаг статуса валидации.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IError {\n  /** Флаг статуса ошибки (true для успешных операций, false для ошибок). */\n  status: boolean;\n\n  /** Описание ошибки (необязательное поле, может быть пустым). */\n  message?: string;\n}\n\n/**\n * Интерфейс для представления валидационной ошибки.\n */\nexport interface IValidationError {\n  /** Имя поля, которое вызвало ошибку. */\n  field: string;\n\n  /** Описание ошибки для поля. */\n  message: string;\n}\n\n/**\n * Интерфейс для представления переменных валидации.\n */\nexport interface IValidationVariables {\n  /** Флаг статуса валидации. */\n  status: boolean;\n\n  /** Список ошибок валидации. */\n  errors: IValidationError[];\n}\n\n/**\n * Интерфейс для представления ошибки HTTP.\n */\nexport interface HttpError {\n  /** Код состояния HTTP (например, 400, 404, 500). */\n  statusCode: number;\n\n  /** Сообщение об ошибке. */\n  message: string;\n\n  /** Путь запроса, вызвавшего ошибку. */\n  path: string;\n\n  /** HTTP метод, при котором произошла ошибка (например, GET, POST). */\n  method: string;\n\n  /** Флаг завершенности обработки ошибки. */\n  complete: boolean;\n\n  /** Временная метка ошибки. */\n  timestamp: string;\n}\n\n/**\n * Интерфейс для представления журнальной записи.\n */\nexport interface ILogger {\n  /**\n   * Наименование службы, генерирующей запись журнала.\n   * Например: \"AuthService\", \"ClientService\" и т. д.(для каждой службы должен быть свой тип журнала)\n   */\n  serviceName: string;\n\n  /**\n   * Сообщение журнала.\n   * Описывает событие или ошибку, которые произошли.\n   */\n  message: string;\n\n  /**\n   * Тип журнала.\n   * Например: \"INFO\" для информационных сообщений, \"ERROR\" для ошибок, \"DEBUG\" для отладки.\n   */\n  type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Journal.html":{"url":"entities/Journal.html","title":"entity - Journal","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Journal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/entities/logs-admin/logs-admin.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Каждый элемент журнала отслеживает действия, выполненные пользователем или системой.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                additionalData\n                            \n                            \n                                    \n                                admin\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                registred\n                            \n                            \n                                    \n                                service\n                            \n                            \n                                    \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        additionalData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record | Array>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'jsonb', nullable: true, comment: 'Дополнительные данные, связанные с действием'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/entities/logs-admin/logs-admin.entity.ts:64\n                        \n                    \n\n            \n                \n                    Дополнительные данные, связанные с действием.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'Логин администратора, который сделал действие', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/entities/logs-admin/logs-admin.entity.ts:38\n                        \n                    \n\n            \n                \n                    Логин администратора, который выполнил действие. Возможно, это может быть null.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/entities/logs-admin/logs-admin.entity.ts:23\n                        \n                    \n\n            \n                \n                    Уникальный идентификатор записи журнала.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registred\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamptz', comment: 'Дата лога', default: () => NOW()})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/entities/logs-admin/logs-admin.entity.ts:54\n                        \n                    \n\n            \n                \n                    Дата и время создания записи.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'Сервис, в котором это было сделано'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/entities/logs-admin/logs-admin.entity.ts:29\n                        \n                    \n\n            \n                \n                    Сервис в котором это действие было выполнено.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: 'Действие (описание)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/entities/logs-admin/logs-admin.entity.ts:44\n                        \n                    \n\n            \n                \n                    Описание действия в журнале.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  BaseEntity,\n  Index,\n  CreateDateColumn,\n} from 'typeorm';\nimport { IJournal } from '../../interfaces';\n\n/**\n * @entity Journal\n * @description Представление журнала действий в системе.\n * Каждый элемент журнала отслеживает действия, выполненные пользователем или системой.\n */\n@Entity({ name: 'journals' })\n@Index(['id'])\nexport class Journal extends BaseEntity implements IJournal {\n  /**\n   * Уникальный идентификатор записи журнала.\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Сервис в котором это действие было выполнено.\n   */\n  @Column({ comment: 'Сервис, в котором это было сделано' })\n  service: string;\n\n  /**\n   * Логин администратора, который выполнил действие. Возможно, это может быть null.\n   */\n  @Column({\n    comment: 'Логин администратора, который сделал действие',\n    nullable: true,\n  })\n  admin: string;\n\n  /**\n   * Описание действия в журнале.\n   */\n  @Column({ comment: 'Действие (описание)' })\n  text: string;\n\n  /**\n   * Дата и время создания записи.\n   */\n  @CreateDateColumn({\n    type: 'timestamptz',\n    comment: 'Дата лога',\n    default: () => 'NOW()',\n  })\n  registred: Date;\n\n  /**\n   * Дополнительные данные, связанные с действием.\n   */\n  @Column({\n    type: 'jsonb',\n    nullable: true,\n    comment: 'Дополнительные данные, связанные с действием',\n  })\n  additionalData: Record | Array>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JournalDTO.html":{"url":"classes/JournalDTO.html","title":"class - JournalDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JournalDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/journals/journals.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                JournalDTO - это объектный тип для описания записи журнала.\nСодержит поля для уникального идентификатора (id), сервиса (service), администратора (admin),\nтекста действия (text), даты действия (registred) и дополнительных данных (additionalData).\n\nid: Уникальный идентификатор записи.\nservice: Название сервиса, к которому относится действие.\nadmin: Логин пользователя, который выполнял действие (необязательно).\ntext: Описание действия.\nregistred: Дата и время регистрации действия.\nadditionalData: Дополнительные данные, связанные с действием (json объект или массив объектов).\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                additionalData\n                            \n                            \n                                    \n                                admin\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                registred\n                            \n                            \n                                    \n                                service\n                            \n                            \n                                    \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        additionalData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record | Array>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Дополнительные данные, связанные с действием (json скорее всего)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        admin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({description: 'Логин пользователя который все это сделал', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Уникальный идентификатор действия'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registred\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({description: 'Дата действия', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({description: 'Сервис, в котором это сделано'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({description: 'Действие'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID, Float } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\n\n/**\n * `JournalDTO` - это объектный тип для описания записи журнала.\n * Содержит поля для уникального идентификатора (`id`), сервиса (`service`), администратора (`admin`),\n * текста действия (`text`), даты действия (`registred`) и дополнительных данных (`additionalData`).\n *\n * - `id`: Уникальный идентификатор записи.\n * - `service`: Название сервиса, к которому относится действие.\n * - `admin`: Логин пользователя, который выполнял действие (необязательно).\n * - `text`: Описание действия.\n * - `registred`: Дата и время регистрации действия.\n * - `additionalData`: Дополнительные данные, связанные с действием (json объект или массив объектов).\n */\n@ObjectType({ description: 'Лог' })\nexport class JournalDTO {\n  @Field(() => ID, { description: 'Уникальный идентификатор действия' })\n  id: string;\n\n  @Field({ description: 'Сервис, в котором это сделано' })\n  service: string;\n\n  @Field({\n    description: 'Логин пользователя который все это сделал',\n    nullable: true,\n  })\n  admin: string;\n\n  @Field({ description: 'Действие' })\n  text: string;\n\n  @Field({ description: 'Дата действия', nullable: true })\n  registred: Date;\n\n  @Field(() => GraphQLJSON, {\n    nullable: true,\n    description:\n      'Дополнительные данные, связанные с действием (json скорее всего)',\n  })\n  additionalData?: Record | Array>;\n}\n\n/**\n * `JournalsDTO` - это объектный тип для представления списка журналов.\n * Содержит массив записей журнала и общее количество записей.\n *\n * - `journals`: Список записей журнала.\n * - `total`: Общее количество записей.\n */\n@ObjectType({ description: 'Список действий' })\nexport class JournalsDTO {\n  @Field(() => [JournalDTO], { description: 'Список Действий' })\n  journals: JournalDTO[];\n\n  @Field(() => Float, { description: 'Количество дейстивий' })\n  total: number;\n\n  constructor(journals: JournalDTO[], total: number) {\n    this.journals = journals;\n    this.total = total;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JournalizatingModule.html":{"url":"modules/JournalizatingModule.html","title":"module - JournalizatingModule","body":"\n                   \n\n\n\n\n    Modules\n    JournalizatingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JournalizatingModule\n\n\n\ncluster_JournalizatingModule_providers\n\n\n\ncluster_JournalizatingModule_exports\n\n\n\n\nJournalizatingService \n\nJournalizatingService \n\n\n\nJournalizatingModule\n\nJournalizatingModule\n\nJournalizatingService  -->\n\nJournalizatingModule->JournalizatingService \n\n\n\n\n\nJournalizatingService\n\nJournalizatingService\n\nJournalizatingModule -->\n\nJournalizatingService->JournalizatingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/journalizating/src/lib/journalizating.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JournalizatingService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JournalizatingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JournalizatingService } from './journalizating.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Journal } from '@web-clients-backend/shared';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ElasticsearchModule } from '@nestjs/elasticsearch';\n\n@Module({\n  imports: [\n    ElasticsearchModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const elasticsearchNode =\n          configService.get('elasticsearchNode');\n        if (!elasticsearchNode) {\n          throw new Error('Elasticsearch node configuration is missing');\n        }\n        return {\n          maxRetries: 10,\n          requestTimeout: 60000,\n          pingTimeout: 60000,\n          sniffOnStart: true,\n          node: elasticsearchNode,\n        };\n      },\n      inject: [ConfigService],\n    }),\n    ConfigModule,\n    TypeOrmModule.forFeature([Journal]),\n  ],\n  providers: [JournalizatingService],\n  exports: [JournalizatingService],\n})\nexport class JournalizatingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JournalizatingService.html":{"url":"injectables/JournalizatingService.html","title":"injectable - JournalizatingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JournalizatingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/journalizating/src/lib/journalizating.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createIndexIfNotExists\n                            \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                createLogData\n                            \n                            \n                                    Async\n                                getAllLogs\n                            \n                            \n                                    Async\n                                searchLogs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsAdminRepo: Repository, esService: ElasticsearchService)\n                    \n                \n                        \n                            \n                                Defined in libs/journalizating/src/lib/journalizating.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsAdminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        esService\n                                                  \n                                                        \n                                                                    ElasticsearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createIndexIfNotExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    createIndexIfNotExists()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/journalizating/src/lib/journalizating.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                            \n                                Возвращает пустое обещание после выполнения проверки и создания индекса (если необходимо).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLog(data: ICreateJournal)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/journalizating/src/lib/journalizating.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ICreateJournal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные для создания новой записи лога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Возвращает пустое обещание после создания лога.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLogData\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLogData(payload: ICreateJournal)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/journalizating/src/lib/journalizating.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ICreateJournal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные для создания и индексирования записи лога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Возвращает true, если запись лога была успешно создана и индексирована, иначе false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllLogs()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/journalizating/src/lib/journalizating.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Массив всех записей лога из базы данных.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchLogs(payload: ISearchJournal)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/journalizating/src/lib/journalizating.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchJournal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект фильтров для поиска записей в журналах.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Возвращает массив записей лога, соответствующих условиям поиска, или null, если результаты не найдены.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ICreateJournal,\n  IJournal,\n  ISearchJournal,\n  Journal,\n} from '@web-clients-backend/shared';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ElasticsearchService } from '@nestjs/elasticsearch';\n\n@Injectable()\nexport class JournalizatingService {\n  constructor(\n    @InjectRepository(Journal)\n    private readonly logsAdminRepo: Repository,\n    private readonly esService: ElasticsearchService\n  ) {}\n\n  /**\n   * @description Проверяет наличие индекса 'journals' в Elasticsearch, и если его нет, создает индекс с необходимыми маппингами.\n   * @returns {Promise} Возвращает пустое обещание после выполнения проверки и создания индекса (если необходимо).\n   */\n  async createIndexIfNotExists() {\n    const indexExists = await this.esService.indices.exists({\n      index: 'journals',\n    });\n    if (!indexExists.body) {\n      await this.esService.indices.create({\n        index: 'journals',\n        body: {\n          mappings: {\n            properties: {\n              service: { type: 'text' },\n              admin: { type: 'text' },\n              text: { type: 'text' },\n              additionalData: {\n                properties: {\n                  title: { type: 'text' },\n                  name: { type: 'text' },\n                  id: { type: 'keyword' },\n                },\n              },\n              registred: { type: 'date' },\n            },\n          },\n        },\n      });\n    }\n  }\n\n  /**\n   * @description Создает новый лог записи в базе данных и Elasticsearch.\n   * @param {ICreateJournal} data - Данные для создания новой записи лога.\n   * @returns {Promise} Возвращает пустое обещание после создания лога.\n   */\n  async createLog(data: ICreateJournal) {\n    await this.createLogData(data);\n  }\n\n  /**\n   * @description Сохраняет лог в базе данных и индексирует его в Elasticsearch.\n   * @param {ICreateJournal} payload - Данные для создания и индексирования записи лога.\n   * @returns {Promise} Возвращает true, если запись лога была успешно создана и индексирована, иначе false.\n   */\n  async createLogData(payload: ICreateJournal): Promise {\n    await this.createIndexIfNotExists();\n    const log = await this.logsAdminRepo.save(payload);\n    if (log) {\n      // Индексируем лог в Elasticsearch после сохранения в базе данных\n      await this.esService.index({\n        index: 'journals',\n        id: log.id,\n        body: log,\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @description Получает все журналы (логи) из базы данных.\n   * @returns {Promise} Массив всех записей лога из базы данных.\n   */\n  async getAllLogs(): Promise {\n    return this.logsAdminRepo.find();\n  }\n\n  /**\n   * @description Выполняет поиск журналов (логов) в Elasticsearch с фильтрацией по параметрам, таким как дата, сервис, администратор, и дополнительные данные.\n   * @param {ISearchJournal} payload - Объект фильтров для поиска записей в журналах.\n   * @returns {Promise} Возвращает массив записей лога, соответствующих условиям поиска, или null, если результаты не найдены.\n   */\n  async searchLogs(payload: ISearchJournal): Promise {\n    if (payload.fromDate) {\n      const fromDateObj = new Date(payload.fromDate);\n      fromDateObj.setHours(0, 0, 0, 0);\n      payload.fromDate = fromDateObj.toISOString();\n    }\n\n    if (payload.toDate) {\n      const toDateObj = new Date(payload.toDate);\n      toDateObj.setHours(23, 59, 59, 999);\n      payload.toDate = toDateObj.toISOString();\n    }\n\n    if (!payload.fromDate || !payload.toDate) {\n      const now = new Date();\n\n      const startOfDay = new Date(now);\n      startOfDay.setHours(0, 0, 0, 0);\n\n      const endOfDay = new Date(now);\n      endOfDay.setHours(23, 59, 59, 999);\n\n      // Использовать текущий день, если даты не были переданы\n      payload.fromDate = payload.fromDate || startOfDay.toISOString();\n      payload.toDate = payload.toDate || endOfDay.toISOString();\n    }\n\n    const mustConditions: any[] = [];\n\n    if (payload.service) {\n      const service = payload.service;\n      mustConditions.push({ match: { service } });\n    }\n\n    if (payload.admin) {\n      const admin = payload.admin;\n      mustConditions.push({ match: { admin } });\n    }\n\n    if (payload.fromDate && payload.toDate) {\n      mustConditions.push({\n        range: {\n          registred: {\n            gte: payload.fromDate,\n            lte: payload.toDate,\n          },\n        },\n      });\n    }\n\n    if (payload.title || payload.dataId) {\n      const shouldConditions: any[] = [];\n\n      if (payload.title) {\n        const title = payload.title;\n        shouldConditions.push(\n          { match: { 'additionalData.title': title } },\n          { match: { 'additionalData.name': title } }\n        );\n      }\n\n      if (payload.dataId) {\n        const dataId = payload.dataId;\n        shouldConditions.push({\n          term: { 'additionalData.id': dataId },\n        }); //term для ===\n      }\n\n      mustConditions.push({\n        bool: {\n          should: shouldConditions,\n          minimum_should_match: 1, // хотя бы одно условие должно быть выполнено\n        },\n      });\n    }\n\n    const response = await this.esService.search({\n      index: 'journals',\n      size: 1500,\n      body: {\n        query: {\n          bool: {\n            must: mustConditions,\n          },\n        },\n      },\n    });\n\n    const hits = response.body.hits?.hits;\n    if (!hits || hits.length === 0) {\n      return null;\n    }\n\n    const maphits = hits.map((hit: any) => {\n      // const registredDate = new Date(hit._source.registred);// Преобразуем строку в объект Date\n      return {\n        ...hit._source,\n        registred: hit._source.registred,\n      } as IJournal;\n    });\n    return maphits;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JournalizationController.html":{"url":"controllers/JournalizationController.html","title":"controller - JournalizationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JournalizationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/journalization/src/app/journalization.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handleGetLogs\n                            \n                            \n                                    \n                                    Async\n                                handleJournalization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleGetLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetLogs(payload: ISearchJournal)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern({cmd: GET_LOGS})\n                \n            \n\n                    \n                        \n                            Defined in apps/journalization/src/app/journalization.controller.ts:34\n                        \n                    \n\n\n            \n                \n                        Выполняет поиск логов по параметрам, используя переданные фильтры.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchJournal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект фильтров для поиска логов.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Возвращает массив найденных логов или null, если результатов нет.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleJournalization\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleJournalization(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(CREATE_LOG)\n                \n            \n\n                    \n                        \n                            Defined in apps/journalization/src/app/journalization.controller.ts:22\n                        \n                    \n\n\n            \n                \n                        Журналируется входящее сообщение и вызывается метод для создания лога в сервисе.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные, полученные из события для создания лога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Возвращает пустое обещание после обработки и создания лога.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\nimport { EventPattern, MessagePattern, Payload } from '@nestjs/microservices';\nimport {\n  CREATE_LOG,\n  GET_LOGS,\n  ISearchJournal,\n} from '@web-clients-backend/shared';\nimport { JournalizatingService } from '@web-clients-backend/journalizating';\n\n@Controller()\nexport class JournalizationController {\n  constructor(private readonly journalizatingService: JournalizatingService) {}\n\n  /**\n   * @description Обрабатывает событие создания лога, полученное по шаблону события CREATE_LOG.\n   * Журналируется входящее сообщение и вызывается метод для создания лога в сервисе.\n   * @param {any} data - Данные, полученные из события для создания лога.\n   * @returns {Promise} Возвращает пустое обещание после обработки и создания лога.\n   */\n  @EventPattern(CREATE_LOG)\n  async handleJournalization(@Payload() data: any) {\n    console.log('CreateLog data:', data);\n    await this.journalizatingService.createLog(data);\n  }\n\n  /**\n   * @description Обрабатывает сообщение для получения логов по запросу GET_LOGS.\n   * Выполняет поиск логов по параметрам, используя переданные фильтры.\n   * @param {ISearchJournal} payload - Объект фильтров для поиска логов.\n   * @returns {Promise} Возвращает массив найденных логов или null, если результатов нет.\n   */\n  @MessagePattern({ cmd: GET_LOGS })\n  async handleGetLogs(payload: ISearchJournal) {\n    const logs = await this.journalizatingService.searchLogs(payload);\n    return logs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JournalizationModule.html":{"url":"modules/JournalizationModule.html","title":"module - JournalizationModule","body":"\n                   \n\n\n\n\n    Modules\n    JournalizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JournalizationModule\n\n\n\ncluster_JournalizationModule_imports\n\n\n\n\nJournalizatingModule\n\nJournalizatingModule\n\n\n\nJournalizationModule\n\nJournalizationModule\n\nJournalizationModule -->\n\nJournalizatingModule->JournalizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/journalization/src/app/journalization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            JournalizationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JournalizatingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from './config/configuration';\nimport { validationSchema } from './config/validation';\nimport { JournalizationController } from './journalization.controller';\nimport { JournalizatingModule } from '@web-clients-backend/journalizating';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { getConnectionOptions, getMetadataArgsStorage } from 'typeorm';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n      validationSchema: validationSchema,\n    }),\n    TypeOrmModule.forRootAsync({\n      useFactory: async () =>\n        Object.assign(await getConnectionOptions(), {\n          entities: getMetadataArgsStorage().tables.map((tbl) => {\n            return tbl.target;\n          }),\n        }),\n    }),\n    JournalizatingModule,\n  ],\n  controllers: [JournalizationController],\n  providers: [],\n})\nexport class JournalizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JournalsDTO.html":{"url":"classes/JournalsDTO.html","title":"class - JournalsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JournalsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/journals/journals.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                JournalsDTO - это объектный тип для представления списка журналов.\nСодержит массив записей журнала и общее количество записей.\n\njournals: Список записей журнала.\ntotal: Общее количество записей.\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                journals\n                            \n                            \n                                    \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(journals: JournalDTO[], total: number)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        journals\n                                                  \n                                                        \n                                                                        JournalDTO[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        journals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JournalDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Список Действий'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Количество дейстивий'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/journals/journals.dto.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, ID, Float } from '@nestjs/graphql';\nimport GraphQLJSON from 'graphql-type-json';\n\n/**\n * `JournalDTO` - это объектный тип для описания записи журнала.\n * Содержит поля для уникального идентификатора (`id`), сервиса (`service`), администратора (`admin`),\n * текста действия (`text`), даты действия (`registred`) и дополнительных данных (`additionalData`).\n *\n * - `id`: Уникальный идентификатор записи.\n * - `service`: Название сервиса, к которому относится действие.\n * - `admin`: Логин пользователя, который выполнял действие (необязательно).\n * - `text`: Описание действия.\n * - `registred`: Дата и время регистрации действия.\n * - `additionalData`: Дополнительные данные, связанные с действием (json объект или массив объектов).\n */\n@ObjectType({ description: 'Лог' })\nexport class JournalDTO {\n  @Field(() => ID, { description: 'Уникальный идентификатор действия' })\n  id: string;\n\n  @Field({ description: 'Сервис, в котором это сделано' })\n  service: string;\n\n  @Field({\n    description: 'Логин пользователя который все это сделал',\n    nullable: true,\n  })\n  admin: string;\n\n  @Field({ description: 'Действие' })\n  text: string;\n\n  @Field({ description: 'Дата действия', nullable: true })\n  registred: Date;\n\n  @Field(() => GraphQLJSON, {\n    nullable: true,\n    description:\n      'Дополнительные данные, связанные с действием (json скорее всего)',\n  })\n  additionalData?: Record | Array>;\n}\n\n/**\n * `JournalsDTO` - это объектный тип для представления списка журналов.\n * Содержит массив записей журнала и общее количество записей.\n *\n * - `journals`: Список записей журнала.\n * - `total`: Общее количество записей.\n */\n@ObjectType({ description: 'Список действий' })\nexport class JournalsDTO {\n  @Field(() => [JournalDTO], { description: 'Список Действий' })\n  journals: JournalDTO[];\n\n  @Field(() => Float, { description: 'Количество дейстивий' })\n  total: number;\n\n  constructor(journals: JournalDTO[], total: number) {\n    this.journals = journals;\n    this.total = total;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeycloakController.html":{"url":"controllers/KeycloakController.html","title":"controller - KeycloakController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeycloakController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/keycloak/src/lib/keycloak.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keycloak\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { KeycloakService } from './keycloak.service';\n\n@Controller('keycloak')\nexport class KeycloakController {\n  constructor(private keycloakService: KeycloakService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeycloakIntegrationModule.html":{"url":"modules/KeycloakIntegrationModule.html","title":"module - KeycloakIntegrationModule","body":"\n                   \n\n\n\n\n    Modules\n    KeycloakIntegrationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeycloakIntegrationModule\n\n\n\ncluster_KeycloakIntegrationModule_providers\n\n\n\ncluster_KeycloakIntegrationModule_exports\n\n\n\n\nKeycloakIntegrationService \n\nKeycloakIntegrationService \n\n\n\nKeycloakIntegrationModule\n\nKeycloakIntegrationModule\n\nKeycloakIntegrationService  -->\n\nKeycloakIntegrationModule->KeycloakIntegrationService \n\n\n\n\n\nKeycloakIntegrationService\n\nKeycloakIntegrationService\n\nKeycloakIntegrationModule -->\n\nKeycloakIntegrationService->KeycloakIntegrationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/keycloak-integration/src/lib/keycloak-integration.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeycloakIntegrationService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeycloakIntegrationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { KeycloakIntegrationService } from './keycloak-integration.service';\n\n@Module({\n  controllers: [],\n  providers: [KeycloakIntegrationService],\n  exports: [KeycloakIntegrationService],\n})\nexport class KeycloakIntegrationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeycloakIntegrationService.html":{"url":"injectables/KeycloakIntegrationService.html","title":"injectable - KeycloakIntegrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeycloakIntegrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/keycloak-integration/src/lib/keycloak-integration.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class KeycloakIntegrationService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeycloakModule.html":{"url":"modules/KeycloakModule.html","title":"module - KeycloakModule","body":"\n                   \n\n\n\n\n    Modules\n    KeycloakModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeycloakModule\n\n\n\ncluster_KeycloakModule_exports\n\n\n\ncluster_KeycloakModule_providers\n\n\n\n\nKeycloakService \n\nKeycloakService \n\n\n\nKeycloakTokenGuard \n\nKeycloakTokenGuard \n\n\n\nKeycloakModule\n\nKeycloakModule\n\nKeycloakService  -->\n\nKeycloakModule->KeycloakService \n\n\n\nKeycloakTokenGuard  -->\n\nKeycloakModule->KeycloakTokenGuard \n\n\n\n\n\nKeycloakService\n\nKeycloakService\n\nKeycloakModule -->\n\nKeycloakService->KeycloakModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/keycloak/src/lib/keycloak.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeycloakService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeycloakService\n                        \n                        \n                            KeycloakTokenGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { KeycloakService } from './keycloak.service';\nimport { HttpModule, HttpModuleOptions } from '@nestjs/axios';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport * as https from 'https';\nimport { ConfigurationKeycloak } from '@web-clients-backend/shared';\nimport { KeycloakTokenGuard } from './tokenGuard.guard';\n\n@Module({\n  imports: [\n    /**\n     * @import HttpModule\n     * @description Модуль для работы с HTTP-запросами.\n     * @type {HttpModule}\n     * @returns {HttpModuleOptions} Настройки для HTTP-клиента.\n     * @properties\n     *   @property {string} baseURL - Базовый URL для API Me.\n     *   @property {number} timeout - Таймаут запросов в миллисекундах.\n     *   @property {number} maxRedirects - Максимальное количество перенаправлений.\n     *   @property {https.Agent} httpsAgent - Настройки HTTPS агента.\n     */\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      /**\n       * @method useFactory\n       * @description Фабричный метод для асинхронной настройки HTTP-модуля.\n       * @param {ConfigService} configService - Сервис для получения конфигураций.\n       * @returns {Promise } Объект настроек для HTTP-клиента.\n       * @throws {Error} Если конфигурация API Me отсутствует.\n       */\n      useFactory: async (\n        configService: ConfigService\n      ): Promise => {\n        const keycloakConfig =\n          configService.get('keycloak');\n\n        if (!keycloakConfig) {\n          throw new Error('Keycloak configuration is missing');\n        }\n        return {\n          baseURL: `${keycloakConfig.host}/realms/${keycloakConfig.realm}`,\n          timeout: 10000,\n          maxRedirects: 300,\n          httpsAgent: new https.Agent({\n            rejectUnauthorized: false,\n          }),\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  // controllers: [KeycloakController],\n  providers: [KeycloakService, KeycloakTokenGuard],\n  exports: [KeycloakService, KeycloakTokenGuard],\n})\nexport class KeycloakModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeycloakService.html":{"url":"injectables/KeycloakService.html","title":"injectable - KeycloakService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeycloakService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/keycloak/src/lib/keycloak.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                keycloakConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                introspectToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/keycloak/src/lib/keycloak.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        introspectToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    introspectToken(access_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/keycloak/src/lib/keycloak.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                access_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        keycloakConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in libs/keycloak/src/lib/keycloak.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { keycloakMethods } from './keycloak-methods';\nimport { ConfigService } from '@nestjs/config';\nimport { ConfigurationKeycloak } from '@web-clients-backend/shared';\n\n@Injectable()\nexport class KeycloakService {\n  private keycloakConfig: any;\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService\n  ) {\n    //  let keycloakConfig = configService.get('keycloak');\n    this.keycloakConfig =\n      this.configService.get('keycloak');\n  }\n\n  async introspectToken(access_token: string): Promise {\n    try {\n      const { client_id, client_secret } = this.keycloakConfig;\n      const response = await this.httpService.axiosRef.post(\n        keycloakMethods.introspect,\n        new URLSearchParams({\n          client_id,\n          client_secret,\n          token: access_token,\n        }).toString(),\n        {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      // console.warn(error);\n\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/KeycloakTokenGuard.html":{"url":"guards/KeycloakTokenGuard.html","title":"guard - KeycloakTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    KeycloakTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/keycloak/src/lib/tokenGuard.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(keycloakService: KeycloakService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/keycloak/src/lib/tokenGuard.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keycloakService\n                                                  \n                                                        \n                                                                        KeycloakService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/keycloak/src/lib/tokenGuard.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { KeycloakService } from './keycloak.service';\nimport { ConfigService } from '@nestjs/config';\nimport { ConfigurationKeycloak } from '@web-clients-backend/shared';\n\n@Injectable()\nexport class KeycloakTokenGuard implements CanActivate {\n  constructor(\n    private readonly keycloakService: KeycloakService,\n    private readonly configService: ConfigService\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const keycloakConfig =\n      this.configService.get('keycloak');\n\n    if (!keycloakConfig) {\n      throw new Error('keycloak configuration is missing');\n    }\n\n    if (!keycloakConfig.keycloakGuard) {\n      return true;\n    }\n    const gqlContext = GqlExecutionContext.create(context).getContext();\n    const req = gqlContext.req;\n\n    if (req.url === '/gql/health') {\n      return true;\n    }\n    const token =\n      GqlExecutionContext.create(context).getContext().req.headers\n        .authorization;\n    if (!token) {\n      console.warn('Токен не действителен в keycloak');\n      throw new UnauthorizedException();\n    }\n    const access_token = token.replace('Bearer ', '');\n    const tokenData = await this.keycloakService.introspectToken(access_token);\n\n    if (!tokenData || !tokenData.active) {\n      throw new UnauthorizedException('Токен не действителен в keycloak');\n    }\n    console.warn('Токен действителен в keycloak ');\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsAndJournalsModule.html":{"url":"modules/LogsAndJournalsModule.html","title":"module - LogsAndJournalsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsAndJournalsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LogsAndJournalsModule\n\n\n\ncluster_LogsAndJournalsModule_exports\n\n\n\ncluster_LogsAndJournalsModule_providers\n\n\n\ncluster_LogsAndJournalsModule_imports\n\n\n\n\nRabbitModule\n\nRabbitModule\n\n\n\nLogsAndJournalsModule\n\nLogsAndJournalsModule\n\nLogsAndJournalsModule -->\n\nRabbitModule->LogsAndJournalsModule\n\n\n\n\n\nAppLoggerLoki \n\nAppLoggerLoki \n\nAppLoggerLoki  -->\n\nLogsAndJournalsModule->AppLoggerLoki \n\n\n\n\n\nLogsAndJournalsService \n\nLogsAndJournalsService \n\nLogsAndJournalsService  -->\n\nLogsAndJournalsModule->LogsAndJournalsService \n\n\n\n\n\nAppLoggerLoki\n\nAppLoggerLoki\n\nLogsAndJournalsModule -->\n\nAppLoggerLoki->LogsAndJournalsModule\n\n\n\n\n\nLogsAndJournalsService\n\nLogsAndJournalsService\n\nLogsAndJournalsModule -->\n\nLogsAndJournalsService->LogsAndJournalsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/logs/src/lib/logs-journals.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppLoggerLoki\n                        \n                        \n                            LogsAndJournalsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RabbitModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppLoggerLoki\n                        \n                        \n                            LogsAndJournalsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppLoggerLoki } from './loggerloki.service';\nimport { LogsAndJournalsService } from './logs-journals.service';\nimport { LogsAndJournalsResolver } from './logs-journals.resolver';\nimport { ConfigModule } from '@nestjs/config';\nimport { RabbitModule } from '@web-clients-backend/rabbit';\n\n@Module({\n  imports: [ConfigModule, RabbitModule],\n  providers: [AppLoggerLoki, LogsAndJournalsService, LogsAndJournalsResolver],\n  exports: [AppLoggerLoki, LogsAndJournalsService],\n})\nexport class LogsAndJournalsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogsAndJournalsResolver.html":{"url":"classes/LogsAndJournalsResolver.html","title":"class - LogsAndJournalsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogsAndJournalsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/logs/src/lib/logs-journals.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getAllJournal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logsAdminService: LogsAndJournalsService)\n                    \n                \n                        \n                            \n                                Defined in libs/logs/src/lib/logs-journals.resolver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsAdminService\n                                                  \n                                                        \n                                                                        LogsAndJournalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllJournal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllJournal(pagination: PaginationDTO, service?: string, admin?: string, fromDate?: string, toDate?: string, title?: string, dataId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'journalsData', description: 'Получить журнал действий'})\n                \n            \n\n                    \n                        \n                            Defined in libs/logs/src/lib/logs-journals.resolver.ts:29\n                        \n                    \n\n\n            \n                \n                        Выполняет сортировку по дате создания и реализует пагинацию для отображения данных.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pagination\n                                            \n                                                            PaginationDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПараметры пагинации, включающие номер страницы и количество элементов на странице.\n\n\n                                            \n                                        \n                                        \n                                                service\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Фильтр по названию сервиса, который нужно учитывать при получении журналов.\n\n\n                                            \n                                        \n                                        \n                                                admin\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Фильтр по имени администратора для поиска журналов.\n\n\n                                            \n                                        \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Фильтр по дате начала периода для получения журналов.\n\n\n                                            \n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Фильтр по дате окончания периода для получения журналов.\n\n\n                                            \n                                        \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Фильтр по заголовку или имени для поиска в дополнительной информации.\n\n\n                                            \n                                        \n                                        \n                                                dataId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \n(Необязательный) Идентификатор данных для фильтрации журналов по конкретным данным.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Возвращает объект с массивом журналов и общим количеством журналов, соответствующих критериям поиска.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args } from '@nestjs/graphql';\nimport { LogsAndJournalsService } from './logs-journals.service';\nimport {\n  generatePaginationArray,\n  JournalsDTO,\n  PaginationDTO,\n} from '@web-clients-backend/shared';\n\n@Resolver(() => JournalsDTO)\nexport class LogsAndJournalsResolver {\n  constructor(private readonly logsAdminService: LogsAndJournalsService) {}\n\n  /**\n   * @description Получает все журналы действий с учетом переданных фильтров, таких как сервис, администратор, даты, заголовок и идентификатор данных.\n   * Выполняет сортировку по дате создания и реализует пагинацию для отображения данных.\n   * @param {PaginationDTO} pagination - Параметры пагинации, включающие номер страницы и количество элементов на странице.\n   * @param {string} [service] - (Необязательный) Фильтр по названию сервиса, который нужно учитывать при получении журналов.\n   * @param {string} [admin] - (Необязательный) Фильтр по имени администратора для поиска журналов.\n   * @param {string} [fromDate] - (Необязательный) Фильтр по дате начала периода для получения журналов.\n   * @param {string} [toDate] - (Необязательный) Фильтр по дате окончания периода для получения журналов.\n   * @param {string} [title] - (Необязательный) Фильтр по заголовку или имени для поиска в дополнительной информации.\n   * @param {string} [dataId] - (Необязательный) Идентификатор данных для фильтрации журналов по конкретным данным.\n   * @returns {Promise} Возвращает объект с массивом журналов и общим количеством журналов, соответствующих критериям поиска.\n   */\n  @Query(() => JournalsDTO, {\n    name: 'journalsData',\n    description: 'Получить журнал действий',\n  })\n  async getAllJournal(\n    @Args('pagination', { nullable: false })\n    pagination: PaginationDTO,\n    @Args('service', { nullable: true }) service?: string,\n    @Args('admin', { nullable: true }) admin?: string,\n    @Args('fromDate', { nullable: true }) fromDate?: string,\n    @Args('toDate', { nullable: true }) toDate?: string,\n    @Args('title', { nullable: true }) title?: string,\n    @Args('dataId', { nullable: true }) dataId?: string\n  ): Promise {\n    const dataPayload = { service, admin, fromDate, toDate, title, dataId };\n    const journals = await this.logsAdminService.searchLogs(dataPayload);\n    if (!journals) {\n      return {\n        journals: [],\n        total: 0,\n      };\n    }\n\n    const formattedJournals = journals.map((journal) => ({\n      ...journal,\n      registred: new Date(journal.registred), // Преобразование строки в объект Date\n    }));\n\n    const logsData = formattedJournals.sort(\n      (a, b) =>\n        new Date(b.registred).getTime() - new Date(a.registred).getTime()\n    );\n    const sliceArray = await generatePaginationArray(\n      logsData,\n      pagination.page,\n      pagination.perPage\n    );\n\n    const data: JournalsDTO = {\n      journals: sliceArray.arraySlice,\n      total: sliceArray.total,\n    };\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogsAndJournalsService.html":{"url":"injectables/LogsAndJournalsService.html","title":"injectable - LogsAndJournalsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogsAndJournalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/logs/src/lib/logs-journals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                searchLogs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rabbitMQService: RabbitMQService)\n                    \n                \n                        \n                            \n                                Defined in libs/logs/src/lib/logs-journals.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rabbitMQService\n                                                  \n                                                        \n                                                                        RabbitMQService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLog(service: string, admin: string, text: string, additionalData: Record | Array>)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/logs/src/lib/logs-journals.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Лог содержит информацию о сервисе, администраторе, тексте и дополнительных данных.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                service\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nНазвание сервиса, связанного с логом.\n\n\n                                            \n                                        \n                                        \n                                                admin\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя администратора, связанного с логом.\n\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nТекст сообщения или лога.\n\n\n                                            \n                                        \n                                        \n                                                additionalData\n                                            \n                                                        Record | Array>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДополнительные данные для лога.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Возвращает пустое обещание после отправки данных в очередь.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchLogs(payload: ISearchJournal)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/logs/src/lib/logs-journals.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Выполняет передачу параметров поиска в очередь журнала и возвращает найденные логи.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchJournal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект фильтров для поиска логов.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Возвращает массив найденных логов или null, если результатов нет.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RabbitMQService } from '@web-clients-backend/rabbit';\nimport {\n  CREATE_LOG,\n  ICreateJournal,\n  IJournal,\n  ISearchJournal,\n} from '@web-clients-backend/shared';\n\nconst mockCreateLog: ICreateJournal = {\n  service: 'Client',\n  admin: 'admin',\n  text: `Запросил клиентов на стороне сервера`,\n  additionalData: {\n    id: '7c62f2db-098f-462b-a6b1-bb1024d4f0d1',\n    name: 'Какая-то хрень тест 123 iqjsi авыавыав',\n    sortOrder: 3,\n  },\n};\n@Injectable()\nexport class LogsAndJournalsService {\n  constructor(private readonly rabbitMQService: RabbitMQService) {}\n\n  /**\n   * @description Отправляет запрос на поиск логов через RabbitMQ сервис.\n   * Выполняет передачу параметров поиска в очередь журнала и возвращает найденные логи.\n   * @param {ISearchJournal} payload - Объект фильтров для поиска логов.\n   * @returns {Promise} Возвращает массив найденных логов или null, если результатов нет.\n   */\n  async searchLogs(payload: ISearchJournal): Promise {\n    const logs = await this.rabbitMQService.sendToJournalization(payload);\n    return logs || null;\n  }\n\n  /**\n   * @description Создает новый лог, отправляя данные в очередь RabbitMQ для записи в журнал.\n   * Лог содержит информацию о сервисе, администраторе, тексте и дополнительных данных.\n   * @param {string} service - Название сервиса, связанного с логом.\n   * @param {string} admin - Имя администратора, связанного с логом.\n   * @param {string} text - Текст сообщения или лога.\n   * @param {Record | Array>} additionalData - Дополнительные данные для лога.\n   * @returns {Promise} Возвращает пустое обещание после отправки данных в очередь.\n   */\n  async createLog(\n    service: string,\n    admin: string,\n    text: string,\n    additionalData: Record | Array>\n  ) {\n    const data = { service, admin, text, additionalData }; // для будущих запросов\n    // Отправляем сообщение в очередь journalization\n    await this.rabbitMQService.emitToJournalization(CREATE_LOG, mockCreateLog);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MonetaryClientSearchDTO.html":{"url":"classes/MonetaryClientSearchDTO.html","title":"class - MonetaryClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MonetaryClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/monetary.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                MonetaryClientSearchDTO - объектный тип для представления денежных средств клиента.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IMonetaryClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Наименование баланса (например, Основной или Коррекционный)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/monetary.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Значение баланса'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/monetary.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Float } from '@nestjs/graphql';\nimport { IMonetaryClient } from '../../interfaces';\n\n/**\n * `MonetaryClientSearchDTO` - объектный тип для представления денежных средств клиента.\n */\n@ObjectType({\n  description: 'Объектный тип для представления денежных средств клиента.',\n})\nexport class MonetaryClientSearchDTO implements IMonetaryClient {\n  @Field(() => String, {\n    description: 'Наименование баланса (например, Основной или Коррекционный)',\n  })\n  name: string;\n\n  @Field(() => Float, { description: 'Значение баланса' })\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsisdnDto.html":{"url":"classes/MsisdnDto.html","title":"class - MsisdnDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsisdnDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                MsisdnDto - объектный тип для представления номера телефона (MSISDN).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                msisdn\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, msisdn: number, comment: string, state: StateDto, category: CategoryDto, region: RegionDto)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msisdn\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        StateDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        category\n                                                  \n                                                        \n                                                                        CategoryDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        region\n                                                  \n                                                        \n                                                                        RegionDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Категория номера телефона'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Комментарий, связанный с номером', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Идентификатор номера телефона'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        msisdn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Сам номер телефона (MSISDN)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegionDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Регион номера телефона'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Состояние номера телефона'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, Float } from '@nestjs/graphql';\nimport { ISearchUnlinkedMsisdnsResponse } from '../../interfaces';\nimport { SN } from '../../types';\nimport { PaginatedResponseType } from '../helpersGql';\n\n/**\n * `StateDto` - объектный тип для представления состояния объекта.\n */\n@ObjectType({\n  description: 'Объектный тип для представления состояния объекта.',\n})\nexport class StateDto {\n  @Field(() => Int, { description: 'Идентификатор состояния' })\n  id: number;\n\n  @Field(() => String, { description: 'Название состояния' })\n  name: string;\n\n  @Field(() => String, { description: 'Время изменения состояния' })\n  changedAt: string;\n\n  constructor(id: number, name: string, changedAt: string) {\n    this.id = id;\n    this.name = name;\n    this.changedAt = changedAt;\n  }\n}\n\n/**\n * `CategoryDto` - объектный тип для представления категории.\n */\n@ObjectType({ description: 'Объектный тип для представления категории.' })\nexport class CategoryDto {\n  @Field(() => Int, { description: 'Идентификатор категории' })\n  id: number;\n\n  @Field(() => String, { description: 'Название категории' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `RegionDto` - объектный тип для представления региона.\n */\n@ObjectType({ description: 'Объектный тип для представления региона.' })\nexport class RegionDto {\n  @Field(() => Int, { description: 'Идентификатор региона' })\n  id: number;\n\n  @Field(() => String, { description: 'Название региона' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `MsisdnDto` - объектный тип для представления номера телефона (MSISDN).\n */\n@ObjectType({\n  description: 'Объектный тип для представления номера телефона (MSISDN).',\n})\nexport class MsisdnDto {\n  @Field(() => Int, { description: 'Идентификатор номера телефона' })\n  id: number;\n\n  @Field(() => Number, { description: 'Сам номер телефона (MSISDN)' })\n  msisdn: number;\n\n  @Field(() => String, {\n    description: 'Комментарий, связанный с номером',\n    nullable: true,\n  })\n  comment?: string;\n\n  @Field(() => StateDto, { description: 'Состояние номера телефона' })\n  state: StateDto;\n\n  @Field(() => CategoryDto, { description: 'Категория номера телефона' })\n  category: CategoryDto;\n\n  @Field(() => RegionDto, { description: 'Регион номера телефона' })\n  region: RegionDto;\n\n  constructor(\n    id: number,\n    msisdn: number,\n    comment: string,\n    state: StateDto,\n    category: CategoryDto,\n    region: RegionDto\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.comment = comment;\n    this.state = state;\n    this.category = category;\n    this.region = region;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsResponseDto` - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления результата поиска несвязанного номера телефона (MSISDN).',\n})\nexport class SearchUnlinkedMsisdnsResponseDto\n  implements ISearchUnlinkedMsisdnsResponse\n{\n  @Field(() => [MsisdnDto], {\n    nullable: true,\n    description: 'Список несвязанных номеров телефонов (MSISDN)',\n  })\n  msisdns: (MsisdnDto | null)[];\n\n  constructor(msisdns: (MsisdnDto | null)[]) {\n    this.msisdns = msisdns;\n  }\n}\n/**\n * `UnlinkedMsisdnsDto` - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n */\n@ObjectType({\n  description:\n    'DTO для представления информации о несвязанных номерах телефонов (MSISDN).',\n})\nexport class UnlinkedMsisdnsDto {\n  @Field(() => String, { description: 'Текущий статус', nullable: true })\n  status: SN;\n\n  @Field(() => String, {\n    description: 'Дата установки статуса',\n    nullable: true,\n  })\n  dateStatus: SN;\n\n  @Field(() => String, { description: 'MISDN пользователя', nullable: true })\n  msisdn: SN;\n\n  @Field(() => String, { description: 'Регион пользователя', nullable: true })\n  region: SN;\n\n  @Field(() => String, {\n    description: 'Категория пользователя',\n    nullable: true,\n  })\n  categoryName: SN;\n\n  @Field(() => String, { description: 'Комментарий', nullable: true })\n  comment: SN;\n\n  constructor(\n    status: SN,\n    dateStatus: SN,\n    msisdn: SN,\n    region: SN,\n    categoryName: SN,\n    comment: SN\n  ) {\n    this.status = status;\n    this.dateStatus = dateStatus;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.categoryName = categoryName;\n    this.comment = comment;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsDTO` - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n */\n@ObjectType({ description: 'Список найденных номеров' })\nexport class SearchUnlinkedMsisdnsDTO extends PaginatedResponseType(\n  UnlinkedMsisdnsDto\n) {\n  @Field(() => [UnlinkedMsisdnsDto], { description: 'Список номеров' })\n  override items: UnlinkedMsisdnsDto[];\n\n  @Field(() => Float, { description: 'Количество свободных номеров' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsisdnFilterDTO.html":{"url":"classes/MsisdnFilterDTO.html","title":"class - MsisdnFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsisdnFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                region\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MsisdnCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Категория номера'})@IsOptional()@IsEnum(MsisdnCategory, {message: 'Категория должна быть одним из допустимых значений'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Region\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Регион номера'})@IsOptional()@IsEnum(Region, {message: 'Регион должен быть одним из допустимых значений'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MsisdnStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Статус номера'})@IsOptional()@IsEnum(MsisdnStatus, {message: 'Статус должен быть одним из допустимых значений'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsOptional,\n  IsString,\n  IsArray,\n  IsInt,\n  MinLength,\n  Matches,\n  ArrayNotEmpty,\n  MaxLength,\n  IsIn,\n  IsEnum,\n} from 'class-validator';\nimport { InputType, Field, Int } from '@nestjs/graphql';\nimport {\n  MsisdnCategory,\n  MsisdnStatus,\n  Region,\n  SearchUnlinkedMsisdnsInput,\n} from '@web-clients-backend/shared';\n\n@InputType({ description: 'ДТО для поиска свободных номеров' })\nexport class SearchUnlinkedMsisdnsQueryDto\n  implements SearchUnlinkedMsisdnsInput\n{\n  @Field(() => String)\n  @IsString()\n  @MaxLength(10, { message: 'MSISDN должен содержать не более 10 символов.' })\n  @MinLength(5, { message: 'MSISDN должен содержать не менее 5 символов.' })\n  @Matches(/^[0-9%]+$/, {\n    message: 'MSISDN может содержать только цифры и символ %.',\n  })\n  msisdn: string;\n\n  @Field(() => [Int], {\n    nullable: true,\n    description: 'regionId брать из метода TODO',\n  }) //TODO узнать метод для получения regionId\n  @IsOptional()\n  @IsArray()\n  @ArrayNotEmpty({\n    message: 'Массив regionId не должен быть пустым при предоставлении.',\n  })\n  @IsInt({ each: true, message: 'Каждый regionId должен быть целым числом.' })\n  regionId?: number[];\n\n  @Field(() => [Int], {\n    nullable: true,\n    description: 'categoryId брать из метода TODO',\n  }) //TODO узнать метод для получения categoryId\n  @IsOptional()\n  @IsArray()\n  @ArrayNotEmpty({\n    message: 'Массив categoryId не должен быть пустым при предоставлении.',\n  })\n  @IsInt({ each: true, message: 'Каждый categoryId должен быть целым числом.' })\n  categoryId?: number[];\n\n  constructor(msisdn: string) {\n    this.msisdn = msisdn;\n  }\n}\n\n@InputType({ description: 'Входные данные для сортировки полученных данных' })\nexport class SortInputDTO {\n  @Field(() => String, { description: 'Поле для сортировки' })\n  @IsOptional()\n  @IsString()\n  @IsIn(['status', 'dateStatus', 'msisdn', 'region', 'categoryName', 'comment'])\n  field: string;\n\n  @Field(() => String, { description: 'Направление сортировки' })\n  @IsOptional()\n  @IsString()\n  @IsIn(['asc', 'desc']) // Только 'asc' или 'desc'\n  direction: 'asc' | 'desc';\n\n  constructor(field: string, direction: 'asc' | 'desc') {\n    this.field = field;\n    this.direction = direction;\n  }\n}\n\n@InputType({ description: 'Входные данные для фильтра полученных данных' })\nexport class MsisdnFilterDTO {\n  @Field(() => MsisdnStatus, { nullable: true, description: 'Статус номера' })\n  @IsOptional()\n  @IsEnum(MsisdnStatus, {\n    message: 'Статус должен быть одним из допустимых значений',\n  })\n  status?: MsisdnStatus;\n\n  @Field(() => MsisdnCategory, {\n    nullable: true,\n    description: 'Категория номера',\n  })\n  @IsOptional()\n  @IsEnum(MsisdnCategory, {\n    message: 'Категория должна быть одним из допустимых значений',\n  })\n  category?: MsisdnCategory;\n\n  @Field(() => Region, { nullable: true, description: 'Регион номера' })\n  @IsOptional()\n  @IsEnum(Region, {\n    message: 'Регион должен быть одним из допустимых значений',\n  })\n  region?: Region;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NameClientSearchDTO.html":{"url":"classes/NameClientSearchDTO.html","title":"class - NameClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NameClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/clientName.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                NameClientSearchDTO - объектный тип для представления имени клиента в структурированном и неструктурированном виде.\n\n            \n\n\n            \n                Implements\n            \n            \n                            INameClientSearch\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                structured\n                            \n                            \n                                    \n                                unstructured\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(structured: StructuredNameClientSearchDTO, unstructured: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/clientName.dto.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        structured\n                                                  \n                                                        \n                                                                        StructuredNameClientSearchDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unstructured\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        structured\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StructuredNameClientSearchDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Структурированное имя клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/clientName.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unstructured\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Неструктурированное имя клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/clientName.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field } from '@nestjs/graphql';\nimport { INameClientSearch } from '../../interfaces';\nimport { StructuredNameClientSearchDTO } from './structuredClientName.dto';\n\n/**\n * `NameClientSearchDTO` - объектный тип для представления имени клиента в структурированном и неструктурированном виде.\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления имени клиента в структурированном и неструктурированном виде.',\n})\nexport class NameClientSearchDTO implements INameClientSearch {\n  @Field(() => StructuredNameClientSearchDTO, {\n    description: 'Структурированное имя клиента',\n  })\n  structured: StructuredNameClientSearchDTO;\n\n  @Field(() => String, { description: 'Неструктурированное имя клиента' })\n  unstructured: string;\n\n  constructor(structured: StructuredNameClientSearchDTO, unstructured: string) {\n    this.structured = structured;\n    this.unstructured = unstructured;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDTO.html":{"url":"classes/PaginationDTO.html","title":"class - PaginationDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/helpersGql/pagination.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                PaginationDTO - это класс для описания параметров пагинации в GraphQL.\nСодержит поля для номера страницы (page) и количества элементов на странице (perPage).\nИспользуются декораторы class-validator для проверки чисел и NestJS для описания полей в GraphQL.\n\npage: Номер страницы (по умолчанию 1).\nperPage: Количество элементов на странице (по умолчанию 10).\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                perPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(page: number, perPage: number)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/helpersGql/pagination.dto.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        perPage\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()@Field(undefined, {nullable: false, defaultValue: 1, description: 'Номер страницы'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/helpersGql/pagination.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        perPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()@Field(undefined, {nullable: false, defaultValue: 10, description: 'Количество элементов на странице'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/helpersGql/pagination.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional } from 'class-validator';\nimport { Field, Float, InputType } from '@nestjs/graphql';\n\n/**\n * `PaginationDTO` - это класс для описания параметров пагинации в GraphQL.\n * Содержит поля для номера страницы (`page`) и количества элементов на странице (`perPage`).\n * Используются декораторы `class-validator` для проверки чисел и `NestJS` для описания полей в GraphQL.\n *\n * - `page`: Номер страницы (по умолчанию 1).\n * - `perPage`: Количество элементов на странице (по умолчанию 10).\n */\n@InputType({ description: 'Инпут для пагинации' })\nexport class PaginationDTO {\n  @IsOptional()\n  @IsNumber()\n  @Field(() => Float, {\n    nullable: false,\n    defaultValue: 1,\n    description: 'Номер страницы',\n  })\n  page: number;\n\n  @IsOptional()\n  @IsNumber()\n  @Field(() => Float, {\n    nullable: false,\n    defaultValue: 10,\n    description: 'Количество элементов на странице',\n  })\n  perPage: number;\n\n  constructor(page: number, perPage: number) {\n    this.page = page;\n    this.perPage = perPage;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PassportClientSearchDTO.html":{"url":"classes/PassportClientSearchDTO.html","title":"class - PassportClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PassportClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/passport.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                PassportClientSearchDTO - объектный тип для представления данных паспорта клиента.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                serialNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serialNumber: string, date: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/passport.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serialNumber\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Дата выдачи паспорта в формате YYYY-MM-DD'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/passport.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        serialNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Серия и номер паспорта клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/passport.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field } from '@nestjs/graphql';\nimport { SN } from '../../types';\n\n/**\n * `PassportClientSearchDTO` - объектный тип для представления данных паспорта клиента.\n */\n@ObjectType({\n  description: 'Объектный тип для представления данных паспорта клиента.',\n})\nexport class PassportClientSearchDTO {\n  @Field(() => String, {\n    nullable: true,\n    description: 'Серия и номер паспорта клиента',\n  })\n  serialNumber: SN;\n\n  @Field(() => String, {\n    nullable: true,\n    description: 'Дата выдачи паспорта в формате YYYY-MM-DD',\n  })\n  date: SN;\n\n  constructor(serialNumber: string, date: string) {\n    this.serialNumber = serialNumber;\n    this.date = date;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostSearchBody.html":{"url":"interfaces/PostSearchBody.html","title":"interface - PostSearchBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostSearchBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/elasticsearch/postSearchBody.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authorId\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор автора поста.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Содержание поста.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Идентификатор поста.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Заголовок поста.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PostSearchResult {\n  /**\n   * Объект с количеством найденных записей и массивом постов.\n   */\n  hits: {\n    /**\n     * Общее количество найденных записей.\n     */\n    total: number;\n\n    /**\n     * Массив объектов постов.\n     */\n    hits: Array;\n  };\n}\n\n/**\n * @interface PostSearchBody\n * @description Тело данных поста в Elasticsearch.\n */\ninterface PostSearchBody {\n  /**\n   * Идентификатор поста.\n   */\n  id: number;\n\n  /**\n   * Заголовок поста.\n   */\n  title: string;\n\n  /**\n   * Содержание поста.\n   */\n  content: string;\n\n  /**\n   * Идентификатор автора поста.\n   */\n  authorId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PostSearchResult.html":{"url":"interfaces/PostSearchResult.html","title":"interface - PostSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PostSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/elasticsearch/postSearchBody.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hits\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Объект с количеством найденных записей и массивом постов.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PostSearchResult {\n  /**\n   * Объект с количеством найденных записей и массивом постов.\n   */\n  hits: {\n    /**\n     * Общее количество найденных записей.\n     */\n    total: number;\n\n    /**\n     * Массив объектов постов.\n     */\n    hits: Array;\n  };\n}\n\n/**\n * @interface PostSearchBody\n * @description Тело данных поста в Elasticsearch.\n */\ninterface PostSearchBody {\n  /**\n   * Идентификатор поста.\n   */\n  id: number;\n\n  /**\n   * Заголовок поста.\n   */\n  title: string;\n\n  /**\n   * Содержание поста.\n   */\n  content: string;\n\n  /**\n   * Идентификатор автора поста.\n   */\n  authorId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PromModule.html":{"url":"modules/PromModule.html","title":"module - PromModule","body":"\n                   \n\n\n\n\n    Modules\n    PromModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/metrics/src/lib/metrics.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Этот модуль предоставляет поддержку для Prometheus и интеграцию с Apollo для сбора метрик и трассировки.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrometheusModule } from '@willsoto/nestjs-prometheus';\nimport createMetricsPlugin from 'apollo-metrics';\nimport { plugin as apolloTracingPlugin } from 'apollo-tracing';\nimport { register } from 'prom-client';\n\nexport const TRACING_PLUGIN_KEY = 'TRACING_PLUGIN_KEY';\nexport const METRICS_PLUGIN_KEY = 'METRICS_PLUGIN_KEY';\n\n/**\n * @module PromModule\n * @description Модуль для интеграции мониторинга и трассировки в приложении NestJS.\n * Этот модуль предоставляет поддержку для Prometheus и интеграцию с Apollo для сбора метрик и трассировки.\n */\n@Module({\n  imports: [PrometheusModule.register()], // Импорт модуля Prometheus для работы с метриками\n  providers: [\n    {\n      provide: TRACING_PLUGIN_KEY, // Провайдер для плагина трассировки Apollo\n      useValue: apolloTracingPlugin(), // Инициализация плагина трассировки\n    },\n    {\n      provide: METRICS_PLUGIN_KEY, // Провайдер для плагина метрик Apollo\n      useValue: createMetricsPlugin(register), // Инициализация плагина метрик с использованием регистра prom-client\n    },\n  ],\n  exports: [TRACING_PLUGIN_KEY, METRICS_PLUGIN_KEY], // Экспорт провайдеров для использования в других модулях\n})\nexport class PromModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RabbitMQService.html":{"url":"injectables/RabbitMQService.html","title":"injectable - RabbitMQService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RabbitMQService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rabbit/src/lib/rabbit.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Позволяет отправлять и получать сообщения через микросервисные клиенты.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emitToJournalization\n                            \n                            \n                                    Async\n                                getClient\n                            \n                            \n                                    Async\n                                sendMessageSearch\n                            \n                            \n                                    Async\n                                sendToJournalization\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webClientsClient: ClientProxy, journalizationClient: ClientProxy, searchService: SearchService)\n                    \n                \n                        \n                            \n                                Defined in libs/rabbit/src/lib/rabbit.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webClientsClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        journalizationClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emitToJournalization\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitToJournalization(event: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/rabbit/src/lib/rabbit.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Отправляет событие в систему журналирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nИмя события.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные события.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nВозвращает пустое значение при успешной отправке.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClient(payload: IAccessTokenInput, clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/rabbit/src/lib/rabbit.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Получает данные клиента через API /clients.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IAccessTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные для запроса клиента, реализующие интерфейс IAccessTokenInput.\n\n\n                                            \n                                        \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает данные клиента или null в случае ошибки.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMessageSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMessageSearch(cmd: string, payload: P)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/rabbit/src/lib/rabbit.service.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    P\n                                    R\n                            \n                        \n                    \n\n            \n                \n                        Отправка сообщения и получение ответа по заданным параметрам.\nЭтот метод отправляет данные в RabbitMQ с указанной командой cmd и полезной нагрузкой payload,\nа затем возвращает результат, тип которого ожидается как R.\nВажно понимать, что тип P (payload) и тип R (результат) не связаны напрямую.\nВ данном методе выполняется приведение типа payload к R через конструкцию as unknown as R,\nчтобы удовлетворить требования метода sendMessage. Это безопасно, потому что:\n\npayload просто отправляется в RabbitMQ, не изменяя своей структуры.\nОтвет, возвращаемый RabbitMQ, интерпретируется как R, согласно ожиданиям.\n\nИспользуй этот метод, если уверены, что соответствие между запросом P и ответом R гарантировано\nлогикой работы RabbitMQ.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cmd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nКоманда, определяющая действие, которое должно быть выполнено на стороне RabbitMQ.\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                        P\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные для запроса, соответствующие типу P. Это структура, отправляемая в RabbitMQ.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nВозвращает результат типа R или null, если что-то пошло не так.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendToJournalization\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToJournalization(payload: ISearchJournal)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/rabbit/src/lib/rabbit.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Отправляет запрос для получения журналов в систему журналирования.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchJournal\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные для поиска журналов, реализующие интерфейс ISearchJournal.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nВозвращает массив журналов или null в случае ошибки.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport {\n  IAccessTokenInput,\n  GET_CLIENT,\n  ISearchClientPayload,\n  ISearchJournal,\n  IJournal,\n  GET_LOGS,\n  IClientApiResult,\n  ISearchUnlinkedMsisdnsPayload,\n  ISearchUnlinkedMsisdnsResponse,\n} from '@web-clients-backend/shared';\nimport { firstValueFrom } from 'rxjs';\nimport { SearchService } from './searchСlientService/rabbit.search-client.service';\n\n/**\n * @service RabbitMQService\n * @description Сервис для взаимодействия с RabbitMQ.\n * Позволяет отправлять и получать сообщения через микросервисные клиенты.\n */\n@Injectable()\nexport class RabbitMQService {\n  constructor(\n    @Inject('WEB_CLIENTS') // Внедрение клиента для работы с API клиентов\n    private readonly webClientsClient: ClientProxy,\n    @Inject('JOURNALIZATION') // Внедрение клиента для отправки данных в систему журналирования\n    private readonly journalizationClient: ClientProxy,\n    private readonly searchService: SearchService\n  ) {}\n\n  /**\n   * Получает данные клиента через API /clients.\n   * @param payload - Данные для запроса клиента, реализующие интерфейс IAccessTokenInput.\n   * @returns {Promise} - Возвращает данные клиента или null в случае ошибки.\n   */\n  async getClient(\n    payload: IAccessTokenInput,\n    clientId: string\n  ): Promise {\n    return await firstValueFrom(\n      this.webClientsClient.send({ cmd: GET_CLIENT }, { payload, clientId })\n    );\n  }\n\n  /**\n   * Отправка сообщения и получение ответа по заданным параметрам.\n   *\n   * Этот метод отправляет данные в RabbitMQ с указанной командой `cmd` и полезной нагрузкой `payload`,\n   * а затем возвращает результат, тип которого ожидается как `R`.\n   *\n   * @template P - Тип полезной нагрузки (payload), отправляемой в RabbitMQ.\n   * @template R - Тип ответа, который возвращается после обработки сообщения RabbitMQ.\n   *\n   * @param cmd - Команда, определяющая действие, которое должно быть выполнено на стороне RabbitMQ.\n   * @param payload - Данные для запроса, соответствующие типу `P`. Это структура, отправляемая в RabbitMQ.\n   * @returns {Promise} - Возвращает результат типа `R` или `null`, если что-то пошло не так.\n   *\n   * @remarks\n   * Важно понимать, что тип `P` (payload) и тип `R` (результат) не связаны напрямую.\n   * В данном методе выполняется приведение типа `payload` к `R` через конструкцию `as unknown as R`,\n   * чтобы удовлетворить требования метода `sendMessage`. Это безопасно, потому что:\n   * 1. `payload` просто отправляется в RabbitMQ, не изменяя своей структуры.\n   * 2. Ответ, возвращаемый RabbitMQ, интерпретируется как `R`, согласно ожиданиям.\n   *\n   * Используй этот метод, если уверены, что соответствие между запросом `P` и ответом `R` гарантировано\n   * логикой работы RabbitMQ.\n   */\n  async sendMessageSearch(cmd: string, payload: P): Promise {\n    // payload остается типом P\n    return await this.searchService.sendMessage(\n      cmd,\n      payload as unknown as R\n    );\n  }\n\n  /**\n   * Отправляет запрос для получения журналов в систему журналирования.\n   * @param payload - Данные для поиска журналов, реализующие интерфейс ISearchJournal.\n   * @returns {Promise} - Возвращает массив журналов или null в случае ошибки.\n   */\n  async sendToJournalization(\n    payload: ISearchJournal\n  ): Promise {\n    const data = payload;\n    return await firstValueFrom(\n      this.journalizationClient.send({ cmd: GET_LOGS }, data)\n    );\n  }\n\n  /**\n   * Отправляет событие в систему журналирования.\n   * @param event - Имя события.\n   * @param data - Данные события.\n   * @returns {Promise} - Возвращает пустое значение при успешной отправке.\n   */\n  async emitToJournalization(event: string, data: any): Promise {\n    return firstValueFrom(this.journalizationClient.emit(event, data));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RabbitModule.html":{"url":"modules/RabbitModule.html","title":"module - RabbitModule","body":"\n                   \n\n\n\n\n    Modules\n    RabbitModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RabbitModule\n\n\n\ncluster_RabbitModule_exports\n\n\n\ncluster_RabbitModule_providers\n\n\n\n\nRabbitMQService \n\nRabbitMQService \n\n\n\nRabbitModule\n\nRabbitModule\n\nRabbitMQService  -->\n\nRabbitModule->RabbitMQService \n\n\n\n\n\nRabbitMQService\n\nRabbitMQService\n\nRabbitModule -->\n\nRabbitMQService->RabbitModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nRabbitModule -->\n\nSearchService->RabbitModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/rabbit/src/lib/rabbit.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Этот модуль настраивает клиентов для работы с RabbitMQ, используя микросервисную архитектуру.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RabbitMQService\n                        \n                        \n                            SearchService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RabbitMQService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { RabbitMQService } from './rabbit.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ConfigurationBroker } from '@web-clients-backend/shared';\nimport { SearchService } from './searchСlientService/rabbit.search-client.service';\n\n/**\n * @module RabbitModule\n * @description Модуль для интеграции RabbitMQ с приложением NestJS.\n * Этот модуль настраивает клиентов для работы с RabbitMQ, используя микросервисную архитектуру.\n */\n@Module({\n  imports: [\n    ConfigModule,\n    ClientsModule.registerAsync([\n      {\n        name: 'WEB_CLIENTS',\n        imports: [ConfigModule],\n        useFactory: (configService: ConfigService) => {\n          const config = configService.get('broker');\n          if (!config) {\n            throw new Error('Broker configuration is missing');\n          }\n          return {\n            name: 'WEB_CLIENTS',\n            transport: Transport.RMQ,\n            options: {\n              urls: [`amqp://${config.url}${config.vhost}`],\n              queue: config.queues.dl,\n              noAck: true,\n              queueOptions: {\n                durable: true,\n              },\n              socketOptions: {\n                // rejectUnauthorized: false, // Отключение проверки SSL\n              },\n            },\n          };\n        },\n        inject: [ConfigService],\n      },\n      {\n        name: 'JOURNALIZATION',\n        imports: [ConfigModule],\n        useFactory: (configService: ConfigService) => {\n          const config = configService.get('broker');\n          if (!config) {\n            throw new Error('Broker JZ configuration is missing');\n          }\n          return {\n            name: 'JOURNALIZATION',\n            transport: Transport.RMQ,\n            options: {\n              urls: [`amqp://${config.url}${config.vhost}`],\n              queue: config.queues.jz,\n              queueOptions: {\n                durable: true,\n              },\n            },\n          };\n        },\n        inject: [ConfigService],\n      },\n    ]),\n  ],\n  providers: [RabbitMQService, SearchService],\n  exports: [RabbitMQService],\n})\nexport class RabbitModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegionDto.html":{"url":"classes/RegionDto.html","title":"class - RegionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                RegionDto - объектный тип для представления региона.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Идентификатор региона'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Название региона'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, Float } from '@nestjs/graphql';\nimport { ISearchUnlinkedMsisdnsResponse } from '../../interfaces';\nimport { SN } from '../../types';\nimport { PaginatedResponseType } from '../helpersGql';\n\n/**\n * `StateDto` - объектный тип для представления состояния объекта.\n */\n@ObjectType({\n  description: 'Объектный тип для представления состояния объекта.',\n})\nexport class StateDto {\n  @Field(() => Int, { description: 'Идентификатор состояния' })\n  id: number;\n\n  @Field(() => String, { description: 'Название состояния' })\n  name: string;\n\n  @Field(() => String, { description: 'Время изменения состояния' })\n  changedAt: string;\n\n  constructor(id: number, name: string, changedAt: string) {\n    this.id = id;\n    this.name = name;\n    this.changedAt = changedAt;\n  }\n}\n\n/**\n * `CategoryDto` - объектный тип для представления категории.\n */\n@ObjectType({ description: 'Объектный тип для представления категории.' })\nexport class CategoryDto {\n  @Field(() => Int, { description: 'Идентификатор категории' })\n  id: number;\n\n  @Field(() => String, { description: 'Название категории' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `RegionDto` - объектный тип для представления региона.\n */\n@ObjectType({ description: 'Объектный тип для представления региона.' })\nexport class RegionDto {\n  @Field(() => Int, { description: 'Идентификатор региона' })\n  id: number;\n\n  @Field(() => String, { description: 'Название региона' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `MsisdnDto` - объектный тип для представления номера телефона (MSISDN).\n */\n@ObjectType({\n  description: 'Объектный тип для представления номера телефона (MSISDN).',\n})\nexport class MsisdnDto {\n  @Field(() => Int, { description: 'Идентификатор номера телефона' })\n  id: number;\n\n  @Field(() => Number, { description: 'Сам номер телефона (MSISDN)' })\n  msisdn: number;\n\n  @Field(() => String, {\n    description: 'Комментарий, связанный с номером',\n    nullable: true,\n  })\n  comment?: string;\n\n  @Field(() => StateDto, { description: 'Состояние номера телефона' })\n  state: StateDto;\n\n  @Field(() => CategoryDto, { description: 'Категория номера телефона' })\n  category: CategoryDto;\n\n  @Field(() => RegionDto, { description: 'Регион номера телефона' })\n  region: RegionDto;\n\n  constructor(\n    id: number,\n    msisdn: number,\n    comment: string,\n    state: StateDto,\n    category: CategoryDto,\n    region: RegionDto\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.comment = comment;\n    this.state = state;\n    this.category = category;\n    this.region = region;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsResponseDto` - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления результата поиска несвязанного номера телефона (MSISDN).',\n})\nexport class SearchUnlinkedMsisdnsResponseDto\n  implements ISearchUnlinkedMsisdnsResponse\n{\n  @Field(() => [MsisdnDto], {\n    nullable: true,\n    description: 'Список несвязанных номеров телефонов (MSISDN)',\n  })\n  msisdns: (MsisdnDto | null)[];\n\n  constructor(msisdns: (MsisdnDto | null)[]) {\n    this.msisdns = msisdns;\n  }\n}\n/**\n * `UnlinkedMsisdnsDto` - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n */\n@ObjectType({\n  description:\n    'DTO для представления информации о несвязанных номерах телефонов (MSISDN).',\n})\nexport class UnlinkedMsisdnsDto {\n  @Field(() => String, { description: 'Текущий статус', nullable: true })\n  status: SN;\n\n  @Field(() => String, {\n    description: 'Дата установки статуса',\n    nullable: true,\n  })\n  dateStatus: SN;\n\n  @Field(() => String, { description: 'MISDN пользователя', nullable: true })\n  msisdn: SN;\n\n  @Field(() => String, { description: 'Регион пользователя', nullable: true })\n  region: SN;\n\n  @Field(() => String, {\n    description: 'Категория пользователя',\n    nullable: true,\n  })\n  categoryName: SN;\n\n  @Field(() => String, { description: 'Комментарий', nullable: true })\n  comment: SN;\n\n  constructor(\n    status: SN,\n    dateStatus: SN,\n    msisdn: SN,\n    region: SN,\n    categoryName: SN,\n    comment: SN\n  ) {\n    this.status = status;\n    this.dateStatus = dateStatus;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.categoryName = categoryName;\n    this.comment = comment;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsDTO` - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n */\n@ObjectType({ description: 'Список найденных номеров' })\nexport class SearchUnlinkedMsisdnsDTO extends PaginatedResponseType(\n  UnlinkedMsisdnsDto\n) {\n  @Field(() => [UnlinkedMsisdnsDto], { description: 'Список номеров' })\n  override items: UnlinkedMsisdnsDto[];\n\n  @Field(() => Float, { description: 'Количество свободных номеров' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchApimeService.html":{"url":"injectables/SearchApimeService.html","title":"injectable - SearchApimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchApimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/apime-integration/src/lib/search/search-apime.service copy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                searchClientByAccount\n                            \n                            \n                                    Async\n                                searchClientByContract\n                            \n                            \n                                    Async\n                                searchClientByDGN\n                            \n                            \n                                    Async\n                                searchClientByFIO\n                            \n                            \n                                    Async\n                                searchClientByMsisdn\n                            \n                            \n                                    Async\n                                searchClientByPassport\n                            \n                            \n                                    Async\n                                searchClientBySubscriberNumber\n                            \n                            \n                                    Async\n                                searchClientIcc\n                            \n                            \n                                    Async\n                                searchUnlinkedMsisdns\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByAccount(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByContract\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByContract(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByDGN\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByDGN(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByFIO\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByFIO(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByMsisdn\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByMsisdn(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByPassport\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByPassport(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientBySubscriberNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientBySubscriberNumber(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientIcc\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientIcc(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchUnlinkedMsisdns\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchUnlinkedMsisdns(payload: ISearchUnlinkedMsisdnsPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service copy.ts:248\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchUnlinkedMsisdnsPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { webClientsApiMethods } from '../other/api-methods';\nimport {\n  generateDocumentPassport,\n  IDataClientSearchResponse,\n  ISearchClientPayload,\n  ISearchUnlinkedMsisdnsPayload,\n  ISearchUnlinkedMsisdnsResponse,\n} from '@web-clients-backend/shared';\n\n@Injectable()\nexport class SearchApimeService {\n  constructor(private readonly httpService: HttpService) {}\n\n  async searchClientByFIO(\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const data = {\n        unstructured: payload.input.toString(),\n      };\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.byName,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchClientBySubscriberNumber(\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const data = {\n        msisdn: payload.input.toString(),\n      };\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.byMsisdn,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchClientByMsisdn(\n    //TODO откуда свободный взять\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const data = {\n        msisdn: payload.input.toString(),\n      };\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.byMsisdn,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchClientByPassport(\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const document = await generateDocumentPassport(payload.input.toString());\n      const data = { document };\n\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.byDocument,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchClientByAccount(\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const data = {\n        account: payload.input,\n      };\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.byAccount,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchClientByContract(\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const data = {\n        contractNumber: payload.input.toString(),\n      };\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.byContract,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchClientByDGN(\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const data = {\n        additionalPhoneNumber: payload.input.toString(),\n      };\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.additionalPhoneNumber,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchClientIcc(\n    payload: ISearchClientPayload\n  ): Promise {\n    try {\n      const data = {\n        sim: {\n          iccId: payload.input.toString(),\n          imsi: null,\n        },\n      };\n      const response = await this.httpService.axiosRef.post(\n        webClientsApiMethods.search.clients.byEquipment,\n        data,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n      return response.data;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n\n  async searchUnlinkedMsisdns(\n    payload: ISearchUnlinkedMsisdnsPayload\n  ): Promise {\n    try {\n      const response = await this.httpService.axiosRef.get(\n        webClientsApiMethods.search.freeMsisdns(payload),\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n\n      if (response.data.msisdns.length === 0) {\n        return null;\n      }\n      return response.data.msisdns;\n    } catch (error) {\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchApimeService-1.html":{"url":"injectables/SearchApimeService-1.html","title":"injectable - SearchApimeService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchApimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/apime-integration/src/lib/search/search-apime.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                requestHandler\n                            \n                            \n                                    Async\n                                searchClientByAccount\n                            \n                            \n                                    Async\n                                searchClientByContract\n                            \n                            \n                                    Async\n                                searchClientByDGN\n                            \n                            \n                                    Async\n                                searchClientByFIO\n                            \n                            \n                                    Async\n                                searchClientByMsisdn\n                            \n                            \n                                    Async\n                                searchClientByPassport\n                            \n                            \n                                    Async\n                                searchClientBySubscriberNumber\n                            \n                            \n                                    Async\n                                searchClientIcc\n                            \n                            \n                                    Async\n                                searchUnlinkedMsisdns\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        requestHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestHandler(payload: ISearchClientPayload, url: string, data: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:150\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Обрабатывает запрос на основе переданных параметров, отправляя HTTP POST-запрос и возвращая результат.\n\nФункция выполняет POST-запрос к переданному URL с заголовками для Content-Type и авторизации.\nПри возникновении ошибки, например, если сервер недоступен, возвращает null и логирует ошибку в консоль.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПараметры запроса, содержащие токены для авторизации (ISearchClientPayload).\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nURL для выполнения HTTP-запроса.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные для отправки в теле запроса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nВозвращает данные типа T или null в случае ошибки.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByAccount(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по номеру счета.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входной номер счета.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByContract\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByContract(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по номеру договора.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входной номер договора.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByDGN\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByDGN(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по дополнительному номеру телефона (DGN).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входной дополнительный номер телефона.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByFIO\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByFIO(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по ФИО.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входные данные для поиска.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByMsisdn\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByMsisdn(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:51\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по номеру MSISDN.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входной номер MSISDN.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientByPassport\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientByPassport(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по паспорту.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входной паспорт.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientBySubscriberNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientBySubscriberNumber(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по номеру абонента.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входной номер абонента.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientIcc\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientIcc(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Метод для поиска клиента по ICC.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nДанные запроса, содержащие входной ICC.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nРезультат поиска клиента или null если клиент не найден.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchUnlinkedMsisdns\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchUnlinkedMsisdns(payload: ISearchUnlinkedMsisdnsPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/search/search-apime.service.ts:183\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Производит поиск свободных номеров по заданным параметрам с использованием HTTP GET-запроса.\n\nФункция выполняет GET-запрос к эндпоинту для поиска свободных номеров.\nЗаголовки включают TRACE_ID и Authorization для аутентификации запроса.\nЕсли данные в ответе пусты или произошла ошибка подключения, функция возвращает null.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchUnlinkedMsisdnsPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПараметры запроса, содержащие токены для авторизации и данные для поиска (ISearchUnlinkedMsisdnsPayload).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nВозвращает список свободных номеров (T), или null в случае ошибки.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport {\n  generateDocumentPassport,\n  IDataClientSearchResponse,\n  ISearchClientPayload,\n  ISearchUnlinkedMsisdnsPayload,\n  ISearchUnlinkedMsisdnsResponse,\n} from '@web-clients-backend/shared';\nimport { webClientsApiMethods } from '../other/api-methods';\n\n@Injectable()\nexport class SearchApimeService {\n  constructor(private readonly httpService: HttpService) {}\n\n  /**\n   * Метод для поиска клиента по ФИО.\n   * @param payload - Данные запроса, содержащие входные данные для поиска.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientByFIO(\n    payload: ISearchClientPayload\n  ): Promise {\n    return await this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.byName,\n      { unstructured: payload.input }\n    );\n  }\n\n  /**\n   * Метод для поиска клиента по номеру абонента.\n   * @param payload - Данные запроса, содержащие входной номер абонента.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientBySubscriberNumber(\n    payload: ISearchClientPayload\n  ): Promise {\n    return await this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.byMsisdn,\n      { msisdn: payload.input }\n    );\n  }\n\n  /**\n   * Метод для поиска клиента по номеру MSISDN.\n   * @param payload - Данные запроса, содержащие входной номер MSISDN.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientByMsisdn(\n    payload: ISearchClientPayload\n  ): Promise {\n    return await this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.byMsisdn,\n      { msisdn: payload.input }\n    );\n  }\n\n  /**\n   * Метод для поиска клиента по паспорту.\n   * @param payload - Данные запроса, содержащие входной паспорт.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientByPassport(\n    payload: ISearchClientPayload\n  ): Promise {\n    return await this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.byDocument,\n      await generateDocumentPassport(payload.input.toString())\n    );\n  }\n\n  /**\n   * Метод для поиска клиента по номеру счета.\n   * @param payload - Данные запроса, содержащие входной номер счета.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientByAccount(\n    payload: ISearchClientPayload\n  ): Promise {\n    return await this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.byAccount,\n      { account: payload.input }\n    );\n  }\n\n  /**\n   * Метод для поиска клиента по номеру договора.\n   * @param payload - Данные запроса, содержащие входной номер договора.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientByContract(\n    payload: ISearchClientPayload\n  ): Promise {\n    return await this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.byContract,\n      { contractNumber: payload.input }\n    );\n  }\n\n  /**\n   * Метод для поиска клиента по дополнительному номеру телефона (DGN).\n   * @param payload - Данные запроса, содержащие входной дополнительный номер телефона.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientByDGN(\n    payload: ISearchClientPayload\n  ): Promise {\n    return await this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.additionalPhoneNumber,\n      { additionalPhoneNumber: payload.input }\n    );\n  }\n\n  /**\n   * Метод для поиска клиента по ICC.\n   * @param payload - Данные запроса, содержащие входной ICC.\n   * @returns - Результат поиска клиента или `null` если клиент не найден.\n   */\n  async searchClientIcc(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.search.clients.byEquipment,\n      {\n        sim: { iccId: payload.input, imsi: null },\n      }\n    );\n  }\n\n  /**\n   * Обрабатывает запрос на основе переданных параметров, отправляя HTTP POST-запрос и возвращая результат.\n   *\n   * @param payload - Параметры запроса, содержащие токены для авторизации (`ISearchClientPayload`).\n   * @param url - URL для выполнения HTTP-запроса.\n   * @param data - Данные для отправки в теле запроса.\n   * @returns {Promise} - Возвращает данные типа `T` или `null` в случае ошибки.\n   *\n   * @remarks\n   * - Функция выполняет POST-запрос к переданному URL с заголовками для Content-Type и авторизации.\n   * - При возникновении ошибки, например, если сервер недоступен, возвращает `null` и логирует ошибку в консоль.\n   */\n  private async requestHandler(\n    payload: ISearchClientPayload,\n    url: string,\n    data: Record\n  ): Promise {\n    try {\n      const response = await this.httpService.axiosRef.post(url, data, {\n        headers: {\n          'Content-Type': 'application/json',\n          TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n          Authorization: `Bearer ${payload.tokenInput.access_token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Error during API request to ${url}`);\n      console.warn(error);\n\n      return null;\n    }\n  }\n\n  /**\n   * Производит поиск свободных номеров по заданным параметрам с использованием HTTP GET-запроса.\n   *\n   * @param payload - Параметры запроса, содержащие токены для авторизации и данные для поиска (`ISearchUnlinkedMsisdnsPayload`).\n   * @returns {Promise} - Возвращает список свободных номеров (`T`), или `null` в случае ошибки.\n   *\n   * @remarks\n   * - Функция выполняет GET-запрос к эндпоинту для поиска свободных номеров.\n   * - Заголовки включают `TRACE_ID` и `Authorization` для аутентификации запроса.\n   * - Если данные в ответе пусты или произошла ошибка подключения, функция возвращает `null`.\n   */\n  async searchUnlinkedMsisdns(\n    payload: ISearchUnlinkedMsisdnsPayload\n  ): Promise {\n    try {\n      const response = await this.httpService.axiosRef.get(\n        webClientsApiMethods.search.freeMsisdns(payload),\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Real-Ip': '127.0.0.1',\n            TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n            Authorization: `Bearer ${payload.tokenInput.access_token}`,\n          },\n        }\n      );\n      // console.warn(response);\n\n      if (response.data.msisdns.length === 0) {\n        return null;\n      }\n      return response.data.msisdns;\n    } catch (error) {\n      // console.warn(error);\n      if ((error as NodeJS.ErrnoException).code === 'ENOTFOUND') {\n        return null;\n      }\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchAreaWithLabelDTO.html":{"url":"classes/SearchAreaWithLabelDTO.html","title":"class - SearchAreaWithLabelDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchAreaWithLabelDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/other/searchAreas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                area\n                            \n                            \n                                    \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchAreaEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Тип области поиска из списка возможных значений.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/searchAreas.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Текстовое представление области поиска.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/searchAreas.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport { SearchAreaEnum } from '@web-clients-backend/shared';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@ObjectType({\n  description:\n    'DTO для представления области поиска с меткой. Содержит поле `area`, представляющее область поиска, и поле `label`, представляющее строку метки, сопутствующую данной области.',\n})\nexport class SearchAreaWithLabelDTO {\n  @Field(() => SearchAreaEnum, {\n    description: 'Тип области поиска из списка возможных значений.',\n  })\n  area!: SearchAreaEnum;\n\n  @Field(() => String, {\n    description: 'Текстовое представление области поиска.',\n  })\n  label!: string;\n}\n\n@ObjectType({ description: 'Список областей поиска с метками' })\nexport class SearchAreasDTO {\n  @Field(() => [SearchAreaWithLabelDTO], {\n    description: 'Массив объектов с метками для каждого типа области поиска.',\n  })\n  areas!: SearchAreaWithLabelDTO[];\n}\n\n@InputType({ description: 'DTO для получения областей поиска' })\nexport class GetSearchAreasInputDTO {\n  @Field(() => String, {\n    description: 'Входное значение для определения областей поиска',\n  })\n  @IsNotEmpty({\n    message: 'Поле не может быть пустым',\n  })\n  @IsString({\n    message: 'Данные должны быть строкой',\n  })\n  input: string;\n\n  constructor(input: string) {\n    this.input = input;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchAreasDTO.html":{"url":"classes/SearchAreasDTO.html","title":"class - SearchAreasDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchAreasDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/other/searchAreas.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                areas\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        areas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchAreaWithLabelDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Массив объектов с метками для каждого типа области поиска.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/searchAreas.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport { SearchAreaEnum } from '@web-clients-backend/shared';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\n@ObjectType({\n  description:\n    'DTO для представления области поиска с меткой. Содержит поле `area`, представляющее область поиска, и поле `label`, представляющее строку метки, сопутствующую данной области.',\n})\nexport class SearchAreaWithLabelDTO {\n  @Field(() => SearchAreaEnum, {\n    description: 'Тип области поиска из списка возможных значений.',\n  })\n  area!: SearchAreaEnum;\n\n  @Field(() => String, {\n    description: 'Текстовое представление области поиска.',\n  })\n  label!: string;\n}\n\n@ObjectType({ description: 'Список областей поиска с метками' })\nexport class SearchAreasDTO {\n  @Field(() => [SearchAreaWithLabelDTO], {\n    description: 'Массив объектов с метками для каждого типа области поиска.',\n  })\n  areas!: SearchAreaWithLabelDTO[];\n}\n\n@InputType({ description: 'DTO для получения областей поиска' })\nexport class GetSearchAreasInputDTO {\n  @Field(() => String, {\n    description: 'Входное значение для определения областей поиска',\n  })\n  @IsNotEmpty({\n    message: 'Поле не может быть пустым',\n  })\n  @IsString({\n    message: 'Данные должны быть строкой',\n  })\n  input: string;\n\n  constructor(input: string) {\n    this.input = input;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchAreasResolver.html":{"url":"classes/SearchAreasResolver.html","title":"class - SearchAreasResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchAreasResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/search-areas.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getSearchAreas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(searchAreasService: SearchAreasService)\n                    \n                \n                        \n                            \n                                Defined in libs/search-clients/src/lib/search-areas.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchAreasService\n                                                  \n                                                        \n                                                                        SearchAreasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getSearchAreas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSearchAreas(getSearchAreasInput: GetSearchAreasInputDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'getSearchAreas', description: 'Получение областей поиска'})\n                \n            \n\n                    \n                        \n                            Defined in libs/search-clients/src/lib/search-areas.resolver.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getSearchAreasInput\n                                            \n                                                            GetSearchAreasInputDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args } from '@nestjs/graphql';\nimport { SearchAreasService } from './search-areas.service';\nimport {\n  GetSearchAreasInputDTO,\n  SearchAreasDTO,\n} from './other/searchAreas.dto';\n\n@Resolver(() => SearchAreasDTO)\nexport class SearchAreasResolver {\n  constructor(private readonly searchAreasService: SearchAreasService) {}\n\n  @Query(() => SearchAreasDTO, {\n    name: 'getSearchAreas',\n    description: 'Получение областей поиска',\n  })\n  async getSearchAreas(\n    @Args('input') getSearchAreasInput: GetSearchAreasInputDTO\n  ): Promise {\n    const { input } = getSearchAreasInput;\n    return await this.searchAreasService.getSearchAreas(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchAreasService.html":{"url":"injectables/SearchAreasService.html","title":"injectable - SearchAreasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchAreasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/search-areas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSearchAreas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSearchAreas\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSearchAreas(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-clients/src/lib/search-areas.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  SearchAreasDTO,\n  SearchAreaWithLabelDTO,\n} from './other/searchAreas.dto';\nimport { SearchAreaEnum, searchAreaLabels } from '@web-clients-backend/shared';\n\n@Injectable()\nexport class SearchAreasService {\n  async getSearchAreas(input: string): Promise {\n    const sanitizedInput = input.replace(/%/g, '.*');\n\n    if (sanitizedInput.length  5 &&\n      /[a-zA-Zа-яА-ЯёЁ]/.test(sanitizedInput) &&\n      /\\d/.test(sanitizedInput);\n\n    const areas = isFiveOrMoreLettersWithSymbols\n      ? [\n          SearchAreaEnum.FIO,\n          SearchAreaEnum.TITLE,\n          SearchAreaEnum.PROCESSES,\n          SearchAreaEnum.SERVICES,\n          SearchAreaEnum.TARIFFS,\n        ]\n      : isFiveOrMoreDigitsWithSymbols\n      ? [\n          SearchAreaEnum.PASSPORT,\n          SearchAreaEnum.CONTRACT_NUMBER,\n          SearchAreaEnum.ACCOUNT_NUMBER,\n          SearchAreaEnum.MSISDN,\n          SearchAreaEnum.SUBSCRIBER_NUMBER,\n          SearchAreaEnum.DGN,\n          SearchAreaEnum.ICC,\n        ]\n      : isMoreThanFiveMixed\n      ? [\n          SearchAreaEnum.TITLE,\n          SearchAreaEnum.PROCESSES,\n          SearchAreaEnum.SERVICES,\n          SearchAreaEnum.TARIFFS,\n        ]\n      : [];\n\n    const areasWithLabels: SearchAreaWithLabelDTO[] = areas.map((area) => ({\n      area,\n      label: searchAreaLabels[area],\n    }));\n\n    return { areas: areasWithLabels };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchClientsModule.html":{"url":"modules/SearchClientsModule.html","title":"module - SearchClientsModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchClientsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchClientsModule\n\n\n\ncluster_SearchClientsModule_providers\n\n\n\ncluster_SearchClientsModule_exports\n\n\n\ncluster_SearchClientsModule_imports\n\n\n\n\nLogsAndJournalsModule\n\nLogsAndJournalsModule\n\n\n\nSearchClientsModule\n\nSearchClientsModule\n\nSearchClientsModule -->\n\nLogsAndJournalsModule->SearchClientsModule\n\n\n\n\n\nRabbitModule\n\nRabbitModule\n\nSearchClientsModule -->\n\nRabbitModule->SearchClientsModule\n\n\n\n\n\nSearchAreasService \n\nSearchAreasService \n\nSearchAreasService  -->\n\nSearchClientsModule->SearchAreasService \n\n\n\n\n\nSearchClientsService \n\nSearchClientsService \n\nSearchClientsService  -->\n\nSearchClientsModule->SearchClientsService \n\n\n\n\n\nSearchAreasService\n\nSearchAreasService\n\nSearchClientsModule -->\n\nSearchAreasService->SearchClientsModule\n\n\n\n\n\nSearchClientsService\n\nSearchClientsService\n\nSearchClientsModule -->\n\nSearchClientsService->SearchClientsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/search-clients/src/lib/search-clients.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SearchAreasService\n                        \n                        \n                            SearchClientsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsAndJournalsModule\n                        \n                        \n                            RabbitModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SearchAreasService\n                        \n                        \n                            SearchClientsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SearchClientsService } from './search-clients.service';\nimport { RabbitModule } from '@web-clients-backend/rabbit';\nimport { LogsAndJournalsModule } from '@web-clients-backend/logs';\nimport { SearchClientsResolver } from './search-clients.resolver';\nimport { SearchAreasResolver } from './search-areas.resolver';\nimport { SearchAreasService } from './search-areas.service';\n\n@Module({\n  imports: [RabbitModule, LogsAndJournalsModule],\n  providers: [\n    SearchClientsService,\n    SearchClientsResolver,\n    SearchAreasService,\n    SearchAreasResolver,\n  ],\n  exports: [SearchClientsService, SearchAreasService],\n})\nexport class SearchClientsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchClientsResolver.html":{"url":"classes/SearchClientsResolver.html","title":"class - SearchClientsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchClientsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/search-clients.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getClientsSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(searchClientsService: SearchClientsService)\n                    \n                \n                        \n                            \n                                Defined in libs/search-clients/src/lib/search-clients.resolver.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchClientsService\n                                                  \n                                                        \n                                                                        SearchClientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getClientsSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    getClientsSearch(context: any, pagination: PaginationDTO, areaSearch: ClientsSearchInputDTO, sort?: SortInput, filter?: ClientFilterInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'getClientsSearch', description: 'Поиск клиентов'})\n                \n            \n\n                    \n                        \n                            Defined in libs/search-clients/src/lib/search-clients.resolver.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pagination\n                                            \n                                                            PaginationDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                areaSearch\n                                            \n                                                            ClientsSearchInputDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            SortInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            ClientFilterInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Context, Args } from '@nestjs/graphql';\nimport { SearchClientsService } from './search-clients.service';\nimport {\n  ClientDataDTO,\n  generatePaginationArray,\n  generateTokenContext,\n  IAccessTokenInput,\n  IClientSearch,\n  IDataClientSearchResponse,\n  ISearchClientPayload,\n  PaginationDTO,\n} from '@web-clients-backend/shared';\nimport {\n  ClientFilterInput,\n  ClientsSearchedDTO,\n  ClientsSearchInputDTO,\n  SortInput,\n} from './other/clients.dto';\nimport { HttpException, HttpStatus } from '@nestjs/common';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Resolver(() => ClientDataDTO)\nexport class SearchClientsResolver {\n  constructor(private readonly searchClientsService: SearchClientsService) {}\n\n  @Query(() => ClientsSearchedDTO, {\n    name: 'getClientsSearch',\n    description: 'Поиск клиентов',\n  })\n  async getClientsSearch(\n    @Context() context: any,\n    @Args('pagination', { nullable: false })\n    pagination: PaginationDTO,\n    @Args('input', { nullable: false }) areaSearch: ClientsSearchInputDTO,\n    @Args('sort', { nullable: true }) sort?: SortInput,\n    @Args('filter', { nullable: true }) filter?: ClientFilterInput\n  ): Promise {\n    const { input, area } = areaSearch;\n    const tokenInput: IAccessTokenInput = {\n      access_token: await generateTokenContext(context),\n      traceId: { traceID: uuidv4() },\n    };\n\n    const payload: ISearchClientPayload = {\n      tokenInput,\n      input,\n    };\n\n    const clientsSearched: IDataClientSearchResponse | null =\n      await this.searchClientsService.searchClientsByArea(payload, area);\n\n    if (!clientsSearched || !clientsSearched.clients) {\n      throw new HttpException('ошибка при поиске', HttpStatus.BAD_REQUEST);\n    }\n\n    let clientNormalize: IClientSearch[] =\n      await this.searchClientsService.normalizeClient(clientsSearched.clients);\n\n    // Применяем фильтры\n    if (filter) {\n      const { juridicalType, contractState, marketSegment } = filter;\n      clientNormalize = await this.searchClientsService.filterClients(\n        clientNormalize,\n        marketSegment,\n        juridicalType,\n        contractState\n      );\n    }\n\n    if (sort) {\n      clientNormalize = await this.searchClientsService.sortClients(\n        clientNormalize,\n        sort\n      );\n    }\n\n    const sliceArray = await generatePaginationArray(\n      clientNormalize,\n      pagination.page,\n      pagination.perPage\n    );\n\n    const data: ClientsSearchedDTO = {\n      items: sliceArray.arraySlice,\n      total: sliceArray.total,\n    };\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchClientsService.html":{"url":"injectables/SearchClientsService.html","title":"injectable - SearchClientsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchClientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/search-clients.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                filterClients\n                            \n                            \n                                    Async\n                                normalizeClient\n                            \n                            \n                                    Async\n                                searchClientsByArea\n                            \n                            \n                                    Async\n                                sortClients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rabbitService: RabbitMQService, logsAdminService: LogsAndJournalsService)\n                    \n                \n                        \n                            \n                                Defined in libs/search-clients/src/lib/search-clients.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rabbitService\n                                                  \n                                                        \n                                                                        RabbitMQService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logsAdminService\n                                                  \n                                                        \n                                                                        LogsAndJournalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        filterClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterClients(clients: IClientSearch[], segmentType?: MarketSegmentEnum, juridicalType?: JuridicalTypeClientEnum, clientState?: StateClientEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-clients/src/lib/search-clients.service.ts:231\n                        \n                    \n\n\n            \n                \n                        Фильтрует клиентов по заданным критериям сегмента, юридического типа и состояния контракта.\n\nФункция фильтрует клиентов по трем параметрам: тип сегмента (segmentType), юридический тип (juridicalType) и состояние контракта (clientState).\nЕсли какой-либо из параметров не указан, он пропускается при фильтрации.\nВернет клиентов, которые соответствуют всем указанным критериям.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                clients\n                                            \n                                                            IClientSearch[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nМассив клиентов для фильтрации (IClientSearch[]).\n\n\n                                            \n                                        \n                                        \n                                                segmentType\n                                            \n                                                            MarketSegmentEnum\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nТип сегмента клиента (MarketSegmentEnum).\n\n\n                                            \n                                        \n                                        \n                                                juridicalType\n                                            \n                                                            JuridicalTypeClientEnum\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nТип клиента (юридический или физический) (JuridicalTypeClientEnum).\n\n\n                                            \n                                        \n                                        \n                                                clientState\n                                            \n                                                            StateClientEnum\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nСостояние контракта клиента (StateClientEnum).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nФильтрованный массив клиентов, соответствующих заданным критериям.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        normalizeClient\n                        \n                    \n                \n            \n            \n                \n                        \n                    normalizeClient(clients: IClientSearchResult[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-clients/src/lib/search-clients.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Нормализует данные о клиентах для упрощенной модели.\n\nФункция преобразует каждый объект IClientSearchResult в объект IClientSearch.\nОсновной баланс клиента ищется в массиве client.balance.monetary и возвращается null, если не найден.\nЕсли у клиента есть подписчики, то сначала пытается получить основной номер msisdn. Если он отсутствует, то возвращает null.\nДанные паспорта собираются из полей client.document.\nОжидается, что у клиента может отсутствовать информация о подписчиках, дополнительном телефоне и ICCID.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                clients\n                                            \n                                                        IClientSearchResult[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nМассив объектов результатов поиска клиентов (IClientSearchResult[]).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nПреобразованные данные о клиентах в упрощенном формате (IClientSearch[]).\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientsByArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientsByArea(payload: ISearchClientPayload, area: SearchAreaEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-clients/src/lib/search-clients.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Производит поиск клиентов по заданной области.\n\nДля выполнения поиска используется карта searchMap, которая связывает SearchAreaEnum с соответствующей командой в rabbitService.\nЕсли поиск возвращает null, значит, клиентов не найдено.\nФункция отправляет сообщение через rabbitService с указанной командой и полученными данными, затем обрабатывает результаты.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПараметры запроса для поиска клиентов (ISearchClientPayload).\n\n\n                                            \n                                        \n                                        \n                                                area\n                                            \n                                                            SearchAreaEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбласть поиска клиента, например, FIO, TITLE, PROCESSES и так далее (SearchAreaEnum).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает результат поиска в виде данных клиента (IDataClientSearchResponse) или null, если поиск не дал результатов.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sortClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    sortClients(clients: IClientSearch[], sort: SortInput)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-clients/src/lib/search-clients.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Сортирует клиентов по заданным параметрам.\n\nФункция сортирует клиентов в зависимости от заданного поля (field) и направления (direction).\nДля поля passport.serialNumber производится приведение строки к числу, удаляя пробелы.\nПоддерживаемые типы данных для сортировки: строка (string), число (number) и дата (Date).\nСортировка строки производится с учетом локали (коллекция строк).\nСортировка чисел и дат производится в соответствии с указанным направлением: возрастание или убывание.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                clients\n                                            \n                                                            IClientSearch[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nМассив клиентов для сортировки (IClientSearch[]).\n\n\n                                            \n                                        \n                                        \n                                                sort\n                                            \n                                                            SortInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект с параметрами сортировки (SortInput), содержащий поле (field) и направление (direction).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nОтсортированный массив клиентов.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RabbitMQService } from '@web-clients-backend/rabbit';\nimport { LogsAndJournalsService } from '@web-clients-backend/logs';\nimport {\n  IClientSearch,\n  IClientSearchResult,\n  IDataClientSearchResponse,\n  IMonetaryClient,\n  ISearchClientPayload,\n  JuridicalTypeClientEnum,\n  MarketSegmentEnum,\n  SEARCH_CLIENT_ACCOUNT_NUMBER,\n  SEARCH_CLIENT_BY_FIO,\n  SEARCH_CLIENT_BY_PROCESSES,\n  SEARCH_CLIENT_BY_SERVICES,\n  SEARCH_CLIENT_BY_TARIFFS,\n  SEARCH_CLIENT_BY_TITLE,\n  SEARCH_CLIENT_CONTRACT_NUMBER,\n  SEARCH_CLIENT_DGN,\n  SEARCH_CLIENT_ICC,\n  SEARCH_CLIENT_MSISDN,\n  SEARCH_CLIENT_PASSPORT,\n  SEARCH_CLIENT_SUBSCRIBER_NUMBER,\n  SearchAreaEnum,\n  StateClientEnum,\n} from '@web-clients-backend/shared';\nimport { SortInput } from './other/clients.dto';\n\n@Injectable()\nexport class SearchClientsService {\n  constructor(\n    private readonly rabbitService: RabbitMQService,\n    private readonly logsAdminService: LogsAndJournalsService\n  ) {}\n\n  // async searchClientsByArea(\n  //   payload: ISearchClientPayload,\n  //   area: SearchAreaEnum\n  // ): Promise {\n  //   switch (area) {\n  //     /* Буквы */\n  //     case SearchAreaEnum.FIO:\n  //       return await this.rabbitService.sendMessageSearch(\n  //         SEARCH_CLIENT_BY_FIO,\n  //         payload\n  //       );\n  //     case SearchAreaEnum.TITLE:\n  //       return await this.rabbitService.sendMessageSearch(\n  //         SEARCH_CLIENT_BY_TITLE,\n  //         payload\n  //       );\n  //     /* Наши данные */\n  //     case SearchAreaEnum.PROCESSES:\n  //       return await this.rabbitService.sendMessageSearch(\n  //         SEARCH_CLIENT_BY_PROCESSES,\n  //         payload\n  //       );\n  //     case SearchAreaEnum.SERVICES:\n  //       return await this.rabbitService.sendMessageSearch(\n  //         SEARCH_CLIENT_BY_SERVICES,\n  //         payload\n  //       );\n  //     case SearchAreaEnum.TARIFFS:\n  //       return await this.rabbitService.sendMessageSearch(\n  //         SEARCH_CLIENT_BY_TARIFFS,\n  //         payload\n  //       );\n\n  //     /* Цифры */\n  //     case SearchAreaEnum.SUBSCRIBER_NUMBER:\n  //       return await this.rabbitService.sendMessageSearch(\n  //         SEARCH_CLIENT_SUBSCRIBER_NUMBER,\n  //         payload\n  //       );\n  //     case SearchAreaEnum.MSISDN:\n  //       return await this.rabbitService.sendMessageSearch(\n  //         SEARCH_CLIENT_MSISDN,\n  //         payload\n  //       );\n  //     case SearchAreaEnum.PASSPORT:\n  //       if (payload.input.toString().length } - Возвращает результат поиска в виде данных клиента (`IDataClientSearchResponse`) или `null`, если поиск не дал результатов.\n   *\n   * @remarks\n   * - Для выполнения поиска используется карта `searchMap`, которая связывает `SearchAreaEnum` с соответствующей командой в `rabbitService`.\n   * - Если поиск возвращает `null`, значит, клиентов не найдено.\n   * - Функция отправляет сообщение через `rabbitService` с указанной командой и полученными данными, затем обрабатывает результаты.\n   */\n  async searchClientsByArea(\n    payload: ISearchClientPayload,\n    area: SearchAreaEnum\n  ): Promise {\n    const searchMap = {\n      [SearchAreaEnum.FIO]: SEARCH_CLIENT_BY_FIO,\n      [SearchAreaEnum.TITLE]: SEARCH_CLIENT_BY_TITLE,\n      [SearchAreaEnum.PROCESSES]: SEARCH_CLIENT_BY_PROCESSES,\n      [SearchAreaEnum.SERVICES]: SEARCH_CLIENT_BY_SERVICES,\n      [SearchAreaEnum.TARIFFS]: SEARCH_CLIENT_BY_TARIFFS,\n      [SearchAreaEnum.SUBSCRIBER_NUMBER]: SEARCH_CLIENT_SUBSCRIBER_NUMBER,\n      [SearchAreaEnum.MSISDN]: SEARCH_CLIENT_MSISDN,\n      [SearchAreaEnum.PASSPORT]: SEARCH_CLIENT_PASSPORT,\n      [SearchAreaEnum.ACCOUNT_NUMBER]: SEARCH_CLIENT_ACCOUNT_NUMBER,\n      [SearchAreaEnum.CONTRACT_NUMBER]: SEARCH_CLIENT_CONTRACT_NUMBER,\n      [SearchAreaEnum.DGN]: SEARCH_CLIENT_DGN,\n      [SearchAreaEnum.ICC]: SEARCH_CLIENT_ICC,\n    };\n    const data = await this.rabbitService.sendMessageSearch(searchMap[area], payload);\n\n    if (!data) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Нормализует данные о клиентах для упрощенной модели.\n   *\n   * @param clients - Массив объектов результатов поиска клиентов (`IClientSearchResult[]`).\n   * @returns {Promise} - Преобразованные данные о клиентах в упрощенном формате (`IClientSearch[]`).\n   *\n   * @remarks\n   * - Функция преобразует каждый объект `IClientSearchResult` в объект `IClientSearch`.\n   * - Основной баланс клиента ищется в массиве `client.balance.monetary` и возвращается `null`, если не найден.\n   * - Если у клиента есть подписчики, то сначала пытается получить основной номер `msisdn`. Если он отсутствует, то возвращает `null`.\n   * - Данные паспорта собираются из полей `client.document`.\n   * - Ожидается, что у клиента может отсутствовать информация о подписчиках, дополнительном телефоне и ICCID.\n   */\n  async normalizeClient(\n    clients: IClientSearchResult[]\n  ): Promise {\n    const data = clients.map((client: IClientSearchResult) => {\n      let mainBalance = null;\n\n      if (client.balance?.monetary?.length) {\n        mainBalance =\n          (client.balance.monetary as IMonetaryClient[]).find(\n            (monetary) => monetary.name === 'Основной баланс'\n          )?.value ?? null;\n      }\n\n      //TODO сабскрайберов может быть не быть\n      return {\n        fio: client.name.unstructured,\n        msisdn: client.subscribers?.[0]?.msisdn\n          ? Number(client.subscribers[0].msisdn)\n          : null,\n        balance: mainBalance,\n        birthDate: client.birthDate || null,\n        passport: {\n          serialNumber:\n            client.document && client.document.series && client.document.number\n              ? client.document.series + ' ' + client.document.number\n              : null,\n          date: client.document ? client.document.issueDate : null,\n        },\n        additionalPhone: client.subscribers?.[0]?.additionalPhoneNumber\n          ? Number(client.subscribers[0].additionalPhoneNumber)\n          : null,\n        region: client.subscribers?.[0]?.region ?? null,\n        iccId: client.subscribers?.[0]?.equipment?.iccId\n          ? Number(client.subscribers[0].equipment.iccId)\n          : null,\n        account: client.account,\n        juridicalType: client.juridicalType,\n        contractNumber: client.contractNumber,\n        segment: client.clientType,\n        state: client.state,\n      };\n    });\n\n    return data;\n  }\n\n  /**\n   * Фильтрует клиентов по заданным критериям сегмента, юридического типа и состояния контракта.\n   *\n   * @param clients - Массив клиентов для фильтрации (`IClientSearch[]`).\n   * @param segmentType - Тип сегмента клиента (`MarketSegmentEnum`).\n   * @param juridicalType - Тип клиента (юридический или физический) (`JuridicalTypeClientEnum`).\n   * @param clientState - Состояние контракта клиента (`StateClientEnum`).\n   * @returns {Promise} - Фильтрованный массив клиентов, соответствующих заданным критериям.\n   *\n   * @remarks\n   * - Функция фильтрует клиентов по трем параметрам: тип сегмента (`segmentType`), юридический тип (`juridicalType`) и состояние контракта (`clientState`).\n   * - Если какой-либо из параметров не указан, он пропускается при фильтрации.\n   * - Вернет клиентов, которые соответствуют всем указанным критериям.\n   */\n  async filterClients(\n    clients: IClientSearch[],\n    segmentType?: MarketSegmentEnum,\n    juridicalType?: JuridicalTypeClientEnum,\n    clientState?: StateClientEnum\n  ): Promise {\n    // console.warn(segmentType, juridicalType, clientState);\n    return clients.filter((client) => {\n      const matchesJuridicalType = juridicalType\n        ? client.juridicalType === juridicalType\n        : true;\n\n      const matchesContractState = clientState\n        ? client.state === clientState\n        : true;\n\n      const matchesJuridicalTypeState = segmentType\n        ? client.segment === segmentType\n        : true;\n\n      return (\n        matchesJuridicalType &&\n        matchesContractState &&\n        matchesJuridicalTypeState\n      );\n    });\n  }\n\n  /**\n   * Сортирует клиентов по заданным параметрам.\n   *\n   * @param clients - Массив клиентов для сортировки (`IClientSearch[]`).\n   * @param sort - Объект с параметрами сортировки (`SortInput`), содержащий поле (`field`) и направление (`direction`).\n   * @returns {Promise} - Отсортированный массив клиентов.\n   *\n   * @remarks\n   * - Функция сортирует клиентов в зависимости от заданного поля (`field`) и направления (`direction`).\n   * - Для поля `passport.serialNumber` производится приведение строки к числу, удаляя пробелы.\n   * - Поддерживаемые типы данных для сортировки: строка (`string`), число (`number`) и дата (`Date`).\n   * - Сортировка строки производится с учетом локали (коллекция строк).\n   * - Сортировка чисел и дат производится в соответствии с указанным направлением: возрастание или убывание.\n   */\n  async sortClients(\n    clients: IClientSearch[],\n    sort: SortInput\n  ): Promise {\n    const { field, direction } = sort;\n\n    return clients.sort((a, b) => {\n      let valA = a[field as keyof IClientSearch];\n      let valB = b[field as keyof IClientSearch];\n\n      // обработка для serialNumber (убираем пробелы и приводим к числу)\n      if (field === 'passport.serialNumber') {\n        valA = parseInt((a.passport.serialNumber || '').replace(/\\s/g, ''), 10);\n        valB = parseInt((b.passport.serialNumber || '').replace(/\\s/g, ''), 10);\n      }\n\n      if (typeof valA === 'string' && typeof valB === 'string') {\n        return direction === 'asc'\n          ? valA.localeCompare(valB)\n          : valB.localeCompare(valA);\n      }\n\n      if (typeof valA === 'number' && typeof valB === 'number') {\n        return direction === 'asc' ? valA - valB : valB - valA;\n      }\n\n      if (valA instanceof Date && valB instanceof Date) {\n        return direction === 'asc'\n          ? +new Date(valA) - +new Date(valB)\n          : +new Date(valB) - +new Date(valA);\n      }\n\n      return 0;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchDictionaryService.html":{"url":"injectables/SearchDictionaryService.html","title":"injectable - SearchDictionaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchDictionaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                requestHandler\n                            \n                            \n                                    Async\n                                searchAddressCityType\n                            \n                            \n                                    Async\n                                searchAddressCountry\n                            \n                            \n                                    Async\n                                searchAddressDistrictType\n                            \n                            \n                                    Async\n                                searchAddressRegionType\n                            \n                            \n                                    Async\n                                searchAddressStreetType\n                            \n                            \n                                    Async\n                                searchClientAddressType\n                            \n                            \n                                    Async\n                                searchClientBillingDeliveryType\n                            \n                            \n                                    Async\n                                searchClientDocumentType\n                            \n                            \n                                    Async\n                                searchClientJuridicalType\n                            \n                            \n                                    Async\n                                searchClientType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        requestHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestHandler(payload: ISearchClientPayload, url: string, undefined: IRequestParams)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:27\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            IRequestParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchAddressCityType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAddressCityType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchAddressCountry\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAddressCountry(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchAddressDistrictType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAddressDistrictType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchAddressRegionType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAddressRegionType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchAddressStreetType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAddressStreetType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientAddressType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientAddressType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientBillingDeliveryType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientBillingDeliveryType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientDocumentType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientDocumentType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientJuridicalType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientJuridicalType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchClientType\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchClientType(payload: ISearchClientPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/apime-integration/src/lib/dictionary/dictionary-apime.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchClientPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport {\n  generateDocumentPassport,\n  IAddressTypesResponse,\n  IBillingDeliveryTypesResponse,\n  ICityTypesResponse,\n  IClientTypesResponse,\n  ICountryTypesResponse,\n  IDistrictTypesResponse,\n  IDocumentTypesResponse,\n  IJuridicalTypesResponse,\n  IRegionTypesResponse,\n  ISearchClientPayload,\n  IStreetTypesResponse,\n} from '@web-clients-backend/shared';\nimport { webClientsApiMethods } from '../other/api-methods';\n\ninterface IRequestParams {\n  data: Record;\n}\n\n@Injectable()\nexport class SearchDictionaryService {\n  constructor(private readonly httpService: HttpService) {}\n\n  private async requestHandler(\n    payload: ISearchClientPayload,\n    url: string,\n    { data }: IRequestParams\n  ): Promise {\n    try {\n      const response = await this.httpService.axiosRef.post(url, data, {\n        headers: {\n          'Content-Type': 'application/json',\n          TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n          Authorization: `Bearer ${payload.tokenInput.access_token}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  async searchClientJuridicalType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.juridicalType,\n      {\n        data: { unstructured: payload.input },\n      }\n    );\n  }\n\n  async searchClientType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.clientType,\n      {\n        data: { msisdn: payload.input },\n      }\n    );\n  }\n\n  async searchClientDocumentType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.documentType,\n      {\n        data: { msisdn: payload.input },\n      }\n    );\n  }\n\n  async searchClientAddressType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.addressType,\n      {\n        data: { document: generateDocumentPassport(payload.input.toString()) },\n      }\n    );\n  }\n\n  async searchClientBillingDeliveryType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.client.billingDeliveryType,\n      {\n        data: { account: payload.input },\n      }\n    );\n  }\n\n  async searchAddressCountry(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.country,\n      {\n        data: { contractNumber: payload.input },\n      }\n    );\n  }\n\n  async searchAddressRegionType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.regionType,\n      {\n        data: { contractNumber: payload.input },\n      }\n    );\n  }\n\n  async searchAddressDistrictType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.districtType,\n      {\n        data: { additionalPhoneNumber: payload.input },\n      }\n    );\n  }\n\n  async searchAddressCityType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.cityType,\n      {\n        data: {\n          sim: { iccId: payload.input, imsi: null },\n        },\n      }\n    );\n  }\n\n  async searchAddressStreetType(\n    payload: ISearchClientPayload\n  ): Promise {\n    return this.requestHandler(\n      payload,\n      webClientsApiMethods.dictionary.address.streetType,\n      {\n        data: {\n          sim: { iccId: payload.input, imsi: null },\n        },\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rabbit/src/lib/searchСlientService/rabbit.search-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webClientsClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/rabbit/src/lib/searchСlientService/rabbit.search-client.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webClientsClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMessage(cmd: string, payload: T)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/rabbit/src/lib/searchСlientService/rabbit.search-client.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Отправляет сообщение через RabbitMQ с заданной командой и полезной нагрузкой.\nЭтот метод используется для отправки команды cmd в RabbitMQ с переданными данными payload.\nВозвращает результат, ожидаемый в виде типа T.\nили null в случае ошибки или отсутствия данных.\nЭтот метод является оберткой над RabbitMQ клиентом. Он отправляет сообщение через метод send,\nкоторый ожидает команду и полезную нагрузку, а затем преобразует потоковый ответ в Promise\nс использованием firstValueFrom.\nИспользуй этот метод для выполнения операций, требующих асинхронного обмена данными через RabbitMQ.\nУбедись, что структура запроса и ожидаемого ответа согласована между вашим приложением и RabbitMQ.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cmd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтрока, представляющая команду, которая определяет действие на стороне RabbitMQ.\n\n\n                                            \n                                        \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПолезная нагрузка типа T, отправляемая в RabbitMQ. Это структура данных запроса.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nВозвращает результат типа T, полученный от RabbitMQ,\nили null в случае ошибки или отсутствия данных.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable()\nexport class SearchService {\n  constructor(\n    @Inject('WEB_CLIENTS')\n    private readonly webClientsClient: ClientProxy\n  ) {}\n\n  /**\n   * Отправляет сообщение через RabbitMQ с заданной командой и полезной нагрузкой.\n   *\n   * Этот метод используется для отправки команды `cmd` в RabbitMQ с переданными данными `payload`.\n   * Возвращает результат, ожидаемый в виде типа `T`.\n   *\n   * @template T - Тип данных, ожидаемых в ответе от RabbitMQ.\n   *\n   * @param cmd - Строка, представляющая команду, которая определяет действие на стороне RabbitMQ.\n   * @param payload - Полезная нагрузка типа `T`, отправляемая в RabbitMQ. Это структура данных запроса.\n   * @returns {Promise} - Возвращает результат типа `T`, полученный от RabbitMQ,\n   * или `null` в случае ошибки или отсутствия данных.\n   *\n   * @remarks\n   * Этот метод является оберткой над RabbitMQ клиентом. Он отправляет сообщение через метод `send`,\n   * который ожидает команду и полезную нагрузку, а затем преобразует потоковый ответ в `Promise`\n   * с использованием `firstValueFrom`.\n   *\n   * Используй этот метод для выполнения операций, требующих асинхронного обмена данными через RabbitMQ.\n   * Убедись, что структура запроса и ожидаемого ответа согласована между вашим приложением и RabbitMQ.\n   */\n  async sendMessage(cmd: string, payload: T): Promise {\n    return await firstValueFrom(\n      this.webClientsClient.send({ cmd }, payload)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUnlinkedMsisdnsDTO.html":{"url":"classes/SearchUnlinkedMsisdnsDTO.html","title":"class - SearchUnlinkedMsisdnsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUnlinkedMsisdnsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                SearchUnlinkedMsisdnsDTO - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UnlinkedMsisdnsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Список номеров'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Количество свободных номеров'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:188\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, Float } from '@nestjs/graphql';\nimport { ISearchUnlinkedMsisdnsResponse } from '../../interfaces';\nimport { SN } from '../../types';\nimport { PaginatedResponseType } from '../helpersGql';\n\n/**\n * `StateDto` - объектный тип для представления состояния объекта.\n */\n@ObjectType({\n  description: 'Объектный тип для представления состояния объекта.',\n})\nexport class StateDto {\n  @Field(() => Int, { description: 'Идентификатор состояния' })\n  id: number;\n\n  @Field(() => String, { description: 'Название состояния' })\n  name: string;\n\n  @Field(() => String, { description: 'Время изменения состояния' })\n  changedAt: string;\n\n  constructor(id: number, name: string, changedAt: string) {\n    this.id = id;\n    this.name = name;\n    this.changedAt = changedAt;\n  }\n}\n\n/**\n * `CategoryDto` - объектный тип для представления категории.\n */\n@ObjectType({ description: 'Объектный тип для представления категории.' })\nexport class CategoryDto {\n  @Field(() => Int, { description: 'Идентификатор категории' })\n  id: number;\n\n  @Field(() => String, { description: 'Название категории' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `RegionDto` - объектный тип для представления региона.\n */\n@ObjectType({ description: 'Объектный тип для представления региона.' })\nexport class RegionDto {\n  @Field(() => Int, { description: 'Идентификатор региона' })\n  id: number;\n\n  @Field(() => String, { description: 'Название региона' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `MsisdnDto` - объектный тип для представления номера телефона (MSISDN).\n */\n@ObjectType({\n  description: 'Объектный тип для представления номера телефона (MSISDN).',\n})\nexport class MsisdnDto {\n  @Field(() => Int, { description: 'Идентификатор номера телефона' })\n  id: number;\n\n  @Field(() => Number, { description: 'Сам номер телефона (MSISDN)' })\n  msisdn: number;\n\n  @Field(() => String, {\n    description: 'Комментарий, связанный с номером',\n    nullable: true,\n  })\n  comment?: string;\n\n  @Field(() => StateDto, { description: 'Состояние номера телефона' })\n  state: StateDto;\n\n  @Field(() => CategoryDto, { description: 'Категория номера телефона' })\n  category: CategoryDto;\n\n  @Field(() => RegionDto, { description: 'Регион номера телефона' })\n  region: RegionDto;\n\n  constructor(\n    id: number,\n    msisdn: number,\n    comment: string,\n    state: StateDto,\n    category: CategoryDto,\n    region: RegionDto\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.comment = comment;\n    this.state = state;\n    this.category = category;\n    this.region = region;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsResponseDto` - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления результата поиска несвязанного номера телефона (MSISDN).',\n})\nexport class SearchUnlinkedMsisdnsResponseDto\n  implements ISearchUnlinkedMsisdnsResponse\n{\n  @Field(() => [MsisdnDto], {\n    nullable: true,\n    description: 'Список несвязанных номеров телефонов (MSISDN)',\n  })\n  msisdns: (MsisdnDto | null)[];\n\n  constructor(msisdns: (MsisdnDto | null)[]) {\n    this.msisdns = msisdns;\n  }\n}\n/**\n * `UnlinkedMsisdnsDto` - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n */\n@ObjectType({\n  description:\n    'DTO для представления информации о несвязанных номерах телефонов (MSISDN).',\n})\nexport class UnlinkedMsisdnsDto {\n  @Field(() => String, { description: 'Текущий статус', nullable: true })\n  status: SN;\n\n  @Field(() => String, {\n    description: 'Дата установки статуса',\n    nullable: true,\n  })\n  dateStatus: SN;\n\n  @Field(() => String, { description: 'MISDN пользователя', nullable: true })\n  msisdn: SN;\n\n  @Field(() => String, { description: 'Регион пользователя', nullable: true })\n  region: SN;\n\n  @Field(() => String, {\n    description: 'Категория пользователя',\n    nullable: true,\n  })\n  categoryName: SN;\n\n  @Field(() => String, { description: 'Комментарий', nullable: true })\n  comment: SN;\n\n  constructor(\n    status: SN,\n    dateStatus: SN,\n    msisdn: SN,\n    region: SN,\n    categoryName: SN,\n    comment: SN\n  ) {\n    this.status = status;\n    this.dateStatus = dateStatus;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.categoryName = categoryName;\n    this.comment = comment;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsDTO` - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n */\n@ObjectType({ description: 'Список найденных номеров' })\nexport class SearchUnlinkedMsisdnsDTO extends PaginatedResponseType(\n  UnlinkedMsisdnsDto\n) {\n  @Field(() => [UnlinkedMsisdnsDto], { description: 'Список номеров' })\n  override items: UnlinkedMsisdnsDto[];\n\n  @Field(() => Float, { description: 'Количество свободных номеров' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchUnlinkedMsisdnsInput.html":{"url":"interfaces/SearchUnlinkedMsisdnsInput.html","title":"interface - SearchUnlinkedMsisdnsInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchUnlinkedMsisdnsInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/interfaces/search-unlinked-msisdns/payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Интерфейс для входных данных метода поиска свободных номеров (MSISDN).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            categoryId\n                                        \n                                \n                                \n                                        \n                                            msisdn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            regionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryId:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Идентификаторы категорий номеров для фильтрации.\nМассив чисел, где каждый элемент — ID категории.\nПоле необязательное.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msisdn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msisdn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Номер MSISDN для поиска.\nМожет быть частично маскированным, где символ '%' означает любое количество любых символов.\nОбязательных символов, помимо '%', должно быть не менее пяти.\nПример: \"95021%\" или \"%12345\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        regionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        regionId:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Идентификаторы регионов для фильтрации номеров.\nМассив чисел, где каждый элемент — ID региона.\nПоле необязательное.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IAccessTokenInput } from '../apimeInputs';\n\n/**\n * Интерфейс для входных данных метода поиска свободных номеров (MSISDN).\n */\nexport interface SearchUnlinkedMsisdnsInput {\n  /**\n   * Номер MSISDN для поиска.\n   * Может быть частично маскированным, где символ '%' означает любое количество любых символов.\n   * Обязательных символов, помимо '%', должно быть не менее пяти.\n   * Пример: \"95021%\" или \"%12345\".\n   */\n  msisdn: string;\n\n  /**\n   * Идентификаторы регионов для фильтрации номеров.\n   * Массив чисел, где каждый элемент — ID региона.\n   * Поле необязательное.\n   */\n  regionId?: number[];\n\n  /**\n   * Идентификаторы категорий номеров для фильтрации.\n   * Массив чисел, где каждый элемент — ID категории.\n   * Поле необязательное.\n   */\n  categoryId?: number[];\n}\n\nexport interface ISearchUnlinkedMsisdnsPayload {\n  tokenInput: IAccessTokenInput;\n  input: SearchUnlinkedMsisdnsInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchUnlinkedMsisdnsModule.html":{"url":"modules/SearchUnlinkedMsisdnsModule.html","title":"module - SearchUnlinkedMsisdnsModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchUnlinkedMsisdnsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchUnlinkedMsisdnsModule\n\n\n\ncluster_SearchUnlinkedMsisdnsModule_exports\n\n\n\ncluster_SearchUnlinkedMsisdnsModule_imports\n\n\n\ncluster_SearchUnlinkedMsisdnsModule_providers\n\n\n\n\nLogsAndJournalsModule\n\nLogsAndJournalsModule\n\n\n\nSearchUnlinkedMsisdnsModule\n\nSearchUnlinkedMsisdnsModule\n\nSearchUnlinkedMsisdnsModule -->\n\nLogsAndJournalsModule->SearchUnlinkedMsisdnsModule\n\n\n\n\n\nRabbitModule\n\nRabbitModule\n\nSearchUnlinkedMsisdnsModule -->\n\nRabbitModule->SearchUnlinkedMsisdnsModule\n\n\n\n\n\nSearchUnlinkedMsisdnsResolver \n\nSearchUnlinkedMsisdnsResolver \n\nSearchUnlinkedMsisdnsResolver  -->\n\nSearchUnlinkedMsisdnsModule->SearchUnlinkedMsisdnsResolver \n\n\n\n\n\nSearchUnlinkedMsisdnsService \n\nSearchUnlinkedMsisdnsService \n\nSearchUnlinkedMsisdnsService  -->\n\nSearchUnlinkedMsisdnsModule->SearchUnlinkedMsisdnsService \n\n\n\n\n\nSearchUnlinkedMsisdnsService\n\nSearchUnlinkedMsisdnsService\n\nSearchUnlinkedMsisdnsModule -->\n\nSearchUnlinkedMsisdnsService->SearchUnlinkedMsisdnsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SearchUnlinkedMsisdnsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsAndJournalsModule\n                        \n                        \n                            RabbitModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SearchUnlinkedMsisdnsResolver\n                        \n                        \n                            SearchUnlinkedMsisdnsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SearchUnlinkedMsisdnsService } from './search-unlinked-msisdns.service';\nimport { SearchUnlinkedMsisdnsResolver } from './search-unlinked-msisdns.resolver';\nimport { RabbitModule } from '@web-clients-backend/rabbit';\nimport { LogsAndJournalsModule } from '@web-clients-backend/logs';\n\n@Module({\n  imports: [RabbitModule, LogsAndJournalsModule],\n  providers: [SearchUnlinkedMsisdnsService, SearchUnlinkedMsisdnsResolver],\n  exports: [SearchUnlinkedMsisdnsService, SearchUnlinkedMsisdnsResolver],\n})\nexport class SearchUnlinkedMsisdnsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUnlinkedMsisdnsQueryDto.html":{"url":"classes/SearchUnlinkedMsisdnsQueryDto.html","title":"class - SearchUnlinkedMsisdnsQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUnlinkedMsisdnsQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            SearchUnlinkedMsisdnsInput\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                categoryId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                msisdn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                regionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(msisdn: string)\n                    \n                \n                        \n                            \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msisdn\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'categoryId брать из метода TODO'})@IsOptional()@IsArray()@ArrayNotEmpty({message: 'Массив categoryId не должен быть пустым при предоставлении.'})@IsInt({each: true, message: 'Каждый categoryId должен быть целым числом.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        msisdn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsString()@MaxLength(10, {message: 'MSISDN должен содержать не более 10 символов.'})@MinLength(5, {message: 'MSISDN должен содержать не менее 5 символов.'})@Matches(/^[0-9%]+$/, {message: 'MSISDN может содержать только цифры и символ %.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        regionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'regionId брать из метода TODO'})@IsOptional()@IsArray()@ArrayNotEmpty({message: 'Массив regionId не должен быть пустым при предоставлении.'})@IsInt({each: true, message: 'Каждый regionId должен быть целым числом.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsOptional,\n  IsString,\n  IsArray,\n  IsInt,\n  MinLength,\n  Matches,\n  ArrayNotEmpty,\n  MaxLength,\n  IsIn,\n  IsEnum,\n} from 'class-validator';\nimport { InputType, Field, Int } from '@nestjs/graphql';\nimport {\n  MsisdnCategory,\n  MsisdnStatus,\n  Region,\n  SearchUnlinkedMsisdnsInput,\n} from '@web-clients-backend/shared';\n\n@InputType({ description: 'ДТО для поиска свободных номеров' })\nexport class SearchUnlinkedMsisdnsQueryDto\n  implements SearchUnlinkedMsisdnsInput\n{\n  @Field(() => String)\n  @IsString()\n  @MaxLength(10, { message: 'MSISDN должен содержать не более 10 символов.' })\n  @MinLength(5, { message: 'MSISDN должен содержать не менее 5 символов.' })\n  @Matches(/^[0-9%]+$/, {\n    message: 'MSISDN может содержать только цифры и символ %.',\n  })\n  msisdn: string;\n\n  @Field(() => [Int], {\n    nullable: true,\n    description: 'regionId брать из метода TODO',\n  }) //TODO узнать метод для получения regionId\n  @IsOptional()\n  @IsArray()\n  @ArrayNotEmpty({\n    message: 'Массив regionId не должен быть пустым при предоставлении.',\n  })\n  @IsInt({ each: true, message: 'Каждый regionId должен быть целым числом.' })\n  regionId?: number[];\n\n  @Field(() => [Int], {\n    nullable: true,\n    description: 'categoryId брать из метода TODO',\n  }) //TODO узнать метод для получения categoryId\n  @IsOptional()\n  @IsArray()\n  @ArrayNotEmpty({\n    message: 'Массив categoryId не должен быть пустым при предоставлении.',\n  })\n  @IsInt({ each: true, message: 'Каждый categoryId должен быть целым числом.' })\n  categoryId?: number[];\n\n  constructor(msisdn: string) {\n    this.msisdn = msisdn;\n  }\n}\n\n@InputType({ description: 'Входные данные для сортировки полученных данных' })\nexport class SortInputDTO {\n  @Field(() => String, { description: 'Поле для сортировки' })\n  @IsOptional()\n  @IsString()\n  @IsIn(['status', 'dateStatus', 'msisdn', 'region', 'categoryName', 'comment'])\n  field: string;\n\n  @Field(() => String, { description: 'Направление сортировки' })\n  @IsOptional()\n  @IsString()\n  @IsIn(['asc', 'desc']) // Только 'asc' или 'desc'\n  direction: 'asc' | 'desc';\n\n  constructor(field: string, direction: 'asc' | 'desc') {\n    this.field = field;\n    this.direction = direction;\n  }\n}\n\n@InputType({ description: 'Входные данные для фильтра полученных данных' })\nexport class MsisdnFilterDTO {\n  @Field(() => MsisdnStatus, { nullable: true, description: 'Статус номера' })\n  @IsOptional()\n  @IsEnum(MsisdnStatus, {\n    message: 'Статус должен быть одним из допустимых значений',\n  })\n  status?: MsisdnStatus;\n\n  @Field(() => MsisdnCategory, {\n    nullable: true,\n    description: 'Категория номера',\n  })\n  @IsOptional()\n  @IsEnum(MsisdnCategory, {\n    message: 'Категория должна быть одним из допустимых значений',\n  })\n  category?: MsisdnCategory;\n\n  @Field(() => Region, { nullable: true, description: 'Регион номера' })\n  @IsOptional()\n  @IsEnum(Region, {\n    message: 'Регион должен быть одним из допустимых значений',\n  })\n  region?: Region;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUnlinkedMsisdnsResolver.html":{"url":"classes/SearchUnlinkedMsisdnsResolver.html","title":"class - SearchUnlinkedMsisdnsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUnlinkedMsisdnsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                searchUnlinkedMsisdns\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(searchUnlinkedMsisdnsService: SearchUnlinkedMsisdnsService)\n                    \n                \n                        \n                            \n                                Defined in libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.resolver.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchUnlinkedMsisdnsService\n                                                  \n                                                        \n                                                                        SearchUnlinkedMsisdnsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchUnlinkedMsisdns\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchUnlinkedMsisdns(context: any, input: SearchUnlinkedMsisdnsQueryDto, pagination: PaginationDTO, sort?: SortInputDTO, filter?: MsisdnFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'searchUnlinkedMsisdns'})\n                \n            \n\n                    \n                        \n                            Defined in libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.resolver.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                            SearchUnlinkedMsisdnsQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pagination\n                                            \n                                                            PaginationDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sort\n                                            \n                                                            SortInputDTO\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                            MsisdnFilterDTO\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args, Context } from '@nestjs/graphql';\nimport { SearchUnlinkedMsisdnsService } from './search-unlinked-msisdns.service';\nimport {\n  MsisdnFilterDTO,\n  SearchUnlinkedMsisdnsQueryDto,\n  SortInputDTO,\n} from './dto/payload.dto';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  generatePaginationArray,\n  generateTokenContext,\n  IAccessTokenInput,\n  ISearchUnlinkedMsisdnsPayload,\n  ISearchUnlinkedMsisdnsResponse,\n  PaginationDTO,\n  SearchUnlinkedMsisdnsDTO,\n  UnlinkedMsisdnsDto,\n} from '@web-clients-backend/shared';\nimport { HttpException, HttpStatus } from '@nestjs/common';\n\n@Resolver()\nexport class SearchUnlinkedMsisdnsResolver {\n  constructor(\n    private readonly searchUnlinkedMsisdnsService: SearchUnlinkedMsisdnsService\n  ) {}\n\n  @Query(() => SearchUnlinkedMsisdnsDTO, {\n    name: 'searchUnlinkedMsisdns',\n  })\n  async searchUnlinkedMsisdns(\n    @Context() context: any,\n    @Args('input', { nullable: false }) input: SearchUnlinkedMsisdnsQueryDto,\n    @Args('pagination', { nullable: false })\n    pagination: PaginationDTO,\n    @Args('sort', { nullable: true }) sort?: SortInputDTO,\n    @Args('filter', { nullable: true }) filter?: MsisdnFilterDTO\n  ): Promise {\n    const tokenInput: IAccessTokenInput = {\n      access_token: await generateTokenContext(context),\n      traceId: { traceID: uuidv4() },\n    };\n\n    const payload: ISearchUnlinkedMsisdnsPayload = {\n      tokenInput,\n      input,\n    };\n\n    const dataSearch: ISearchUnlinkedMsisdnsResponse | null =\n      await this.searchUnlinkedMsisdnsService.searchUnlinkedMsisdns(payload);\n\n    // console.log('dataSearch:', dataSearch);\n    if (!dataSearch) {\n      throw new HttpException(\n        'ошибка при поиске свободных номеров',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    if (!Array.isArray(dataSearch)) {\n      throw new HttpException(\n        'msisdns должен быть массивом',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n\n    const normalizedData: UnlinkedMsisdnsDto[] =\n      await this.searchUnlinkedMsisdnsService.normalizedMsisdns(dataSearch);\n\n    const filteredDataSearch: UnlinkedMsisdnsDto[] =\n      await this.searchUnlinkedMsisdnsService.filter(normalizedData, filter);\n\n    const sortedData: UnlinkedMsisdnsDto[] =\n      await this.searchUnlinkedMsisdnsService.sort(filteredDataSearch, sort);\n\n    const sliceArray = await generatePaginationArray(\n      sortedData,\n      pagination.page,\n      pagination.perPage\n    );\n\n    const data: SearchUnlinkedMsisdnsDTO = {\n      items: sliceArray.arraySlice,\n      total: sliceArray.total,\n    };\n\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchUnlinkedMsisdnsResponseDto.html":{"url":"classes/SearchUnlinkedMsisdnsResponseDto.html","title":"class - SearchUnlinkedMsisdnsResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchUnlinkedMsisdnsResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                SearchUnlinkedMsisdnsResponseDto - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n\n            \n\n\n            \n                Implements\n            \n            \n                            ISearchUnlinkedMsisdnsResponse\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                msisdns\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(msisdns: (MsisdnDto | null)[])\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msisdns\n                                                  \n                                                        \n                                                                        (MsisdnDto | null)[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        msisdns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (MsisdnDto | null)[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Список несвязанных номеров телефонов (MSISDN)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:122\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, Float } from '@nestjs/graphql';\nimport { ISearchUnlinkedMsisdnsResponse } from '../../interfaces';\nimport { SN } from '../../types';\nimport { PaginatedResponseType } from '../helpersGql';\n\n/**\n * `StateDto` - объектный тип для представления состояния объекта.\n */\n@ObjectType({\n  description: 'Объектный тип для представления состояния объекта.',\n})\nexport class StateDto {\n  @Field(() => Int, { description: 'Идентификатор состояния' })\n  id: number;\n\n  @Field(() => String, { description: 'Название состояния' })\n  name: string;\n\n  @Field(() => String, { description: 'Время изменения состояния' })\n  changedAt: string;\n\n  constructor(id: number, name: string, changedAt: string) {\n    this.id = id;\n    this.name = name;\n    this.changedAt = changedAt;\n  }\n}\n\n/**\n * `CategoryDto` - объектный тип для представления категории.\n */\n@ObjectType({ description: 'Объектный тип для представления категории.' })\nexport class CategoryDto {\n  @Field(() => Int, { description: 'Идентификатор категории' })\n  id: number;\n\n  @Field(() => String, { description: 'Название категории' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `RegionDto` - объектный тип для представления региона.\n */\n@ObjectType({ description: 'Объектный тип для представления региона.' })\nexport class RegionDto {\n  @Field(() => Int, { description: 'Идентификатор региона' })\n  id: number;\n\n  @Field(() => String, { description: 'Название региона' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `MsisdnDto` - объектный тип для представления номера телефона (MSISDN).\n */\n@ObjectType({\n  description: 'Объектный тип для представления номера телефона (MSISDN).',\n})\nexport class MsisdnDto {\n  @Field(() => Int, { description: 'Идентификатор номера телефона' })\n  id: number;\n\n  @Field(() => Number, { description: 'Сам номер телефона (MSISDN)' })\n  msisdn: number;\n\n  @Field(() => String, {\n    description: 'Комментарий, связанный с номером',\n    nullable: true,\n  })\n  comment?: string;\n\n  @Field(() => StateDto, { description: 'Состояние номера телефона' })\n  state: StateDto;\n\n  @Field(() => CategoryDto, { description: 'Категория номера телефона' })\n  category: CategoryDto;\n\n  @Field(() => RegionDto, { description: 'Регион номера телефона' })\n  region: RegionDto;\n\n  constructor(\n    id: number,\n    msisdn: number,\n    comment: string,\n    state: StateDto,\n    category: CategoryDto,\n    region: RegionDto\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.comment = comment;\n    this.state = state;\n    this.category = category;\n    this.region = region;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsResponseDto` - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления результата поиска несвязанного номера телефона (MSISDN).',\n})\nexport class SearchUnlinkedMsisdnsResponseDto\n  implements ISearchUnlinkedMsisdnsResponse\n{\n  @Field(() => [MsisdnDto], {\n    nullable: true,\n    description: 'Список несвязанных номеров телефонов (MSISDN)',\n  })\n  msisdns: (MsisdnDto | null)[];\n\n  constructor(msisdns: (MsisdnDto | null)[]) {\n    this.msisdns = msisdns;\n  }\n}\n/**\n * `UnlinkedMsisdnsDto` - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n */\n@ObjectType({\n  description:\n    'DTO для представления информации о несвязанных номерах телефонов (MSISDN).',\n})\nexport class UnlinkedMsisdnsDto {\n  @Field(() => String, { description: 'Текущий статус', nullable: true })\n  status: SN;\n\n  @Field(() => String, {\n    description: 'Дата установки статуса',\n    nullable: true,\n  })\n  dateStatus: SN;\n\n  @Field(() => String, { description: 'MISDN пользователя', nullable: true })\n  msisdn: SN;\n\n  @Field(() => String, { description: 'Регион пользователя', nullable: true })\n  region: SN;\n\n  @Field(() => String, {\n    description: 'Категория пользователя',\n    nullable: true,\n  })\n  categoryName: SN;\n\n  @Field(() => String, { description: 'Комментарий', nullable: true })\n  comment: SN;\n\n  constructor(\n    status: SN,\n    dateStatus: SN,\n    msisdn: SN,\n    region: SN,\n    categoryName: SN,\n    comment: SN\n  ) {\n    this.status = status;\n    this.dateStatus = dateStatus;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.categoryName = categoryName;\n    this.comment = comment;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsDTO` - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n */\n@ObjectType({ description: 'Список найденных номеров' })\nexport class SearchUnlinkedMsisdnsDTO extends PaginatedResponseType(\n  UnlinkedMsisdnsDto\n) {\n  @Field(() => [UnlinkedMsisdnsDto], { description: 'Список номеров' })\n  override items: UnlinkedMsisdnsDto[];\n\n  @Field(() => Float, { description: 'Количество свободных номеров' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchUnlinkedMsisdnsService.html":{"url":"injectables/SearchUnlinkedMsisdnsService.html","title":"injectable - SearchUnlinkedMsisdnsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchUnlinkedMsisdnsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                filter\n                            \n                            \n                                    Async\n                                normalizedMsisdns\n                            \n                            \n                                    Async\n                                searchUnlinkedMsisdns\n                            \n                            \n                                    Async\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rabbitService: RabbitMQService)\n                    \n                \n                        \n                            \n                                Defined in libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rabbitService\n                                                  \n                                                        \n                                                                        RabbitMQService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(data: UnlinkedMsisdnsDto[], filter?: MsisdnFilterDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.service.ts:142\n                        \n                    \n\n\n            \n                \n                        Фильтрует массив объектов UnlinkedMsisdnsDto на основе заданных критериев.\n\nУбедись, что фильтры в MsisdnFilterDTO заданы корректно.\nФильтрация осуществляется следующим образом:\nЕсли указан filter.status, данные фильтруются по совпадению статуса item.status.\nЕсли указана filter.category, данные фильтруются по совпадению категории item.categoryName.\nЕсли указан filter.region, данные фильтруются по совпадению региона item.region.\n\n\nЕсли ни один из фильтров не задан, возвращаются исходные данные.\nЛогика фильтрации допускает пропуск критериев, что делает их необязательными.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkedMsisdnsDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nМассив объектов UnlinkedMsisdnsDto, которые нужно отфильтровать.\n\n\n                                            \n                                        \n                                        \n                                                filter\n                                            \n                                                            MsisdnFilterDTO\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nОбъект MsisdnFilterDTO, содержащий параметры фильтрации (статус, категория, регион).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает массив объектов, соответствующих критериям фильтрации.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        normalizedMsisdns\n                        \n                    \n                \n            \n            \n                \n                        \n                    normalizedMsisdns(payload: IMsisdn[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Нормализует массив MSISDN данных в стандартный формат.\nЭтот метод обрабатывает массив объектов IMsisdn, извлекая необходимые поля\nи преобразуя их в формат, соответствующий DTO UnlinkedMsisdnsDto.\n\nУбедись, что входной массив payload не содержит null значений, иначе раскомментируй .filter.\nКаждое поле объекта проверяется на наличие данных, чтобы избежать ошибок.\nИспользуется вспомогательная функция generateStringFromDate для форматирования даты.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IMsisdn[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nМассив объектов типа IMsisdn, которые нужно нормализовать.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает массив нормализованных объектов типа UnlinkedMsisdnsDto.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchUnlinkedMsisdns\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchUnlinkedMsisdns(payload: ISearchUnlinkedMsisdnsPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Выполняет поиск несвязанных MSISDN (номеров) на основе заданных параметров.\nЭтот метод отправляет запрос в RabbitMQ с заданной полезной нагрузкой payload\nи получает ответ, содержащий данные о несвязанных MSISDN.\nсодержащая параметры поиска несвязанных MSISDN.\nISearchUnlinkedMsisdnsResponse, содержащий данные о несвязанных MSISDN,\nили null, если данные не были получены.\nЭтот метод использует sendMessageSearch из rabbitService для выполнения асинхронного запроса\nчерез RabbitMQ. Убедись, что структура запроса и ответа согласована с RabbitMQ.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ISearchUnlinkedMsisdnsPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nПолезная нагрузка типа ISearchUnlinkedMsisdnsPayload,\nсодержащая параметры поиска несвязанных MSISDN.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает объект ответа типа\nISearchUnlinkedMsisdnsResponse, содержащий данные о несвязанных MSISDN,\nили null, если данные не были получены.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sort\n                        \n                    \n                \n            \n            \n                \n                        \n                    sort(data: UnlinkedMsisdnsDto[], sort?: SortInputDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/search-unlinked-msisdns/src/lib/search-unlinked-msisdns.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Сортирует массив объектов UnlinkedMsisdnsDto на основе указанных полей и направления.\n\nУбедись, что поле сортировки sort.field и направление sort.direction заданы.\nСпециальная обработка применяется для следующих полей:\ndateStatus: сортируется по времени на основе даты.\nmsisdn: сортируется как числовое значение.\n\n\nДля всех остальных полей применяется строковая сортировка с использованием localeCompare.\nЕсли значения полей равны null, сортировка игнорируется.\nЕсли параметры сортировки не указаны, данные возвращаются без изменений.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UnlinkedMsisdnsDto[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nМассив объектов UnlinkedMsisdnsDto, которые нужно отсортировать.\n\n\n                                            \n                                        \n                                        \n                                                sort\n                                            \n                                                            SortInputDTO\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nОбъект SortInputDTO, содержащий параметры сортировки (поле и направление).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nВозвращает отсортированный массив объектов UnlinkedMsisdnsDto.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  generateStringFromDate,\n  IMsisdn,\n  ISearchUnlinkedMsisdnsPayload,\n  ISearchUnlinkedMsisdnsResponse,\n  SEARCH_UNLINKED_MSISDNS,\n  UnlinkedMsisdnsDto,\n} from '@web-clients-backend/shared';\nimport { RabbitMQService } from '@web-clients-backend/rabbit';\nimport { MsisdnFilterDTO, SortInputDTO } from './dto/payload.dto';\n\n@Injectable()\nexport class SearchUnlinkedMsisdnsService {\n  constructor(private readonly rabbitService: RabbitMQService) {}\n\n  /**\n   * Выполняет поиск несвязанных MSISDN (номеров) на основе заданных параметров.\n   *\n   * Этот метод отправляет запрос в RabbitMQ с заданной полезной нагрузкой `payload`\n   * и получает ответ, содержащий данные о несвязанных MSISDN.\n   *\n   * @param payload - Полезная нагрузка типа `ISearchUnlinkedMsisdnsPayload`,\n   * содержащая параметры поиска несвязанных MSISDN.\n   * @returns {Promise} - Возвращает объект ответа типа\n   * `ISearchUnlinkedMsisdnsResponse`, содержащий данные о несвязанных MSISDN,\n   * или `null`, если данные не были получены.\n   *\n   * @remarks\n   * Этот метод использует `sendMessageSearch` из `rabbitService` для выполнения асинхронного запроса\n   * через RabbitMQ. Убедись, что структура запроса и ответа согласована с RabbitMQ.\n   */\n  async searchUnlinkedMsisdns(\n    payload: ISearchUnlinkedMsisdnsPayload\n  ): Promise {\n    const data = await this.rabbitService.sendMessageSearch(SEARCH_UNLINKED_MSISDNS, payload);\n    if (!data) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Нормализует массив MSISDN данных в стандартный формат.\n   *\n   * Этот метод обрабатывает массив объектов `IMsisdn`, извлекая необходимые поля\n   * и преобразуя их в формат, соответствующий DTO `UnlinkedMsisdnsDto`.\n   *\n   * @param payload - Массив объектов типа `IMsisdn`, которые нужно нормализовать.\n   * @returns {Promise} - Возвращает массив нормализованных объектов типа `UnlinkedMsisdnsDto`.\n   *\n   * @remarks\n   * - Убедись, что входной массив `payload` не содержит `null` значений, иначе раскомментируй `.filter`.\n   * - Каждое поле объекта проверяется на наличие данных, чтобы избежать ошибок.\n   * - Используется вспомогательная функция `generateStringFromDate` для форматирования даты.\n   */\n  async normalizedMsisdns(payload: IMsisdn[]): Promise {\n    return Promise.all(\n      payload\n        // .filter((data): data is IMsisdn => data !== null) // минус `null` //TODO\n        .map(async (data) => ({\n          status: data.state.name || null,\n          dateStatus:\n            (await generateStringFromDate(data.state.changedAt)) || null,\n          msisdn: data.msisdn.toString() || null,\n          region: data.region.name || null,\n          categoryName: data.category.name || null,\n          comment: data?.comment || '',\n        }))\n    );\n  }\n\n  /**\n   * Сортирует массив объектов `UnlinkedMsisdnsDto` на основе указанных полей и направления.\n   *\n   * @param data - Массив объектов `UnlinkedMsisdnsDto`, которые нужно отсортировать.\n   * @param sort - Объект `SortInputDTO`, содержащий параметры сортировки (поле и направление).\n   * @returns {Promise} - Возвращает отсортированный массив объектов `UnlinkedMsisdnsDto`.\n   *\n   * @remarks\n   * - Убедись, что поле сортировки `sort.field` и направление `sort.direction` заданы.\n   * - Специальная обработка применяется для следующих полей:\n   *   - `dateStatus`: сортируется по времени на основе даты.\n   *   - `msisdn`: сортируется как числовое значение.\n   * - Для всех остальных полей применяется строковая сортировка с использованием `localeCompare`.\n   * - Если значения полей равны `null`, сортировка игнорируется.\n   * - Если параметры сортировки не указаны, данные возвращаются без изменений.\n   */\n  async sort(\n    data: UnlinkedMsisdnsDto[],\n    sort?: SortInputDTO\n  ): Promise {\n    if (sort?.field && sort?.direction) {\n      return data.sort((a, b) => {\n        const field = sort.field as keyof UnlinkedMsisdnsDto;\n        const valueA = a[field];\n        const valueB = b[field];\n\n        if (valueA === null || valueB === null) return 0;\n\n        switch (sort.field) {\n          case 'dateStatus': {\n            const dateA = new Date(valueA).getTime();\n            const dateB = new Date(valueB).getTime();\n            return sort.direction === 'asc' ? dateA - dateB : dateB - dateA;\n          }\n          case 'msisdn': {\n            const numA = parseInt(valueA, 10);\n            const numB = parseInt(valueB, 10);\n            return sort.direction === 'asc' ? numA - numB : numB - numA;\n          }\n          default: {\n            return sort.direction === 'asc'\n              ? valueA.localeCompare(valueB)\n              : valueB.localeCompare(valueA);\n          }\n        }\n      });\n    }\n    return data;\n  }\n\n  /**\n   * Фильтрует массив объектов `UnlinkedMsisdnsDto` на основе заданных критериев.\n   *\n   * @param data - Массив объектов `UnlinkedMsisdnsDto`, которые нужно отфильтровать.\n   * @param filter - Объект `MsisdnFilterDTO`, содержащий параметры фильтрации (статус, категория, регион).\n   * @returns {Promise} - Возвращает массив объектов, соответствующих критериям фильтрации.\n   *\n   * @remarks\n   * - Убедись, что фильтры в `MsisdnFilterDTO` заданы корректно.\n   * - Фильтрация осуществляется следующим образом:\n   *   - Если указан `filter.status`, данные фильтруются по совпадению статуса `item.status`.\n   *   - Если указана `filter.category`, данные фильтруются по совпадению категории `item.categoryName`.\n   *   - Если указан `filter.region`, данные фильтруются по совпадению региона `item.region`.\n   * - Если ни один из фильтров не задан, возвращаются исходные данные.\n   * - Логика фильтрации допускает пропуск критериев, что делает их необязательными.\n   */\n  async filter(\n    data: UnlinkedMsisdnsDto[],\n    filter?: MsisdnFilterDTO\n  ): Promise {\n    if (!filter) return data;\n\n    return data.filter((item) => {\n      const matchStatus = filter.status ? item.status === filter.status : true;\n      const matchCategory = filter.category\n        ? item.categoryName === filter.category\n        : true;\n      const matchRegion = filter.region ? item.region === filter.region : true;\n\n      return matchStatus && matchCategory && matchRegion;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInput.html":{"url":"classes/SortInput.html","title":"class - SortInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-clients/src/lib/other/clients.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                direction\n                            \n                            \n                                    \n                                    \n                                    \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, direction: \"asc\" | \"desc\")\n                    \n                \n                        \n                            \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        direction\n                                                  \n                                                        \n                                                                    \"asc\" | \"desc\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Направление сортировки'})@IsString()@IsIn(['asc', 'desc'])\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Поле для сортировки'})@IsString()@IsIn(['fio', 'msisdn', 'passport.serialNumber', 'birthDate'])\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-clients/src/lib/other/clients.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Float, InputType, ObjectType } from '@nestjs/graphql';\nimport { IsEnum, IsIn, IsOptional, IsString } from 'class-validator';\nimport {\n  ClientDataDTO,\n  JuridicalTypeClientEnum,\n  MarketSegmentEnum,\n  PaginatedResponseType,\n  SearchAreaEnum,\n  StateClientEnum,\n} from '@web-clients-backend/shared';\n\n@InputType({ description: 'Поле для сортировки' })\nexport class SortInput {\n  @Field(() => String, { description: 'Поле для сортировки' })\n  @IsString()\n  @IsIn(['fio', 'msisdn', 'passport.serialNumber', 'birthDate'])\n  field: string;\n\n  @Field(() => String, { description: 'Направление сортировки' })\n  @IsString()\n  @IsIn(['asc', 'desc']) // Только 'asc' или 'desc'\n  direction: 'asc' | 'desc';\n\n  constructor(field: string, direction: 'asc' | 'desc') {\n    this.field = field;\n    this.direction = direction;\n  }\n}\n\n@InputType({ description: 'DTO для создания пользователя с имплементацией' })\nexport class ClientFilterInput {\n  @IsOptional()\n  @IsEnum(JuridicalTypeClientEnum, {\n    message: 'Неверный тип для juridicalType',\n  })\n  @Field(() => JuridicalTypeClientEnum, {\n    nullable: true,\n    description:\n      'Юридический вид клиента (например - \"INDIVIDUAL (Физическое лицо) \", \"ENTREPRENEUR(ИП)\", \"LEGAL_ENTITY(Юридическое лицо)\")',\n  })\n  juridicalType?: JuridicalTypeClientEnum;\n\n  @IsOptional()\n  @IsEnum(StateClientEnum, { message: 'Неверный тип для contractState' })\n  @Field(() => StateClientEnum, {\n    nullable: true,\n    description:\n      'Статус договора (например, \"ACTIVE\", \"SUSPENDED - Приостановлен\", \"BLOCKED - Блокирован\", \"CLOSED - Закрыт\")',\n  })\n  contractState?: StateClientEnum;\n\n  @IsOptional()\n  @IsEnum(MarketSegmentEnum, {\n    message: 'Неверный тип для рыночного сегмента',\n  })\n  @Field(() => MarketSegmentEnum, {\n    nullable: true,\n    description: 'Рыночный сегмент',\n  })\n  marketSegment?: MarketSegmentEnum;\n}\n\n@InputType()\nexport class ClientsSearchInputDTO {\n  @Field(() => String, { description: 'Ввод для поиска клиентов' })\n  @IsString()\n  input!: string | number;\n\n  @Field(() => SearchAreaEnum, {\n    description: 'Область поиска (например, ACCOUNT_NUMBER)',\n  })\n  @IsEnum(SearchAreaEnum)\n  area!: SearchAreaEnum;\n}\n\n@ObjectType({ description: 'Список найденных клиентов' })\nexport class ClientsSearchedDTO extends PaginatedResponseType(ClientDataDTO) {\n  @Field(() => [ClientDataDTO], { description: 'Список клиентов' })\n  override items: ClientDataDTO[];\n\n  @Field(() => Float, { description: 'Количество клиентов' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortInputDTO.html":{"url":"classes/SortInputDTO.html","title":"class - SortInputDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortInputDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                direction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                field\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, direction: \"asc\" | \"desc\")\n                    \n                \n                        \n                            \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        direction\n                                                  \n                                                        \n                                                                    \"asc\" | \"desc\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Направление сортировки'})@IsOptional()@IsString()@IsIn(['asc', 'desc'])\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Поле для сортировки'})@IsOptional()@IsString()@IsIn(['status', 'dateStatus', 'msisdn', 'region', 'categoryName', 'comment'])\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/search-unlinked-msisdns/src/lib/dto/payload.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsOptional,\n  IsString,\n  IsArray,\n  IsInt,\n  MinLength,\n  Matches,\n  ArrayNotEmpty,\n  MaxLength,\n  IsIn,\n  IsEnum,\n} from 'class-validator';\nimport { InputType, Field, Int } from '@nestjs/graphql';\nimport {\n  MsisdnCategory,\n  MsisdnStatus,\n  Region,\n  SearchUnlinkedMsisdnsInput,\n} from '@web-clients-backend/shared';\n\n@InputType({ description: 'ДТО для поиска свободных номеров' })\nexport class SearchUnlinkedMsisdnsQueryDto\n  implements SearchUnlinkedMsisdnsInput\n{\n  @Field(() => String)\n  @IsString()\n  @MaxLength(10, { message: 'MSISDN должен содержать не более 10 символов.' })\n  @MinLength(5, { message: 'MSISDN должен содержать не менее 5 символов.' })\n  @Matches(/^[0-9%]+$/, {\n    message: 'MSISDN может содержать только цифры и символ %.',\n  })\n  msisdn: string;\n\n  @Field(() => [Int], {\n    nullable: true,\n    description: 'regionId брать из метода TODO',\n  }) //TODO узнать метод для получения regionId\n  @IsOptional()\n  @IsArray()\n  @ArrayNotEmpty({\n    message: 'Массив regionId не должен быть пустым при предоставлении.',\n  })\n  @IsInt({ each: true, message: 'Каждый regionId должен быть целым числом.' })\n  regionId?: number[];\n\n  @Field(() => [Int], {\n    nullable: true,\n    description: 'categoryId брать из метода TODO',\n  }) //TODO узнать метод для получения categoryId\n  @IsOptional()\n  @IsArray()\n  @ArrayNotEmpty({\n    message: 'Массив categoryId не должен быть пустым при предоставлении.',\n  })\n  @IsInt({ each: true, message: 'Каждый categoryId должен быть целым числом.' })\n  categoryId?: number[];\n\n  constructor(msisdn: string) {\n    this.msisdn = msisdn;\n  }\n}\n\n@InputType({ description: 'Входные данные для сортировки полученных данных' })\nexport class SortInputDTO {\n  @Field(() => String, { description: 'Поле для сортировки' })\n  @IsOptional()\n  @IsString()\n  @IsIn(['status', 'dateStatus', 'msisdn', 'region', 'categoryName', 'comment'])\n  field: string;\n\n  @Field(() => String, { description: 'Направление сортировки' })\n  @IsOptional()\n  @IsString()\n  @IsIn(['asc', 'desc']) // Только 'asc' или 'desc'\n  direction: 'asc' | 'desc';\n\n  constructor(field: string, direction: 'asc' | 'desc') {\n    this.field = field;\n    this.direction = direction;\n  }\n}\n\n@InputType({ description: 'Входные данные для фильтра полученных данных' })\nexport class MsisdnFilterDTO {\n  @Field(() => MsisdnStatus, { nullable: true, description: 'Статус номера' })\n  @IsOptional()\n  @IsEnum(MsisdnStatus, {\n    message: 'Статус должен быть одним из допустимых значений',\n  })\n  status?: MsisdnStatus;\n\n  @Field(() => MsisdnCategory, {\n    nullable: true,\n    description: 'Категория номера',\n  })\n  @IsOptional()\n  @IsEnum(MsisdnCategory, {\n    message: 'Категория должна быть одним из допустимых значений',\n  })\n  category?: MsisdnCategory;\n\n  @Field(() => Region, { nullable: true, description: 'Регион номера' })\n  @IsOptional()\n  @IsEnum(Region, {\n    message: 'Регион должен быть одним из допустимых значений',\n  })\n  region?: Region;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateDto.html":{"url":"classes/StateDto.html","title":"class - StateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                StateDto - объектный тип для представления состояния объекта.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                changedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, changedAt: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changedAt\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        changedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Время изменения состояния'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Идентификатор состояния'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Название состояния'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, Float } from '@nestjs/graphql';\nimport { ISearchUnlinkedMsisdnsResponse } from '../../interfaces';\nimport { SN } from '../../types';\nimport { PaginatedResponseType } from '../helpersGql';\n\n/**\n * `StateDto` - объектный тип для представления состояния объекта.\n */\n@ObjectType({\n  description: 'Объектный тип для представления состояния объекта.',\n})\nexport class StateDto {\n  @Field(() => Int, { description: 'Идентификатор состояния' })\n  id: number;\n\n  @Field(() => String, { description: 'Название состояния' })\n  name: string;\n\n  @Field(() => String, { description: 'Время изменения состояния' })\n  changedAt: string;\n\n  constructor(id: number, name: string, changedAt: string) {\n    this.id = id;\n    this.name = name;\n    this.changedAt = changedAt;\n  }\n}\n\n/**\n * `CategoryDto` - объектный тип для представления категории.\n */\n@ObjectType({ description: 'Объектный тип для представления категории.' })\nexport class CategoryDto {\n  @Field(() => Int, { description: 'Идентификатор категории' })\n  id: number;\n\n  @Field(() => String, { description: 'Название категории' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `RegionDto` - объектный тип для представления региона.\n */\n@ObjectType({ description: 'Объектный тип для представления региона.' })\nexport class RegionDto {\n  @Field(() => Int, { description: 'Идентификатор региона' })\n  id: number;\n\n  @Field(() => String, { description: 'Название региона' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `MsisdnDto` - объектный тип для представления номера телефона (MSISDN).\n */\n@ObjectType({\n  description: 'Объектный тип для представления номера телефона (MSISDN).',\n})\nexport class MsisdnDto {\n  @Field(() => Int, { description: 'Идентификатор номера телефона' })\n  id: number;\n\n  @Field(() => Number, { description: 'Сам номер телефона (MSISDN)' })\n  msisdn: number;\n\n  @Field(() => String, {\n    description: 'Комментарий, связанный с номером',\n    nullable: true,\n  })\n  comment?: string;\n\n  @Field(() => StateDto, { description: 'Состояние номера телефона' })\n  state: StateDto;\n\n  @Field(() => CategoryDto, { description: 'Категория номера телефона' })\n  category: CategoryDto;\n\n  @Field(() => RegionDto, { description: 'Регион номера телефона' })\n  region: RegionDto;\n\n  constructor(\n    id: number,\n    msisdn: number,\n    comment: string,\n    state: StateDto,\n    category: CategoryDto,\n    region: RegionDto\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.comment = comment;\n    this.state = state;\n    this.category = category;\n    this.region = region;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsResponseDto` - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления результата поиска несвязанного номера телефона (MSISDN).',\n})\nexport class SearchUnlinkedMsisdnsResponseDto\n  implements ISearchUnlinkedMsisdnsResponse\n{\n  @Field(() => [MsisdnDto], {\n    nullable: true,\n    description: 'Список несвязанных номеров телефонов (MSISDN)',\n  })\n  msisdns: (MsisdnDto | null)[];\n\n  constructor(msisdns: (MsisdnDto | null)[]) {\n    this.msisdns = msisdns;\n  }\n}\n/**\n * `UnlinkedMsisdnsDto` - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n */\n@ObjectType({\n  description:\n    'DTO для представления информации о несвязанных номерах телефонов (MSISDN).',\n})\nexport class UnlinkedMsisdnsDto {\n  @Field(() => String, { description: 'Текущий статус', nullable: true })\n  status: SN;\n\n  @Field(() => String, {\n    description: 'Дата установки статуса',\n    nullable: true,\n  })\n  dateStatus: SN;\n\n  @Field(() => String, { description: 'MISDN пользователя', nullable: true })\n  msisdn: SN;\n\n  @Field(() => String, { description: 'Регион пользователя', nullable: true })\n  region: SN;\n\n  @Field(() => String, {\n    description: 'Категория пользователя',\n    nullable: true,\n  })\n  categoryName: SN;\n\n  @Field(() => String, { description: 'Комментарий', nullable: true })\n  comment: SN;\n\n  constructor(\n    status: SN,\n    dateStatus: SN,\n    msisdn: SN,\n    region: SN,\n    categoryName: SN,\n    comment: SN\n  ) {\n    this.status = status;\n    this.dateStatus = dateStatus;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.categoryName = categoryName;\n    this.comment = comment;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsDTO` - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n */\n@ObjectType({ description: 'Список найденных номеров' })\nexport class SearchUnlinkedMsisdnsDTO extends PaginatedResponseType(\n  UnlinkedMsisdnsDto\n) {\n  @Field(() => [UnlinkedMsisdnsDto], { description: 'Список номеров' })\n  override items: UnlinkedMsisdnsDto[];\n\n  @Field(() => Float, { description: 'Количество свободных номеров' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StructuredNameClientSearchDTO.html":{"url":"classes/StructuredNameClientSearchDTO.html","title":"class - StructuredNameClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StructuredNameClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/structuredClientName.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                StructuredNameClientSearchDTO - объектный тип для представления структурированного имени клиента.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IStructuredClientName\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                middleName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firstName: string, middle: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/structuredClientName.dto.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        middle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Имя клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/structuredClientName.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Фамилия клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/structuredClientName.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        middleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Отчество клиента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/structuredClientName.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field } from '@nestjs/graphql';\nimport { IStructuredClientName } from '../../interfaces';\n\n/**\n * `StructuredNameClientSearchDTO` - объектный тип для представления структурированного имени клиента.\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления структурированного имени клиента.',\n})\nexport class StructuredNameClientSearchDTO implements IStructuredClientName {\n  @Field(() => String, { description: 'Имя клиента' })\n  firstName: string;\n\n  @Field(() => String, { description: 'Отчество клиента' })\n  middleName: string;\n\n  @Field(() => String, { description: 'Фамилия клиента' })\n  lastName: string;\n\n  constructor(firstName: string, middle: string, lastName: string) {\n    this.firstName = firstName;\n    this.middleName = middle;\n    this.lastName = lastName;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubscriberClientSearchDTO.html":{"url":"classes/SubscriberClientSearchDTO.html","title":"class - SubscriberClientSearchDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubscriberClientSearchDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-client/subscriber.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                SubscriberClientSearchDTO - объектный тип для представления абонента клиента.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ISubscriberClientSearch\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                additionalPhoneNumber\n                            \n                            \n                                    \n                                equipment\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                msisdn\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, msisdn: string, region: string, state: string, equipment: EquipmentClientSearchDTO, additionalPhoneNumber?: string)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-client/subscriber.dto.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msisdn\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        region\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        equipment\n                                                  \n                                                        \n                                                                        EquipmentClientSearchDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        additionalPhoneNumber\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        additionalPhoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'Дополнительный номер телефона абонента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/subscriber.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        equipment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EquipmentClientSearchDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Оборудование абонента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/subscriber.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Идентификатор абонента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/subscriber.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        msisdn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Номер телефона абонента (MSISDN)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/subscriber.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Регион абонента'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/subscriber.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Состояние абонента (например, Активен или Блокирован)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-client/subscriber.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int } from '@nestjs/graphql';\nimport { EquipmentClientSearchDTO } from './equipment.dto';\nimport { ISubscriberClientSearch } from '../../interfaces';\n/**\n * `SubscriberClientSearchDTO` - объектный тип для представления абонента клиента.\n */\n@ObjectType({\n  description: 'Объектный тип для представления абонента клиента.',\n})\nexport class SubscriberClientSearchDTO implements ISubscriberClientSearch {\n  @Field(() => Int, { description: 'Идентификатор абонента' })\n  id: number;\n\n  @Field(() => String, { description: 'Номер телефона абонента (MSISDN)' })\n  msisdn: string;\n\n  @Field(() => String, { description: 'Регион абонента' })\n  region: string;\n\n  @Field(() => String, {\n    description: 'Состояние абонента (например, Активен или Блокирован)',\n  })\n  state: string;\n\n  @Field(() => String, {\n    nullable: true,\n    description: 'Дополнительный номер телефона абонента',\n  })\n  additionalPhoneNumber?: string;\n\n  @Field(() => EquipmentClientSearchDTO, {\n    description: 'Оборудование абонента',\n  })\n  equipment: EquipmentClientSearchDTO;\n\n  constructor(\n    id: number,\n    msisdn: string,\n    region: string,\n    state: string,\n    equipment: EquipmentClientSearchDTO,\n    additionalPhoneNumber?: string\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.state = state;\n    this.equipment = equipment;\n    this.additionalPhoneNumber = additionalPhoneNumber;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnlinkedMsisdnsDto.html":{"url":"classes/UnlinkedMsisdnsDto.html","title":"class - UnlinkedMsisdnsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnlinkedMsisdnsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                UnlinkedMsisdnsDto - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryName\n                            \n                            \n                                    \n                                comment\n                            \n                            \n                                    \n                                dateStatus\n                            \n                            \n                                    \n                                msisdn\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(status: SN, dateStatus: SN, msisdn: SN, region: SN, categoryName: SN, comment: SN)\n                    \n                \n                        \n                            \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:158\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateStatus\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msisdn\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        region\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryName\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comment\n                                                  \n                                                        \n                                                                        SN\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Категория пользователя', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Комментарий', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Дата установки статуса', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        msisdn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'MISDN пользователя', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Регион пользователя', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SN\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {description: 'Текущий статус', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/dto/search-unlinked-msisdns/response.dto.ts:137\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectType, Field, Int, Float } from '@nestjs/graphql';\nimport { ISearchUnlinkedMsisdnsResponse } from '../../interfaces';\nimport { SN } from '../../types';\nimport { PaginatedResponseType } from '../helpersGql';\n\n/**\n * `StateDto` - объектный тип для представления состояния объекта.\n */\n@ObjectType({\n  description: 'Объектный тип для представления состояния объекта.',\n})\nexport class StateDto {\n  @Field(() => Int, { description: 'Идентификатор состояния' })\n  id: number;\n\n  @Field(() => String, { description: 'Название состояния' })\n  name: string;\n\n  @Field(() => String, { description: 'Время изменения состояния' })\n  changedAt: string;\n\n  constructor(id: number, name: string, changedAt: string) {\n    this.id = id;\n    this.name = name;\n    this.changedAt = changedAt;\n  }\n}\n\n/**\n * `CategoryDto` - объектный тип для представления категории.\n */\n@ObjectType({ description: 'Объектный тип для представления категории.' })\nexport class CategoryDto {\n  @Field(() => Int, { description: 'Идентификатор категории' })\n  id: number;\n\n  @Field(() => String, { description: 'Название категории' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `RegionDto` - объектный тип для представления региона.\n */\n@ObjectType({ description: 'Объектный тип для представления региона.' })\nexport class RegionDto {\n  @Field(() => Int, { description: 'Идентификатор региона' })\n  id: number;\n\n  @Field(() => String, { description: 'Название региона' })\n  name: string;\n\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n/**\n * `MsisdnDto` - объектный тип для представления номера телефона (MSISDN).\n */\n@ObjectType({\n  description: 'Объектный тип для представления номера телефона (MSISDN).',\n})\nexport class MsisdnDto {\n  @Field(() => Int, { description: 'Идентификатор номера телефона' })\n  id: number;\n\n  @Field(() => Number, { description: 'Сам номер телефона (MSISDN)' })\n  msisdn: number;\n\n  @Field(() => String, {\n    description: 'Комментарий, связанный с номером',\n    nullable: true,\n  })\n  comment?: string;\n\n  @Field(() => StateDto, { description: 'Состояние номера телефона' })\n  state: StateDto;\n\n  @Field(() => CategoryDto, { description: 'Категория номера телефона' })\n  category: CategoryDto;\n\n  @Field(() => RegionDto, { description: 'Регион номера телефона' })\n  region: RegionDto;\n\n  constructor(\n    id: number,\n    msisdn: number,\n    comment: string,\n    state: StateDto,\n    category: CategoryDto,\n    region: RegionDto\n  ) {\n    this.id = id;\n    this.msisdn = msisdn;\n    this.comment = comment;\n    this.state = state;\n    this.category = category;\n    this.region = region;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsResponseDto` - объектный тип для представления результата поиска свободного номера телефона (MSISDN).\n */\n@ObjectType({\n  description:\n    'Объектный тип для представления результата поиска несвязанного номера телефона (MSISDN).',\n})\nexport class SearchUnlinkedMsisdnsResponseDto\n  implements ISearchUnlinkedMsisdnsResponse\n{\n  @Field(() => [MsisdnDto], {\n    nullable: true,\n    description: 'Список несвязанных номеров телефонов (MSISDN)',\n  })\n  msisdns: (MsisdnDto | null)[];\n\n  constructor(msisdns: (MsisdnDto | null)[]) {\n    this.msisdns = msisdns;\n  }\n}\n/**\n * `UnlinkedMsisdnsDto` - DTO для представления информации о несвязанных номерах телефонов (MSISDN).\n */\n@ObjectType({\n  description:\n    'DTO для представления информации о несвязанных номерах телефонов (MSISDN).',\n})\nexport class UnlinkedMsisdnsDto {\n  @Field(() => String, { description: 'Текущий статус', nullable: true })\n  status: SN;\n\n  @Field(() => String, {\n    description: 'Дата установки статуса',\n    nullable: true,\n  })\n  dateStatus: SN;\n\n  @Field(() => String, { description: 'MISDN пользователя', nullable: true })\n  msisdn: SN;\n\n  @Field(() => String, { description: 'Регион пользователя', nullable: true })\n  region: SN;\n\n  @Field(() => String, {\n    description: 'Категория пользователя',\n    nullable: true,\n  })\n  categoryName: SN;\n\n  @Field(() => String, { description: 'Комментарий', nullable: true })\n  comment: SN;\n\n  constructor(\n    status: SN,\n    dateStatus: SN,\n    msisdn: SN,\n    region: SN,\n    categoryName: SN,\n    comment: SN\n  ) {\n    this.status = status;\n    this.dateStatus = dateStatus;\n    this.msisdn = msisdn;\n    this.region = region;\n    this.categoryName = categoryName;\n    this.comment = comment;\n  }\n}\n\n/**\n * `SearchUnlinkedMsisdnsDTO` - DTO для представления списка найденных несвязанных номеров (MSISDN) с тотал общим кол-вом для пагинации.\n */\n@ObjectType({ description: 'Список найденных номеров' })\nexport class SearchUnlinkedMsisdnsDTO extends PaginatedResponseType(\n  UnlinkedMsisdnsDto\n) {\n  @Field(() => [UnlinkedMsisdnsDto], { description: 'Список номеров' })\n  override items: UnlinkedMsisdnsDto[];\n\n  @Field(() => Float, { description: 'Количество свободных номеров' })\n  override total: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UptimeController.html":{"url":"controllers/UptimeController.html","title":"controller - UptimeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UptimeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/core/src/lib/uptime.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uptime\n                        \n                    \n                \n            \n            \n                \n                        \n                    uptime()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('uptime')\n                \n            \n\n                    \n                        \n                            Defined in libs/core/src/lib/uptime.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class UptimeController {\n  @Get('uptime')\n  uptime() {\n    return process.uptime();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @2fd/graphdoc : 2.4.0\n        \n            @apollo/server : 4.10.4\n        \n            @compodoc/compodoc : 1.1.24\n        \n            @elastic/elasticsearch : ^7.4.0\n        \n            @nestjs/apollo : 12.1.0\n        \n            @nestjs/axios : ^3.0.3\n        \n            @nestjs/class-transformer : ^0.4.0\n        \n            @nestjs/common : ^10.0.2\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.2\n        \n            @nestjs/elasticsearch : ^10.0.1\n        \n            @nestjs/graphql : 12.1.1\n        \n            @nestjs/jwt : 10.2.0\n        \n            @nestjs/microservices : 10.3.9\n        \n            @nestjs/platform-express : ^10.0.2\n        \n            @nestjs/schedule : 4.0.2\n        \n            @nestjs/typeorm : 10.0.2\n        \n            @types/cache-manager-redis-store : 2.0.1\n        \n            @willsoto/nestjs-prometheus : 6.0.1\n        \n            amqp-connection-manager : ^4.1.14\n        \n            amqplib : 0.10.4\n        \n            apollo-metrics : 1.0.1\n        \n            apollo-server-cache-redis : 3.3.1\n        \n            apollo-tracing : 0.16.0\n        \n            axios : ^1.7.7\n        \n            cache-manager-redis-store : 2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            express-prom-bundle : ^7.0.0\n        \n            graphql : 16.3.0\n        \n            graphql-cost-analysis : 1.0.3\n        \n            graphql-query-complexity : 0.12.0\n        \n            graphql-subscriptions : 2.0.0\n        \n            graphql-type-json : ^0.3.2\n        \n            graphql-upload : 11.0.0\n        \n            graphql-upload-ts : 2.0.6\n        \n            graphql-ws : 5.15.0\n        \n            joi : ^17.13.3\n        \n            nestjs-redis : 1.3.3\n        \n            pg : ^8.12.0\n        \n            prom-client : ^15.1.3\n        \n            redis : 4.6.7\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.0\n        \n            tslib : ^2.3.0\n        \n            typeorm : ^0.3.20\n        \n            uuidv4 : 6.2.13\n        \n            winston : ^3.13.1\n        \n            winston-loki : ^6.1.2\n        \n            winston-opensearch : ^0.1.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JuridicalTypeClientEnum   (libs/.../client.enum.ts)\n                        \n                        \n                            MarketSegmentEnum   (libs/.../client.enum.ts)\n                        \n                        \n                            MsisdnCategory   (libs/.../msisdns-unlinked.enum.ts)\n                        \n                        \n                            MsisdnStatus   (libs/.../msisdns-unlinked.enum.ts)\n                        \n                        \n                            OptionalPropertyName   (libs/.../optional-property.type.ts)\n                        \n                        \n                            PassportVerificationStatus   (libs/.../passportVerificationStatus.enum.ts)\n                        \n                        \n                            Region   (libs/.../msisdns-unlinked.enum.ts)\n                        \n                        \n                            SearchAreaEnum   (libs/.../search-area.enum.ts)\n                        \n                        \n                            StateClientEnum   (libs/.../client.enum.ts)\n                        \n                        \n                            StateSubscriber   (libs/.../state.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared/src/lib/enums/client.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JuridicalTypeClientEnum\n                    \n                \n                    \n                        \n                            Перечисление типов юридических лиц для клиентов.\n\n                        \n                    \n                        \n                            \n                                 INDIVIDUAL\n                            \n                        \n                        \n                            \n                                Value : Физ. лицо\n                            \n                        \n                        \n                            \n                                 LEGAL_ENTITY\n                            \n                        \n                        \n                            \n                                Value : Юр. лицо\n                            \n                        \n                        \n                            \n                                 ENTREPRENEUR\n                            \n                        \n                        \n                            \n                                Value : ИП\n                            \n                        \n                        \n                            \n                                 PRIVATEEENTERPRISE\n                            \n                        \n                        \n                            \n                                Value : ЧП\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MarketSegmentEnum\n                    \n                \n                    \n                        \n                            Перечисление рыночных сегментов для клиентов.\n\n                        \n                    \n                        \n                            \n                                 MASSMARKET\n                            \n                        \n                        \n                            \n                                Value : Массовый рынок\n                            \n                        \n                        \n                            \n                                 DEALER\n                            \n                        \n                        \n                            \n                                Value : Дилер\n                            \n                        \n                        \n                            \n                                 VIP\n                            \n                        \n                        \n                            \n                                Value : VIP\n                            \n                        \n                        \n                            \n                                 TEST_CLIENT\n                            \n                        \n                        \n                            \n                                Value : TEST-клиент\n                            \n                        \n                        \n                            \n                                 EMPTY_CONTRACT\n                            \n                        \n                        \n                            \n                                Value : Пустой контракт\n                            \n                        \n                        \n                            \n                                 ROAMING_PARTNER\n                            \n                        \n                        \n                            \n                                Value : Роуминговый партнер\n                            \n                        \n                        \n                            \n                                 SERVICE\n                            \n                        \n                        \n                            \n                                Value : Служебный\n                            \n                        \n                        \n                            \n                                 CORPORATE_CREDIT\n                            \n                        \n                        \n                            \n                                Value : Корпоративный/Кредит\n                            \n                        \n                        \n                            \n                                 TEMPLATE_CLIENT\n                            \n                        \n                        \n                            \n                                Value : Клиент-шаблон для саморегистрации\n                            \n                        \n                        \n                            \n                                 BUSINESS_LINE\n                            \n                        \n                        \n                            \n                                Value : Линия Бизнеса\n                            \n                        \n                        \n                            \n                                 TILIDA\n                            \n                        \n                        \n                            \n                                Value : ТиЛиДа\n                            \n                        \n                        \n                            \n                                 GUIN\n                            \n                        \n                        \n                            \n                                Value : ГУИН\n                            \n                        \n                        \n                            \n                                 PAYMENT_ORGANIZATIONS\n                            \n                        \n                        \n                            \n                                Value : Организации принимающие платежи\n                            \n                        \n                        \n                            \n                                 NO_DISCONNECT\n                            \n                        \n                        \n                            \n                                Value : Не отключать\n                            \n                        \n                        \n                            \n                                 DO_NOT_DISABLE\n                            \n                        \n                        \n                            \n                                Value : DO_NOT_DISABLE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StateClientEnum\n                    \n                \n                    \n                        \n                            Перечисление состояний клиента.\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : Активен\n                            \n                        \n                        \n                            \n                                 BLOCKED\n                            \n                        \n                        \n                            \n                                Value : Блокирован\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                Value : Закрыт\n                            \n                        \n                        \n                            \n                                 SUSPENDED\n                            \n                        \n                        \n                            \n                                Value : Приостановлен\n                            \n                        \n                        \n                            \n                                 FROZEN\n                            \n                        \n                        \n                            \n                                Value : Заморожен\n                            \n                        \n                        \n                            \n                                 PREPARED\n                            \n                        \n                        \n                            \n                                Value : Подготовлен\n                            \n                        \n            \n        \n\n    libs/shared/src/lib/enums/msisdns-unlinked.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MsisdnCategory\n                    \n                \n                    \n                        \n                            Перечисление, представляющее категорию номера MSISDN.\n\n                        \n                    \n                        \n                            \n                                 REGULAR\n                            \n                        \n                        \n                            \n                                Value : Обычный\n                            \n                        \n                        \n                            \n                                 VIP\n                            \n                        \n                        \n                            \n                                Value : VIP\n                            \n                        \n                        \n                            \n                                 GOLD_1\n                            \n                        \n                        \n                            \n                                Value : Золото 1 кат\n                            \n                        \n                        \n                            \n                                 PRESTIGE\n                            \n                        \n                        \n                            \n                                Value : Престиж\n                            \n                        \n                        \n                            \n                                 RESERVE\n                            \n                        \n                        \n                            \n                                Value : Резерв\n                            \n                        \n                        \n                            \n                                 PLATINUM_1\n                            \n                        \n                        \n                            \n                                Value : Платина 1 кат\n                            \n                        \n                        \n                            \n                                 GOLD_3\n                            \n                        \n                        \n                            \n                                Value : Золото 3 кат\n                            \n                        \n                        \n                            \n                                 TECHNOLOGICAL\n                            \n                        \n                        \n                            \n                                Value : Технологический\n                            \n                        \n                        \n                            \n                                 PLATINUM_2\n                            \n                        \n                        \n                            \n                                Value : Платина 2 кат\n                            \n                        \n                        \n                            \n                                 EXCLUSIVE\n                            \n                        \n                        \n                            \n                                Value : Эксклюзивный\n                            \n                        \n                        \n                            \n                                 SILVER\n                            \n                        \n                        \n                            \n                                Value : Серебряный\n                            \n                        \n                        \n                            \n                                 GOLD_2\n                            \n                        \n                        \n                            \n                                Value : Золото 2 кат\n                            \n                        \n                        \n                            \n                                 GOLD_4\n                            \n                        \n                        \n                            \n                                Value : Золото 4 кат\n                            \n                        \n                        \n                            \n                                 PLATINUM_3\n                            \n                        \n                        \n                            \n                                Value : Платина 3 кат\n                            \n                        \n                        \n                            \n                                 PLATINUM_4\n                            \n                        \n                        \n                            \n                                Value : Платина 4 кат\n                            \n                        \n                        \n                            \n                                 SILVER_GN\n                            \n                        \n                        \n                            \n                                Value : Серебряный(гн)\n                            \n                        \n                        \n                            \n                                 EXCLUSIVE_GN\n                            \n                        \n                        \n                            \n                                Value : Эксклюзивный(гн)\n                            \n                        \n                        \n                            \n                                 TECHNOLOGICAL_ASR\n                            \n                        \n                        \n                            \n                                Value : Технологический АСР\n                            \n                        \n                        \n                            \n                                 REGULAR_GN\n                            \n                        \n                        \n                            \n                                Value : Обычный(гн)\n                            \n                        \n                        \n                            \n                                 SILVER_1\n                            \n                        \n                        \n                            \n                                Value : Серебряный 1 кат\n                            \n                        \n                        \n                            \n                                 SILVER_2\n                            \n                        \n                        \n                            \n                                Value : Серебряный 2 кат\n                            \n                        \n                        \n                            \n                                 SELF_ACTIVATION\n                            \n                        \n                        \n                            \n                                Value : Для самоактивации\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MsisdnStatus\n                    \n                \n                    \n                        \n                            Перечисление, представляющее статус номера MSISDN.\n\n                        \n                    \n                        \n                            \n                                 UNAVAILABLE\n                            \n                        \n                        \n                            \n                                Value : Не доступен\n                            \n                        \n                        \n                            \n                                 FREE\n                            \n                        \n                        \n                            \n                                Value : Свободен\n                            \n                        \n                        \n                            \n                                 LINKED\n                            \n                        \n                        \n                            \n                                Value : Связан\n                            \n                        \n                        \n                            \n                                 IN_USE\n                            \n                        \n                        \n                            \n                                Value : Используется\n                            \n                        \n                        \n                            \n                                 TRASH\n                            \n                        \n                        \n                            \n                                Value : Отстой\n                            \n                        \n                        \n                            \n                                 RESERVED\n                            \n                        \n                        \n                            \n                                Value : Зарезервирован\n                            \n                        \n                        \n                            \n                                 LINKING\n                            \n                        \n                        \n                            \n                                Value : Связывается\n                            \n                        \n                        \n                            \n                                 OCCUPIED\n                            \n                        \n                        \n                            \n                                Value : Номер занят\n                            \n                        \n                        \n                            \n                                 LINKING_TO_DEVICE\n                            \n                        \n                        \n                            \n                                Value : Связывается с аппаратом\n                            \n                        \n                        \n                            \n                                 RESERVED_FOR_SIM\n                            \n                        \n                        \n                            \n                                Value : Зарезервирован для заказа SIM\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Region\n                    \n                \n                    \n                        \n                            Перечисление, представляющее регион.\n\n                        \n                    \n                        \n                            \n                                 SVERDLOVSK\n                            \n                        \n                        \n                            \n                                Value : Свердловская область\n                            \n                        \n                        \n                            \n                                 ALL_RUSSIA\n                            \n                        \n                        \n                            \n                                Value : Вся Россия\n                            \n                        \n                        \n                            \n                                 KURGAN\n                            \n                        \n                        \n                            \n                                Value : Курганская область\n                            \n                        \n                        \n                            \n                                 YANAO\n                            \n                        \n                        \n                            \n                                Value : ЯНАО\n                            \n                        \n                        \n                            \n                                 TYUMEN\n                            \n                        \n                        \n                            \n                                Value : Тюменская область\n                            \n                        \n            \n        \n\n    libs/shared/src/lib/types/optional-property.type.ts\n    \n        \n            \n                \n                    \n                        \n                        OptionalPropertyName\n                    \n                \n                    \n                        \n                            Перечисление OptionalPropertyName описывает доступные опциональные параметры для вывода поля.\n\n                        \n                    \n                        \n                            \n                                 M2M\n                            \n                        \n                        \n                            \n                                Value : M2M\n                            \n                        \n                        \n                            \n                                 FIO\n                            \n                        \n                        \n                            \n                                Value : Ф.И.О\n                            \n                        \n                        \n                            \n                                 budgetOrganization\n                            \n                        \n                        \n                            \n                                Value : Бюджетная организация\n                            \n                        \n                        \n                            \n                                 notActivatedEsia\n                            \n                        \n                        \n                            \n                                Value : Требуется сверка данных на ГосУслугах, обратитесь к менеджеру.\n                            \n                        \n            \n        \n\n    libs/shared/src/lib/enums/passportVerificationStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PassportVerificationStatus\n                    \n                \n                    \n                        \n                            Enom представляет возможный статус проверки паспорта.\n\n                        \n                    \n                        \n                            \n                                 NOT_SENT\n                            \n                        \n                        \n                            \n                                Value : NOT_SENT\n                            \n                        \n                        \n                            \n                                 AWAITING_VERIFICATION\n                            \n                        \n                        \n                            \n                                Value : AWAITING_VERIFICATION\n                            \n                        \n                        \n                            \n                                 REQUEST_CREATED\n                            \n                        \n                        \n                            \n                                Value : REQUEST_CREATED\n                            \n                        \n                        \n                            \n                                 FAILED_TO_SEND\n                            \n                        \n                        \n                            \n                                Value : FAILED_TO_SEND\n                            \n                        \n                        \n                            \n                                 UNDER_REVIEW\n                            \n                        \n                        \n                            \n                                Value : UNDER_REVIEW\n                            \n                        \n                        \n                            \n                                 INFO_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : INFO_NOT_FOUND\n                            \n                        \n                        \n                            \n                                 INVALID\n                            \n                        \n                        \n                            \n                                Value : INVALID\n                            \n                        \n                        \n                            \n                                 VALID\n                            \n                        \n                        \n                            \n                                Value : VALID\n                            \n                        \n            \n        \n\n    libs/shared/src/lib/enums/search-area.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SearchAreaEnum\n                    \n                \n                    \n                        \n                            Перечисление, представляющее области поиска для пользователя.\n\n                        \n                    \n                        \n                            \n                                 FIO\n                            \n                        \n                        \n                            \n                                Value : FIO\n                            \n                        \n                        \n                            \n                                 TITLE\n                            \n                        \n                        \n                            \n                                Value : TITLE\n                            \n                        \n                        \n                            \n                                 PROCESSES\n                            \n                        \n                        \n                            \n                                Value : PROCESSES\n                            \n                        \n                        \n                            \n                                 SERVICES\n                            \n                        \n                        \n                            \n                                Value : SERVICES\n                            \n                        \n                        \n                            \n                                 TARIFFS\n                            \n                        \n                        \n                            \n                                Value : TARIFFS\n                            \n                        \n                        \n                            \n                                 SUBSCRIBER_NUMBER\n                            \n                        \n                        \n                            \n                                Value : SUBSCRIBER_NUMBER\n                            \n                        \n                        \n                            \n                                 MSISDN\n                            \n                        \n                        \n                            \n                                Value : MSISDN\n                            \n                        \n                        \n                            \n                                 PASSPORT\n                            \n                        \n                        \n                            \n                                Value : PASSPORT\n                            \n                        \n                        \n                            \n                                 ACCOUNT_NUMBER\n                            \n                        \n                        \n                            \n                                Value : ACCOUNT_NUMBER\n                            \n                        \n                        \n                            \n                                 CONTRACT_NUMBER\n                            \n                        \n                        \n                            \n                                Value : CONTRACT_NUMBER\n                            \n                        \n                        \n                            \n                                 DGN\n                            \n                        \n                        \n                            \n                                Value : DGN\n                            \n                        \n                        \n                            \n                                 ICC\n                            \n                        \n                        \n                            \n                                Value : ICC\n                            \n                        \n            \n        \n\n    libs/shared/src/lib/types/state.type.ts\n    \n        \n            \n                \n                    \n                        \n                        StateSubscriber\n                    \n                \n                    \n                        \n                            Перечисление StateSubscriber используется для описания различных состояний абонента.\n\n                        \n                    \n                        \n                            \n                                 suspended\n                            \n                        \n                        \n                            \n                                Value : Приостановлен\n                            \n                        \n                        \n                            \n                                 closed\n                            \n                        \n                        \n                            \n                                Value : Закрыт\n                            \n                        \n                        \n                            \n                                 active\n                            \n                        \n                        \n                            \n                                Value : Активен\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createEnumMap   (libs/.../generators.ts)\n                        \n                        \n                            mapJuridicalType   (libs/.../generators.ts)\n                        \n                        \n                            mapMarketSegment   (libs/.../generators.ts)\n                        \n                        \n                            mapStateClient   (libs/.../generators.ts)\n                        \n                        \n                            PaginatedResponseType   (libs/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/data-loader/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/journalization/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/graphql/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/shared/src/lib/technical/generators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createEnumMap\n                        \n                    \n                \n            \n            \n                \ncreateEnumMap(enumObj: T)\n                \n            \n\n\n\n\n            \n                \n                        Генерация объекта значений на основе перечислений.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                enumObj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nОбъект перечислений (тип T).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IEnum[]\n\n                        \n                            \n                                Массив объектов, где каждый объект имеет свойства value и label для соответствующего ключа и значения.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapJuridicalType\n                        \n                    \n                \n            \n            \n                \nmapJuridicalType(type: string)\n                \n            \n\n\n\n\n            \n                \n                        Преобразует строковое значение юридического типа в соответствующий тип перечисления.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтроковое значение юридического типа (например, 'Физ. лицо', 'Юр. лицо', 'ИП', 'ЧП').\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         JuridicalTypeClientEnum\n\n                        \n                            \n                                Тип юридического клиента из перечислений JuridicalTypeClientEnum.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapMarketSegment\n                        \n                    \n                \n            \n            \n                \nmapMarketSegment(type: string)\n                \n            \n\n\n\n\n            \n                \n                        Преобразует строковое значение рыночного сегмента в соответствующий тип перечисления.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтроковое значение рыночного сегмента (например, 'Массовый рынок', 'Дилер', 'VIP', 'TEST-клиент').\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MarketSegmentEnum\n\n                        \n                            \n                                Тип рыночного сегмента из перечисления MarketSegmentEnum.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapStateClient\n                        \n                    \n                \n            \n            \n                \nmapStateClient(type: string)\n                \n            \n\n\n\n\n            \n                \n                        Преобразует строковое значение состояния клиента в соответствующий тип перечисления.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nСтроковое значение состояния клиента (например, 'Активен', 'Блокирован', 'Закрыт').\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StateClientEnum\n\n                        \n                            \n                                Тип состояния клиента из перечисления StateClientEnum.\n\n                            \n                \n            \n        \n    \n    libs/shared/src/lib/dto/helpersGql/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginatedResponseType\n                        \n                    \n                \n            \n            \n                \nPaginatedResponseType(classRef: ClassType)\n                \n            \n\n\n\n\n            \n                \n                        PaginatedResponseType создает абстрактный класс, предназначенный для представления пагинированных данных в GraphQL.\nclassRef - тип класса, который является частью пагинированного ответа (например, ClientDataDTO).\nАбстрактный класс PaginatedResponseTypeClass содержит массив объектов типа T (данные) и целое число (total),\nуказывающее общее количество записей. Это полезно для отображения больших данных с поддержкой пагинации.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                classRef\n                                            \n                                                            ClassType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nStart the app\nGRAPHDOC\nGenerate documentation from live endpoint:\n\ngraphdoc -e http://localhost:3010/graphql -o ./doc/schema\nyarn graphdoc -e http://localhost:3010/graphql -o ./doc/schema --force\n\nGenerate documentation from IDL file\n\ngraphdoc -s ./schema.gql -o ./doc/schema\n\nCOMPODOC\n\nГенерация статики\nyarn compodoc -p tsconfig.compodoc.json --watch\nЗапуск на порту\nyarn compodoc src -s -r 8085\n\nDEPLOY\nyarn\nзпросить env\ndocker build -f Dockerfile.base -t wcb-image:nx-base .\ndocker build -f Dockerfile.deps -t wcb-image:deps .\ndocker compose -f docker-compose.qa.yml up --build -d\nодин образ\ndocker compose -f docker-compose.qa.yml up  --build -d --no-deps\nПакетный кэш https://verdaccio.org/docs/docker/\ndocker pull verdaccio/verdaccio:4\ndocker run -d --name verdaccio -p 4873:4873 verdaccio/verdaccio\nLocal run\nyarn\nзпросить env\ndocker build -f Dockerfile.base -t wcb-image:nx-base .\ndocker build -f Dockerfile.deps -t wcb-image:deps .\ndocker compose -f docker-compose.local.yml up --build -d\nyarn nx serve journalization\nyarn nx serve data-loader\nyarn nx serve graphql\nJest\nyarn jest\nyarn nx test apime-integration\nyarn nx test search-clients\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApimeIntegrationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GqlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JournalizatingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JournalizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeycloakIntegrationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeycloakModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsAndJournalsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PromModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RabbitModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchClientsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchUnlinkedMsisdnsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApimeIntegrationModule\n\n\n\ncluster_ApimeIntegrationModule_exports\n\n\n\ncluster_ApimeIntegrationModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_imports\n\n\n\ncluster_ClientModule_exports\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_DlModule\n\n\n\ncluster_DlModule_imports\n\n\n\ncluster_DlModule_providers\n\n\n\ncluster_GqlModule\n\n\n\ncluster_GqlModule_imports\n\n\n\ncluster_GqlModule_providers\n\n\n\ncluster_JournalizatingModule\n\n\n\ncluster_JournalizatingModule_exports\n\n\n\ncluster_JournalizatingModule_providers\n\n\n\ncluster_JournalizationModule\n\n\n\ncluster_KeycloakIntegrationModule\n\n\n\ncluster_KeycloakIntegrationModule_exports\n\n\n\ncluster_KeycloakIntegrationModule_providers\n\n\n\ncluster_KeycloakModule\n\n\n\ncluster_KeycloakModule_exports\n\n\n\ncluster_KeycloakModule_providers\n\n\n\ncluster_LogsAndJournalsModule\n\n\n\ncluster_LogsAndJournalsModule_exports\n\n\n\ncluster_LogsAndJournalsModule_providers\n\n\n\ncluster_RabbitModule\n\n\n\ncluster_RabbitModule_exports\n\n\n\ncluster_RabbitModule_providers\n\n\n\ncluster_SearchClientsModule\n\n\n\ncluster_SearchClientsModule_exports\n\n\n\ncluster_SearchClientsModule_providers\n\n\n\ncluster_SearchUnlinkedMsisdnsModule\n\n\n\ncluster_SearchUnlinkedMsisdnsModule_exports\n\n\n\ncluster_SearchUnlinkedMsisdnsModule_providers\n\n\n\n\nApimeConnectionGuard \n\nApimeConnectionGuard \n\n\n\nApimeIntegrationService \n\nApimeIntegrationService \n\n\n\nSearchApimeService \n\nSearchApimeService \n\n\n\nApimeIntegrationModule\n\nApimeIntegrationModule\n\nApimeConnectionGuard  -->\n\nApimeIntegrationModule->ApimeConnectionGuard \n\n\n\nApimeIntegrationService  -->\n\nApimeIntegrationModule->ApimeIntegrationService \n\n\n\nSearchApimeService  -->\n\nApimeIntegrationModule->SearchApimeService \n\n\n\n\n\nDlModule\n\nDlModule\n\nDlModule -->\n\nApimeIntegrationModule->DlModule\n\n\n\n\n\nApimeIntegrationService\n\nApimeIntegrationService\n\nApimeIntegrationModule -->\n\nApimeIntegrationService->ApimeIntegrationModule\n\n\n\n\n\nSearchApimeService\n\nSearchApimeService\n\nApimeIntegrationModule -->\n\nSearchApimeService->ApimeIntegrationModule\n\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nGqlModule\n\nGqlModule\n\nGqlModule -->\n\nAuthModule->GqlModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nKeycloakModule\n\nKeycloakModule\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nKeycloakModule->ClientModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nKeycloakModule->CoreModule\n\n\n\n\n\nKeycloakService \n\nKeycloakService \n\nKeycloakService  -->\n\nKeycloakModule->KeycloakService \n\n\n\n\n\nKeycloakTokenGuard \n\nKeycloakTokenGuard \n\nKeycloakTokenGuard  -->\n\nKeycloakModule->KeycloakTokenGuard \n\n\n\n\n\nLogsAndJournalsModule\n\nLogsAndJournalsModule\n\nClientModule -->\n\nLogsAndJournalsModule->ClientModule\n\n\n\n\n\nSearchClientsModule\n\nSearchClientsModule\n\nSearchClientsModule -->\n\nLogsAndJournalsModule->SearchClientsModule\n\n\n\n\n\nSearchUnlinkedMsisdnsModule\n\nSearchUnlinkedMsisdnsModule\n\nSearchUnlinkedMsisdnsModule -->\n\nLogsAndJournalsModule->SearchUnlinkedMsisdnsModule\n\n\n\nGqlModule -->\n\nLogsAndJournalsModule->GqlModule\n\n\n\n\n\nAppLoggerLoki \n\nAppLoggerLoki \n\nAppLoggerLoki  -->\n\nLogsAndJournalsModule->AppLoggerLoki \n\n\n\n\n\nLogsAndJournalsService \n\nLogsAndJournalsService \n\nLogsAndJournalsService  -->\n\nLogsAndJournalsModule->LogsAndJournalsService \n\n\n\n\n\nRabbitModule\n\nRabbitModule\n\nLogsAndJournalsModule -->\n\nRabbitModule->LogsAndJournalsModule\n\n\n\nClientModule -->\n\nRabbitModule->ClientModule\n\n\n\nCoreModule -->\n\nRabbitModule->CoreModule\n\n\n\nSearchClientsModule -->\n\nRabbitModule->SearchClientsModule\n\n\n\nSearchUnlinkedMsisdnsModule -->\n\nRabbitModule->SearchUnlinkedMsisdnsModule\n\n\n\n\n\nRabbitMQService \n\nRabbitMQService \n\nRabbitMQService  -->\n\nRabbitModule->RabbitMQService \n\n\n\n\n\nClientResolver \n\nClientResolver \n\nClientResolver  -->\n\nClientModule->ClientResolver \n\n\n\n\n\nClientService \n\nClientService \n\nClientService  -->\n\nClientModule->ClientService \n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\nGqlModule -->\n\nCoreModule->GqlModule\n\n\n\n\n\nKeycloakIntegrationModule\n\nKeycloakIntegrationModule\n\nDlModule -->\n\nKeycloakIntegrationModule->DlModule\n\n\n\n\n\nKeycloakIntegrationService \n\nKeycloakIntegrationService \n\nKeycloakIntegrationService  -->\n\nKeycloakIntegrationModule->KeycloakIntegrationService \n\n\n\n\n\nDLService\n\nDLService\n\nDlModule -->\n\nDLService->DlModule\n\n\n\nGqlModule -->\n\nSearchClientsModule->GqlModule\n\n\n\n\n\nSearchAreasService \n\nSearchAreasService \n\nSearchAreasService  -->\n\nSearchClientsModule->SearchAreasService \n\n\n\n\n\nSearchClientsService \n\nSearchClientsService \n\nSearchClientsService  -->\n\nSearchClientsModule->SearchClientsService \n\n\n\nGqlModule -->\n\nSearchUnlinkedMsisdnsModule->GqlModule\n\n\n\n\n\nSearchUnlinkedMsisdnsResolver \n\nSearchUnlinkedMsisdnsResolver \n\nSearchUnlinkedMsisdnsResolver  -->\n\nSearchUnlinkedMsisdnsModule->SearchUnlinkedMsisdnsResolver \n\n\n\n\n\nSearchUnlinkedMsisdnsService \n\nSearchUnlinkedMsisdnsService \n\nSearchUnlinkedMsisdnsService  -->\n\nSearchUnlinkedMsisdnsModule->SearchUnlinkedMsisdnsService \n\n\n\n\n\nAppService\n\nAppService\n\nGqlModule -->\n\nAppService->GqlModule\n\n\n\n\n\nJournalizatingService \n\nJournalizatingService \n\n\n\nJournalizatingModule\n\nJournalizatingModule\n\nJournalizatingService  -->\n\nJournalizatingModule->JournalizatingService \n\n\n\n\n\nJournalizationModule\n\nJournalizationModule\n\nJournalizationModule -->\n\nJournalizatingModule->JournalizationModule\n\n\n\n\n\nJournalizatingService\n\nJournalizatingService\n\nJournalizatingModule -->\n\nJournalizatingService->JournalizatingModule\n\n\n\n\n\nKeycloakIntegrationService\n\nKeycloakIntegrationService\n\nKeycloakIntegrationModule -->\n\nKeycloakIntegrationService->KeycloakIntegrationModule\n\n\n\n\n\nKeycloakService\n\nKeycloakService\n\nKeycloakModule -->\n\nKeycloakService->KeycloakModule\n\n\n\n\n\nAppLoggerLoki\n\nAppLoggerLoki\n\nLogsAndJournalsModule -->\n\nAppLoggerLoki->LogsAndJournalsModule\n\n\n\n\n\nLogsAndJournalsService\n\nLogsAndJournalsService\n\nLogsAndJournalsModule -->\n\nLogsAndJournalsService->LogsAndJournalsModule\n\n\n\n\n\nRabbitMQService\n\nRabbitMQService\n\nRabbitModule -->\n\nRabbitMQService->RabbitModule\n\n\n\n\n\nSearchService\n\nSearchService\n\nRabbitModule -->\n\nSearchService->RabbitModule\n\n\n\n\n\nSearchAreasService\n\nSearchAreasService\n\nSearchClientsModule -->\n\nSearchAreasService->SearchClientsModule\n\n\n\n\n\nSearchClientsService\n\nSearchClientsService\n\nSearchClientsModule -->\n\nSearchClientsService->SearchClientsModule\n\n\n\n\n\nSearchUnlinkedMsisdnsService\n\nSearchUnlinkedMsisdnsService\n\nSearchUnlinkedMsisdnsModule -->\n\nSearchUnlinkedMsisdnsService->SearchUnlinkedMsisdnsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    37 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    78 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : web clients backend\n        \n            License : MIT\n        \n            Repository : https://gitlab.corp.motiv/web/motiv-internal-projects/webclients-backend.git\n        \n            Author : PonomarevDaniil \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ClassType   (libs/.../class-type.ts)\n                        \n                        \n                            EA   (libs/.../mine.type.ts)\n                        \n                        \n                            JuridicalType   (libs/.../juridical.type.ts)\n                        \n                        \n                            NN   (libs/.../mine.type.ts)\n                        \n                        \n                            SegmentType   (libs/.../segment.type.ts)\n                        \n                        \n                            SN   (libs/.../mine.type.ts)\n                        \n                        \n                            StateType   (libs/.../state.type.ts)\n                        \n                        \n                            UserType   (libs/.../optional-property.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/shared/src/lib/dto/helpersGql/class-type.ts\n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                    Тип ClassType описывает конструктор класса T.\nОн требует нового экземпляра класса, принимающего аргументы любого типа (any[]),\nи возвращает экземпляр класса T. Используется для определения типов,\nпредставляющих конкретные классы в обобщенных типах.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    libs/shared/src/lib/types/mine.type.ts\n    \n    \n        \n            \n                \n                    \n                    EA\n                \n            \n            \n                \n                    Тип EA определяет пустой массив.\n\n                \n            \n            \n                \n                        []\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NN\n                \n            \n            \n                \n                    Тип NN определяет значение, которое может быть числом или null.\n\n                \n            \n            \n                \n                        number | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SN\n                \n            \n            \n                \n                    Тип SN определяет значение, которое может быть строкой или null.\n\n                \n            \n            \n                \n                        string | null\n\n                \n            \n        \n    \n    libs/shared/src/lib/types/client/juridical.type.ts\n    \n    \n        \n            \n                \n                    \n                    JuridicalType\n                \n            \n            \n                \n                    Типы юридического лица.\n\n'Физ. лицо': Физическое лицо.\n'Юр. лицо': Юридическое лицо.\n'ИП': Индивидуальный предприниматель.\n'ЧП': Частное предприятие.\n\n\n                \n            \n            \n                \n                        \"Физ. лицо\" | \"Юр. лицо\" | \"ИП\" | \"ЧП\"\n\n                \n            \n        \n    \n    libs/shared/src/lib/types/client/segment.type.ts\n    \n    \n        \n            \n                \n                    \n                    SegmentType\n                \n            \n            \n                \n                    Типы сегментов клиентов.\n\n'Массовый рынок': Обычные клиенты, не относящиеся к специализированным сегментам.\n'Дилер': Дилерские клиенты.\n'VIP': Ключевые клиенты, заслуживающие особого внимания.\n'TEST-клиент': Клиент на тестировании.\n'Пустой контракт': Контракт без прикрепленных данных клиента.\n'Роуминговый партнер': Партнеры по роумингу.\n'Служебный': Внутренние или служебные клиенты компании.\n'Корпоративный/Кредит': Корпоративные клиенты или клиенты с кредитной линией.\n'Клиент-шаблон для саморегистрации': Шаблон для саморегистрации новых клиентов.\n'Линия Бизнеса': Клиенты определенного направления бизнеса.\n'ТиЛиДа': Клиенты с определенным видом услуг.\n'ГУИН': Клиенты с уникальными идентификационными номерами.\n'Организации принимающие платежи': Организации, принимающие платежи.\n'Не отключать': Сегмент клиентов, которые не могут быть отключены.\n\n\n                \n            \n            \n                \n                        \"Массовый рынок\" | \"Дилер\" | \"VIP\" | \"TEST-клиент\" | \"Пустой контракт\" | \"Роуминговый партнер\" | \"Служебный\" | \"Корпоративный/Кредит\" | \"Клиент-шаблон для саморегистрации\" | \"Линия Бизнеса\" | \"ТиЛиДа\" | \"ГУИН\" | \"Организации принимающие платежи\" | \"Не отключать\"\n\n                \n            \n        \n    \n    libs/shared/src/lib/types/client/state.type.ts\n    \n    \n        \n            \n                \n                    \n                    StateType\n                \n            \n            \n                \n                    Типы состояний клиента.\n\n'Активен': Клиент, который в текущий момент активно использует свои услуги.\n'Блокирован': Клиент, чьи услуги приостановлены или ограничены.\n'Закрыт': Клиент, который был удален или закрыт.\n'Приостановлен': Клиент, чьи услуги временно приостановлены.\n'Заморожен': Клиент, чьи услуги на некоторое время заморожены для предотвращения изменений.\n'Подготовлен': Клиент, который находится на стадии подготовки к активному использованию.\n\n\n                \n            \n            \n                \n                        \"Активен\" | \"Блокирован\" | \"Закрыт\" | \"Приостановлен\" | \"Заморожен\" | \"Подготовлен\"\n\n                \n            \n        \n    \n    libs/shared/src/lib/types/optional-property.type.ts\n    \n    \n        \n            \n                \n                    \n                    UserType\n                \n            \n            \n                \n                    Тип UserType описывает возможные значения типа пользователя.\n\n                \n            \n            \n                \n                        \"M2M\" | \"Ф.И.О\" | \"Бюджетная организация\" | string\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __TEARDOWN_MESSAGE__   (apps/.../global-setup.ts)\n                        \n                        \n                            __TEARDOWN_MESSAGE__   (apps/.../global-setup.ts)\n                        \n                        \n                            __TEARDOWN_MESSAGE__   (apps/.../global-setup.ts)\n                        \n                        \n                            CREATE_LOG   (libs/.../rmq_journal.ts)\n                        \n                        \n                            errorMessages   (libs/.../http-exceptions-messages.ts)\n                        \n                        \n                            escapePercent   (libs/.../generators.ts)\n                        \n                        \n                            EXCEPTIONMSGQL   (libs/.../http-exceptions-messages.ts)\n                        \n                        \n                            generateDocumentPassport   (libs/.../generators.ts)\n                        \n                        \n                            generatePaginationArray   (libs/.../generators.ts)\n                        \n                        \n                            generateStringFromDate   (libs/.../generators.ts)\n                        \n                        \n                            generateTokenContext   (libs/.../generators.ts)\n                        \n                        \n                            GET_ALL   (libs/.../rmq.ts)\n                        \n                        \n                            GET_CLIENT   (libs/.../rmq.ts)\n                        \n                        \n                            GET_LOGS   (libs/.../rmq_journal.ts)\n                        \n                        \n                            getHeaders   (libs/.../generators.ts)\n                        \n                        \n                            graphqlRequestsTotal   (apps/.../graphql-metrics.middleware.ts)\n                        \n                        \n                            keycloakMethods   (libs/.../keycloak-methods.ts)\n                        \n                        \n                            METRICS_PLUGIN_KEY   (libs/.../metrics.module.ts)\n                        \n                        \n                            metricsClient   (apps/.../graphql-metrics.middleware.ts)\n                        \n                        \n                            metricsMiddleware   (apps/.../graphql-metrics.middleware.ts)\n                        \n                        \n                            mockContext   (libs/.../generators.ts)\n                        \n                        \n                            mockCreateLog   (libs/.../logs-journals.service.ts)\n                        \n                        \n                            NOTIFICATION_EMAIL_NEW_USER   (libs/.../kafka.ts)\n                        \n                        \n                            prefix   (libs/.../api-methods.ts)\n                        \n                        \n                            SEARCH_CLIENT_ACCOUNT_NUMBER   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_BY_FIO   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_BY_PROCESSES   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_BY_SERVICES   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_BY_TARIFFS   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_BY_TITLE   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_CONTRACT_NUMBER   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_DGN   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_ICC   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_MSISDN   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_PASSPORT   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_CLIENT_SUBSCRIBER_NUMBER   (libs/.../rmq.ts)\n                        \n                        \n                            SEARCH_UNLINKED_MSISDNS   (libs/.../rmq.ts)\n                        \n                        \n                            searchAreaLabels   (libs/.../search-area.enum.ts)\n                        \n                        \n                            StateSubscriberArgs   (libs/.../state.type.ts)\n                        \n                        \n                            TRACING_PLUGIN_KEY   (libs/.../metrics.module.ts)\n                        \n                        \n                            UserTypeArg   (libs/.../optional-property.type.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                        \n                            webClientsApiMethods   (libs/.../api-methods.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/data-loader-e2e/src/support/global-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __TEARDOWN_MESSAGE__\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n    apps/graphql-e2e/src/support/global-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __TEARDOWN_MESSAGE__\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n    apps/journalization-e2e/src/support/global-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __TEARDOWN_MESSAGE__\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n    libs/shared/src/lib/technical/message-broker/rmq_journal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CREATE_LOG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'create_log'\n                    \n                \n\n            \n                \n                    Команда CREATE_LOG используется для создания нового логирования.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_LOGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'get_logs'\n                    \n                \n\n            \n                \n                    Команда GET_LOGS используется для получение лога.\n\n                \n            \n\n        \n    \n\n    libs/shared/src/lib/technical/errors/http-exceptions-messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  files: {\n    errorLoadToMinio: ' Ошибка при загрузке файла в хранилище',\n  },\n}\n                    \n                \n\n            \n                \n                    Константа для хранения сообщений об ошибках.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXCEPTIONMSGQL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apime: {\n    errorAuthApiMe: 'Не могу авторизаваиться в APIME',\n    errorHealthApiMe: 'Нет подключения к ApiME',\n  },\n  /* Авторизация  */\n  errorToken: 'Ошибка проверки токена.',\n  errorTokenTime: 'Токен истек.',\n  /* Авторизация  */\n}\n                    \n                \n\n            \n                \n                    Константа для хранения сообщений об ошибках.\n\n                \n            \n\n        \n    \n\n    libs/shared/src/lib/technical/generators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        escapePercent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (msisdn: string): string => {\n  return msisdn.replace(/%/g, '%25');\n}\n                    \n                \n\n            \n                \n                    Экранирование символов % в строке, заменяя их на %25.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDocumentPassport\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  passport: string\n): Promise => {\n  return {\n    typeId: 1,\n    series: passport.slice(0, 4),\n    number: passport.slice(4, 10),\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePaginationArray\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  array: any,\n  paginationPage: number,\n  paginationPerPage: number\n) => {\n  const total = array.length;\n  const startIndex = (paginationPage - 1) * paginationPerPage;\n  const endIndex = startIndex + paginationPerPage;\n  const arraySlice = array.slice(startIndex, endIndex);\n  return {\n    arraySlice,\n    total,\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateStringFromDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  dateString: string\n): Promise => {\n  const date = new Date(dateString);\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}.${month}.${year}`;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateTokenContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (context: any): Promise => {\n  const token = context.req.headers.authorization?.replace('Bearer ', '');\n  return token;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (payload: ISearchClientPayload) => {\n  return {\n    'Content-Type': 'application/json',\n    TRACE_ID: payload.tokenInput.traceId?.traceID || 'not-trace',\n    Authorization: `Bearer ${payload.tokenInput.access_token}`,\n  };\n}\n                    \n                \n\n            \n                \n                    Генерирует заголовки для HTTP-запросов на основе переданных данных клиента.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockContext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  req: {\n    headers: {\n      authorization:\n        'Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI0X3owZE02MlM0WnFEcURzOTBCa0V1ZnRQbkhURV94TEhtbVJNaE9jTFY0In0.eyJleHAiOjE3MzE5MzI1NjcsImlhdCI6MTczMTkzMjI2NywianRpIjoiZjViZjZhNDEtYmYzYS00ODc4LTg1NjUtNDAzYjBmNjIzZTEwIiwiaXNzIjoiaHR0cHM6Ly93ZWItY2xpZW50cy1rZXljbG9hay50ZXN0LmNvcnAubW90aXYvYXV0aC9yZWFsbXMvd2MiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiMDk0N2JhM2ItMThjYy00MGUyLWI1NzEtYmZjMWEyNmUyOTAyIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoid2MiLCJzaWQiOiJjZGNkZDdlMy02YjRiLTQ3OWItOTdiOS1hZGM2MmJhNjhkYmIiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbIioiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iLCJkZWZhdWx0LXJvbGVzLXdjIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsid2MiOnsicm9sZXMiOlsid2Nfc2hvdyIsImJhbl9zZXJ2X3Byb21vIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6InByb2ZpbGUgZW1haWwiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaW52b2ljZV9sb2dpbiI6ImFzcl92bGFkIiwibmFtZSI6ItCS0LvQsNC0INCR0YPQu9GD0YjQtdCyIiwicHJlZmVycmVkX3VzZXJuYW1lIjoidmxhZCIsImdpdmVuX25hbWUiOiLQktC70LDQtCIsImZhbWlseV9uYW1lIjoi0JHRg9C70YPRiNC10LIiLCJlbWFpbCI6ImJ1bHVzaGV2dmFAaXRlYW15LnBybyJ9.dvg5IZrTOT24ZHYuxaKPzpOStrDPpEuO2JlVDH5TcUPoGfEP0RTPmHbND0oP9Fn815K8qrbYkMCkrhTFkJb9oWYW9oYjP6MQzQpOEWoqlqUyO7Aky-10_fSf2BNDTFA20nJM8hjzYlRwWHjNOgASTCGZ9O7mHyQe-CDGEpETh6eiISonpZCmNMxVHfANwNM-H7bzuMufZIOvWPIEhTw42GBf0rTIEDVQ-Zd9Sc_S9EXAa1tLRZfJKBJsKLGjB5jW00wwvyvXjoraUxRj4QXTs5KW_KiCll0xiJp6x1E-p2SLzs4okqixRGKQ83tBjj18tn4VYMHY_p50LVlDVtb6AA',\n    },\n  },\n}\n                    \n                \n\n            \n                \n                    Mock контекст для тестирования, включающий заголовки HTTP-запроса.\n\n                \n            \n\n        \n    \n\n    libs/shared/src/lib/technical/message-broker/rmq.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GET_ALL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'get_all'\n                    \n                \n\n            \n                \n                    Константа GET_ALL используется для получения всех данных.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'get_client'\n                    \n                \n\n            \n                \n                    Константа GET_CLIENT используется для получения данных конкретного клиента.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_ACCOUNT_NUMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_account_number'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_ACCOUNT_NUMBER используется для поиска клиентов по номеру счета.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_BY_FIO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_fio'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_BY_FIO используется для поиска клиентов по фамилии, имени и отчеству.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_BY_PROCESSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_processes'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_BY_PROCESSES используется для поиска клиентов по связанным процессам.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_BY_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_services'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_BY_SERVICES используется для поиска клиентов по предоставляемым услугам.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_BY_TARIFFS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_tariffs'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_BY_TARIFFS используется для поиска клиентов по тарифам.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_BY_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_title'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_BY_TITLE используется для поиска клиентов по названию.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_CONTRACT_NUMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_contract_number'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_CONTRACT_NUMBER используется для поиска клиентов по контрактному номеру.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_DGN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_dgn'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_DGN используется для поиска клиентов по номеру DGN.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_ICC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_icc'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_ICC используется для поиска клиентов по ICC.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_MSISDN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_msisdn'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_MSISDN используется для поиска клиентов по MSISDN.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_PASSPORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_passport'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_PASSPORT используется для поиска клиентов по номеру паспорта.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_CLIENT_SUBSCRIBER_NUMBER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_client_by_subscriber_number'\n                    \n                \n\n            \n                \n                    Константа SEARCH_CLIENT_SUBSCRIBER_NUMBER используется для поиска клиентов по абонентскому номеру.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEARCH_UNLINKED_MSISDNS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search_unlinked_msisdns'\n                    \n                \n\n            \n                \n                    Константа SEARCH_UNLINKED_MSISDNS используется для поиска не связанных MSISDN.\n\n                \n            \n\n        \n    \n\n    apps/graphql/src/graphql-metrics.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        graphqlRequestsTotal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new promClient.Counter({\n  name: 'graphql_requests_total',\n  help: 'Total GraphQL requests',\n  labelNames: ['method', 'path', 'status'],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricsClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : promClient\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metricsMiddleware\n                        \n                    \n                \n            \n                \n                    \n                        Default value : promBundle({\n  includeMethod: true,\n  promClient: {\n    collectDefaultMetrics: {},\n  },\n})\n                    \n                \n\n\n        \n    \n\n    libs/keycloak/src/lib/keycloak-methods.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        keycloakMethods\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  introspect: `/protocol/openid-connect/token/introspect`,\n}\n                    \n                \n\n\n        \n    \n\n    libs/metrics/src/lib/metrics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        METRICS_PLUGIN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'METRICS_PLUGIN_KEY'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TRACING_PLUGIN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TRACING_PLUGIN_KEY'\n                    \n                \n\n\n        \n    \n\n    libs/logs/src/lib/logs-journals.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockCreateLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICreateJournal\n\n                    \n                \n                \n                    \n                        Default value : {\n  service: 'Client',\n  admin: 'admin',\n  text: `Запросил клиентов на стороне сервера`,\n  additionalData: {\n    id: '7c62f2db-098f-462b-a6b1-bb1024d4f0d1',\n    name: 'Какая-то хрень тест 123 iqjsi авыавыав',\n    sortOrder: 3,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    libs/shared/src/lib/technical/message-broker/kafka.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOTIFICATION_EMAIL_NEW_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'notification_email_new_user'\n                    \n                \n\n            \n                \n                    ЭТО ПРИМЕР ДЛЯ БУДУЩИХ НЕЙМИНГОВ\nКонстанта NOTIFICATION_EMAIL_NEW_USER используется для отправки уведомлений на email новым пользователям.\n\n                \n            \n\n        \n    \n\n    libs/apime-integration/src/lib/other/api-methods.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  api_v1: '/v1', // Путь к версии API v1\n  api_v1_search: '/v1/search', // Путь к разделу поиска API v1\n  api_v1_dictionary: '/v1/search/dictionary', // Путь к словарю API v1\n  api_v2: '//v2', // Путь к версии API v2\n}\n                    \n                \n\n            \n                \n                    Константы и переменные для определения префиксов путей API\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        webClientsApiMethods\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  health: {\n    apime_check: '/health',\n  },\n  client: {\n    getClientById: (id: string) => `${prefix.api_v1}/client/${id}`,\n  },\n  search: {\n    clients: {\n      byAccount: `${prefix.api_v1_search}/clients/account`, // Номер лицевого счета\n      byName: `${prefix.api_v1_search}/clients/name`, // ФИО\n      byContract: `${prefix.api_v1_search}/clients/contract`, // Номер договора\n      byDocument: `${prefix.api_v1_search}/clients/document`, // Серия и номер паспорта\n      byMsisdn: `${prefix.api_v1_search}/clients/msisdn`, // Абонентский номеру\n      additionalPhoneNumber: `${prefix.api_v1_search}/clients/additional-phone-number`, // Дополнительный городской номер\n      byEquipment: `${prefix.api_v1_search}/clients/equipment`, // Номер Sim-карты ICC ID\n      byTitle: `${prefix.api_v1_search}/clients/name`, // Наименованию TODO допустить другое название метода\n    },\n    freeMsisdns: (payload: ISearchUnlinkedMsisdnsPayload) => {\n      // Поиск свободных номеров MSISDN генерация строки с костылем в виде escapePercent экранизации\n      const { msisdn, categoryId, regionId } = payload.input;\n      let query = `${\n        prefix.api_v1_search\n      }/unlinked-msisdns?msisdn=${escapePercent(msisdn)}`;\n      if (categoryId && categoryId.length > 0) {\n        query += categoryId\n          .map((id) => `&categoryId=${encodeURIComponent(id)}`)\n          .join('');\n      }\n      if (regionId && regionId.length > 0) {\n        query += regionId\n          .map((id) => `&regionId=${encodeURIComponent(id)}`)\n          .join('');\n      }\n\n      return query;\n    },\n  },\n  dictionary: {\n    client: {\n      clientType: `${prefix.api_v1_dictionary}/client/clientType`, // Тип клиента\n      juridicalType: `${prefix.api_v1_dictionary}/client/juridicalType`, // Тип юридического лица\n      documentType: `${prefix.api_v1_dictionary}/client/documentType`, // Тип документа клиента\n      addressType: `${prefix.api_v1_dictionary}/client/addressType`, // Тип адреса клиента\n      billingDeliveryType: `${prefix.api_v1_dictionary}/client/billingDeliveryType`, // Тип доставки счета клиента\n    },\n    address: {\n      country: `${prefix.api_v1_dictionary}/address/country`, // Словарь стран\n      regionType: `${prefix.api_v1_dictionary}/address/regionType`, // Тип региона\n      districtType: `${prefix.api_v1_dictionary}/address/districtType`, // Тип района\n      cityType: `${prefix.api_v1_dictionary}/address/cityType`, // Тип города\n      streetType: `${prefix.api_v1_dictionary}/address/streetType`, // Тип улицы\n    },\n  },\n}\n                    \n                \n\n            \n                \n                    Эндпоинты методов для работы через API.\n\n                \n            \n\n        \n    \n\n    libs/shared/src/lib/enums/search-area.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        searchAreaLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /* Ввод текста*/\n  [SearchAreaEnum.FIO]: 'ФИО',\n  [SearchAreaEnum.TITLE]: 'Название',\n  [SearchAreaEnum.PROCESSES]: 'Процессы', //таблица на бэке\n  [SearchAreaEnum.SERVICES]: 'Услуги', //таблица на бэке\n  [SearchAreaEnum.TARIFFS]: 'Тарифы', //таблица на бэке\n\n  /* Ввод цифр*/\n  [SearchAreaEnum.SUBSCRIBER_NUMBER]: 'Абонентский номер',\n  [SearchAreaEnum.MSISDN]: 'Номер телефона (свободный номер)',\n  [SearchAreaEnum.PASSPORT]: 'Паспорт',\n  [SearchAreaEnum.ACCOUNT_NUMBER]: 'Номер лицевого счета',\n  [SearchAreaEnum.CONTRACT_NUMBER]: 'Номер договора',\n  [SearchAreaEnum.DGN]: 'ДГН',\n  [SearchAreaEnum.ICC]: 'Номер sim-карты ICC',\n}\n                    \n                \n\n            \n                \n                    Области поиска меток для пользователя.\n\n                \n            \n\n        \n    \n\n    libs/shared/src/lib/types/state.type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StateSubscriberArgs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Args('state', {\n  nullable: true,\n  description: ' Сортировка по статусу абонента',\n  type: () => StateSubscriber,\n})\n                    \n                \n\n            \n                \n                    Аргумент StateSubscriberArgs используется в GraphQL для фильтрации по статусу абонента.\n\n                \n            \n\n        \n    \n\n    libs/shared/src/lib/types/optional-property.type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserTypeArg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Args('userType', {\n  nullable: true,\n  description: 'Сортировка по типу пользователя',\n  type: () => OptionalPropertyName,\n})\n                    \n                \n\n            \n                \n                    Аргумент UserTypeArg используется в GraphQL для фильтрации по типу пользователя.\n\n                \n            \n\n        \n    \n\n    apps/data-loader/src/app/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n  TZ: Joi.string().default('Asia/Yekaterinburg'),\n  RMQ_URL: Joi.string().required(),\n  RMQ_VHOST: Joi.string().default(''),\n  RMQ_QUEUE_DATA_LOADER: Joi.string().required(),\n  APIME_URI: Joi.string().required(),\n  APIME_PASS: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/journalization/src/app/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n  TZ: Joi.string().default('Asia/Yekaterinburg'),\n  RMQ_URL: Joi.string().required(),\n  RMQ_VHOST: Joi.string().default(''),\n  RMQ_QUEUE_JOURNALIZATION: Joi.string().required(),\n  PG_USER: Joi.string().required(),\n  PG_PASS: Joi.string().required(),\n  PG_DB: Joi.string().required(),\n  PG_PORT: Joi.number().default(5432),\n  PG_LOG: Joi.boolean().default(false),\n  DB_SYNC: Joi.boolean().default(false),\n  ELASTICSEARCH_NODE: Joi.string().uri().required(),\n})\n                    \n                \n\n\n        \n    \n\n    apps/graphql/src/app/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n  NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n  TZ: Joi.string().default('Asia/Yekaterinburg'),\n  PORT_GQL: Joi.number().default(3015),\n  RMQ_URL: Joi.string().required(),\n  RMQ_VHOST: Joi.string().default(''),\n  RMQ_QUEUE_GQL: Joi.string().required(),\n  RMQ_QUEUE_DATA_LOADER: Joi.string().required(),\n  RMQ_QUEUE_JOURNALIZATION: Joi.string().required(),\n  REDIS_HOST: Joi.string().default('localhost'),\n  REDIS_PORT: Joi.number().default(6379),\n  REDIS_PASS: Joi.string().required(),\n  KAFKA_BROKER: Joi.string().required(),\n  KAFKA_CLIENT_ID: Joi.string().required(),\n  KAFKA_GROUP_ID: Joi.string().required(),\n  // LOKI_HOST: Joi.string().uri().required(),\n  PLAYGROUND_GQL: Joi.boolean().default(false),\n\n  KEYCLOAK_HOST_PORT: Joi.string().required(),\n  KEYCLOAK_REALM: Joi.string().required(),\n  KEYCLOAK_CLIENT_ID: Joi.string().required(),\n  KEYCLOAK_CLIENT_SECRET: Joi.string().required(),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
