version: '3.8'
services:
  db:
    container_name: 'money-app-postgres'
    build:
      context: .
      dockerfile: ./db/pg/Dockerfile.postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: ${PG_PASS}
      TZ: Europe/Moscow
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data
      - ./db/pg/moneyapp.sql:/docker-entrypoint-initdb.d/moneyapp-db-init.sql
    networks:
      - money-app-network
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    networks:
      - money-app-network
    restart: unless-stopped      

  redis:
    image: redis:7
    restart: always
    container_name: 'redis'
    command: redis-server --requirepass ${REDIS_PASS}
    volumes:
      - ./docker-data/redis:/var/lib/redis
    ports:
      - 127.0.0.1:6380:6379
    networks:
      - money-app-network

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: 'rabbitmq'
    volumes:
      - ./docker-data/rabbitmq:/var/lib/rabbitmq/mnesia/
      - ./db/rabbitMQ/init-rabbitMQ/definitions.json:/etc/rabbitmq/definitions.json:ro
      - ./db/rabbitMQ/init-rabbitMQ/conf.d:/etc/rabbitmq/conf.d:ro
    environment:
      - RABBITMQ_DEFAULT_USER=${RMQ_DEF_USER}
      - RABBITMQ_DEFAULT_PASS=${RMQ_DEF_PASS}
    ports:
      - '127.0.0.1:5672:5672'
      - 15672:15672
    networks:
      - money-app-network

  bot:
    container_name: 'bot'
    build:
      cache_from:
        - money-base-image:nx-base
      context: ./
      dockerfile: ./apps/bot/Dockerfile
    image: bot:nx-prod
    restart: always
    depends_on:
      - db
      - redis
      - rabbitmq
      # - clickhouse
    environment:
      NODE_ENV: 'production'
      PG_HOST: db
      PG_PORT: ${PG_PORT}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_DB: ${PG_DB}
      DB_SYNC: ${DB_SYNC}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASS: ${REDIS_PASS}
      RMQ_URL: ${RMQ_URL}
      RMQ_QUEUE: ${RMQ_QUEUE}
      RMQ_DEF_USER: ${RMQ_DEF_USER}
      RMQ_DEF_PASS: ${RMQ_DEF_PASS}
      RMQ_QUEUE_DATA_LOADER: ${RMQ_QUEUE_DATA_LOADER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CH_DATABASE: ${CH_DATABASE}
      CH_URL: ${CH_URL}
      TELEGRAM_SESSION_HOST: ${TELEGRAM_SESSION_HOST}
      TELEGRAM_SESSION_PORT: ${TELEGRAM_SESSION_PORT}
      TELEGRAM_SESSION_PASS: ${TELEGRAM_SESSION_PASS}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      BOT_NAME: ${BOT_NAME}
      YOOMONEY_SHOPID: ${YOOMONEY_SHOPID}
      YOOMONEY_API_KEY: ${YOOMONEY_API_KEY}
      PG_CONNECT_ALLSTRING: ${PG_CONNECT_ALLSTRING}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      SEND_EMAIL: ${SEND_EMAIL}
      SMTP_LOGIN: ${SMTP_LOGIN}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
    networks:
      - money-app-network

  data-loader:
    container_name: 'data-loader'
    build:
      cache_from:
        - money-base-image:nx-base
      context: ./
      dockerfile: ./apps/data-loader/Dockerfile
    image: data-loader:nx-prod
    restart: always
    depends_on:
      - bot
      - redis
      - rabbitmq
      # - clickhouse
    environment:
      PG_HOST: db
      PG_PORT: ${PG_PORT}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_DB: ${PG_DB}
      DB_SYNC: ${DB_SYNC}
      NODE_ENV: 'production'
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASS: ${REDIS_PASS}
      RMQ_URL: ${RMQ_URL}
      RMQ_QUEUE: ${RMQ_QUEUE}
      RMQ_DEF_USER: ${RMQ_DEF_USER}
      RMQ_DEF_PASS: ${RMQ_DEF_PASS}
      RMQ_QUEUE_DATA_LOADER: ${RMQ_QUEUE_DATA_LOADER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CH_DATABASE: ${CH_DATABASE}
      CH_URL: ${CH_URL}
    networks:
      - money-app-network

  money-app:
    container_name: 'money-app'
    build:
      cache_from:
        - money-base-image:nx-base
      context: ./
      dockerfile: ./apps/money-app/Dockerfile
    image: money-app:nx-prod
    restart: always
    ports:
      - 3010:3010
    depends_on:
      - redis
      - rabbitmq
    environment:
      NODE_ENV: 'production'
      PG_HOST: db
      PG_PORT: ${PG_PORT}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_DB: ${PG_DB}
      DB_SYNC: ${DB_SYNC}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASS: ${REDIS_PASS}
      RMQ_URL: ${RMQ_URL}
      RMQ_QUEUE: ${RMQ_QUEUE}
      RMQ_DEF_USER: ${RMQ_DEF_USER}
      RMQ_DEF_PASS: ${RMQ_DEF_PASS}
      RMQ_QUEUE_DATA_LOADER: ${RMQ_QUEUE_DATA_LOADER}
      RMQ_QUEUE_MONEY_APP: ${RMQ_QUEUE_MONEY_APP}
      TELEGRAM_SESSION_HOST: ${TELEGRAM_SESSION_HOST}
      TELEGRAM_SESSION_PORT: ${TELEGRAM_SESSION_PORT}
      TELEGRAM_SESSION_PASS: ${TELEGRAM_SESSION_PASS}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      BOT_NAME: ${BOT_NAME}
    networks:
      - money-app-network

  grafana:
    container_name: grafana
    build:
      context: .
      dockerfile: ./grafana/Dockerfile.grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      PG_USER: ${PG_USER}
      PG_PASS: ${PG_PASS}
      PG_DB: ${PG_DB}
      REDIS_PASS: ${REDIS_PASS}
    depends_on:
      - prometheus
    networks:
      - money-app-network

  loki:
    image: grafana/loki:latest
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    depends_on:
      - grafana
    networks:
      - money-app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.qa.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - money-app-network
      
  # mini-web:
  #   build:
  #     cache_from:
  #       - money-base-image:nx-base
  #     context: .
  #     dockerfile: ./apps/mini-web/Dockerfile
  #     args:
  #       - NODE_ENV=production
  #       - BUILD_FLAG=--prod
  #   image: mini-web:nx-prod
  #   ports:
  #     - 4200:4200
  #   environment:
  #     NODE_ENV: 'production'
  #     PORT: 4200
  #   networks:
  #     - money-app-network
  #   restart: on-failure
  
  # nginx-mini-web:
  #   build:
  #     cache_from:
  #       - money-base-image:nx-base
  #     dockerfile: ./apps/mini-web/Dockerfile.nginx
  #   image: nginx:alpine
  #   # depends_on:
  #   #   - money-app
  #   volumes:
  #     - ./apps/mini-web/nginx.conf:/etc/nginx/nginx.conf
  #   restart: always
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     - money-app-network

      
networks:
  money-app-network:
    driver: bridge


  # clickhouse:
  #   container_name: 'money-ch'
  #   image: yandex/clickhouse-server
  #   ports:
  #     - '127.0.0.1:8123:8123'
  #     - '3015:3015'
  #   volumes:
  #     - ./docker-data/clickhouse:/var/lib/clickhouse
  #     - ./db/clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.xml
  #     - ./db/clickhouse/transaction.sql:/var/lib/clickhouse/metadata/money/transaction.sql
  #   networks:
  #     - money-app-network